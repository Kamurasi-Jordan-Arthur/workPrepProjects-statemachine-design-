//$file${Components::.::bsp.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: Pelican.qm
// File:  ${Components::.::bsp.h}
//
// This code has been generated by QM 7.0.1 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// Copyright (c) 2005 Quantum Leaps, LLC. All rights reserved.
//
//                 ____________________________________
//                /                                   /
//               /    GGGGGGG    PPPPPPPP   LL       /
//              /   GG     GG   PP     PP  LL       /
//             /   GG          PP     PP  LL       /
//            /   GG   GGGGG  PPPPPPPP   LL       /
//           /   GG      GG  PP         LL       /
//          /     GGGGGGG   PP         LLLLLLL  /
//         /___________________________________/
//
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open-source software licensed under the GNU
// General Public License (GPL) as published by the Free Software Foundation
// (see <https://www.gnu.org/licenses>).
//
// NOTE:
// The GPL does NOT permit the incorporation of this code into proprietary
// programs. Please contact Quantum Leaps for commercial licensing options,
// which expressly supersede the GPL and are designed explicitly for
// closed-source distribution.
//
// Quantum Leaps contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${Components::.::bsp.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#ifndef BSP_H_
#define BSP_H_
#include <stdint.h>
#define BSP_TICKS_PER_SEC    100U  //TODO

#define WELCOME_SMS     printf("Wellcome to the pelican test example !!! \
    \nPress \"1\"  \t\t\t\t(To make the System Operational),\
    \nand \"0\" \t\t\t\t(To turn it to Off-line mode,\
    \nWhen Operational, Press \"P or p\"  \t(To create Pedestrians sig),\
    \n\n")

void BSP_init(int argc, char *argv[]);
void BSP_onKeyboardInput(uint8_t key); // process the keyboard scan code


void BSP_UP_DATE();

void bspCarsGreen();
void bspCarsYellow();
void bspCarsRed();

void bspWalk();
void bspDontWalk();
void bspDontWalkFlash(uint8_t flash);



#endif // BSP_H_
