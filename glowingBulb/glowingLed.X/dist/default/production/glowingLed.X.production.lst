

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr  2 15:32:29 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,space=0,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=1
    44                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=1
    45                           	psect	intentry,global,class=CODE,space=0,delta=2
    46                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Generated 22/01/2025 GMT
    57                           ; 
    58                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F15244 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90     0008                     bsr             equ	8
    91     0005                     fsr0h           equ	5
    92     0004                     fsr0l           equ	4
    93     0007                     fsr1h           equ	7
    94     0006                     fsr1l           equ	6
    95     0000                     indf            equ	0
    96     0000                     indf0           equ	0
    97     0001                     indf1           equ	1
    98     000B                     intcon          equ	11
    99     0002                     pc              equ	2
   100     0002                     pcl             equ	2
   101     000A                     pclath          equ	10
   102     0003                     status          equ	3
   103     0009                     wreg            equ	9
   104     0000                     INDF0           equ	0	;# 
   105     0001                     INDF1           equ	1	;# 
   106     0002                     PCL             equ	2	;# 
   107     0003                     STATUS          equ	3	;# 
   108     0004                     FSR0L           equ	4	;# 
   109     0005                     FSR0H           equ	5	;# 
   110     0006                     FSR1L           equ	6	;# 
   111     0007                     FSR1H           equ	7	;# 
   112     0008                     BSR             equ	8	;# 
   113     0009                     WREG            equ	9	;# 
   114     000A                     PCLATH          equ	10	;# 
   115     000B                     INTCON          equ	11	;# 
   116     000C                     PORTA           equ	12	;# 
   117     000D                     PORTB           equ	13	;# 
   118     000E                     PORTC           equ	14	;# 
   119     0012                     TRISA           equ	18	;# 
   120     0013                     TRISB           equ	19	;# 
   121     0014                     TRISC           equ	20	;# 
   122     0018                     LATA            equ	24	;# 
   123     0019                     LATB            equ	25	;# 
   124     001A                     LATC            equ	26	;# 
   125     009A                     CPCON           equ	154	;# 
   126     009B                     ADRES           equ	155	;# 
   127     009B                     ADRESL          equ	155	;# 
   128     009C                     ADRESH          equ	156	;# 
   129     009D                     ADCON0          equ	157	;# 
   130     009E                     ADCON1          equ	158	;# 
   131     009F                     ADACT           equ	159	;# 
   132     010C                     RB4I2C          equ	268	;# 
   133     010D                     RB6I2C          equ	269	;# 
   134     0119                     RC1REG          equ	281	;# 
   135     011A                     TX1REG          equ	282	;# 
   136     011B                     SP1BRG          equ	283	;# 
   137     011B                     SP1BRGL         equ	283	;# 
   138     011C                     SP1BRGH         equ	284	;# 
   139     011D                     RC1STA          equ	285	;# 
   140     011E                     TX1STA          equ	286	;# 
   141     011F                     BAUD1CON        equ	287	;# 
   142     018C                     SSP1BUF         equ	396	;# 
   143     018D                     SSP1ADD         equ	397	;# 
   144     018E                     SSP1MSK         equ	398	;# 
   145     018F                     SSP1STAT        equ	399	;# 
   146     0190                     SSP1CON1        equ	400	;# 
   147     0191                     SSP1CON2        equ	401	;# 
   148     0192                     SSP1CON3        equ	402	;# 
   149     020C                     TMR1            equ	524	;# 
   150     020C                     TMR1L           equ	524	;# 
   151     020D                     TMR1H           equ	525	;# 
   152     020E                     T1CON           equ	526	;# 
   153     020E                     TMR1CON         equ	526	;# 
   154     020F                     T1GCON          equ	527	;# 
   155     020F                     TMR1GCON        equ	527	;# 
   156     0210                     T1GATE          equ	528	;# 
   157     0210                     TMR1GATE        equ	528	;# 
   158     0211                     T1CLK           equ	529	;# 
   159     0211                     TMR1CLK         equ	529	;# 
   160     0211                     PR1             equ	529	;# 
   161     028C                     T2TMR           equ	652	;# 
   162     028C                     TMR2            equ	652	;# 
   163     028D                     T2PR            equ	653	;# 
   164     028D                     PR2             equ	653	;# 
   165     028E                     T2CON           equ	654	;# 
   166     028F                     T2HLT           equ	655	;# 
   167     0290                     T2CLKCON        equ	656	;# 
   168     0291                     T2RST           equ	657	;# 
   169     030C                     CCPR1           equ	780	;# 
   170     030C                     CCPR1L          equ	780	;# 
   171     030D                     CCPR1H          equ	781	;# 
   172     030E                     CCP1CON         equ	782	;# 
   173     030F                     CCP1CAP         equ	783	;# 
   174     0310                     CCPR2           equ	784	;# 
   175     0310                     CCPR2L          equ	784	;# 
   176     0311                     CCPR2H          equ	785	;# 
   177     0312                     CCP2CON         equ	786	;# 
   178     0313                     CCP2CAP         equ	787	;# 
   179     0314                     PWM3DC          equ	788	;# 
   180     0314                     PWM3DCL         equ	788	;# 
   181     0315                     PWM3DCH         equ	789	;# 
   182     0316                     PWM3CON         equ	790	;# 
   183     0318                     PWM4DC          equ	792	;# 
   184     0318                     PWM4DCL         equ	792	;# 
   185     0319                     PWM4DCH         equ	793	;# 
   186     031A                     PWM4CON         equ	794	;# 
   187     059C                     TMR0L           equ	1436	;# 
   188     059C                     TMR0            equ	1436	;# 
   189     059D                     TMR0H           equ	1437	;# 
   190     059D                     PR0             equ	1437	;# 
   191     059E                     T0CON0          equ	1438	;# 
   192     059F                     T0CON1          equ	1439	;# 
   193     070C                     PIR0            equ	1804	;# 
   194     070D                     PIR1            equ	1805	;# 
   195     070E                     PIR2            equ	1806	;# 
   196     0716                     PIE0            equ	1814	;# 
   197     0717                     PIE1            equ	1815	;# 
   198     0718                     PIE2            equ	1816	;# 
   199     080C                     WDTCON          equ	2060	;# 
   200     0811                     BORCON          equ	2065	;# 
   201     0813                     PCON0           equ	2067	;# 
   202     0814                     PCON1           equ	2068	;# 
   203     081A                     NVMADR          equ	2074	;# 
   204     081A                     NVMADRL         equ	2074	;# 
   205     081B                     NVMADRH         equ	2075	;# 
   206     081C                     NVMDAT          equ	2076	;# 
   207     081C                     NVMDATL         equ	2076	;# 
   208     081D                     NVMDATH         equ	2077	;# 
   209     081E                     NVMCON1         equ	2078	;# 
   210     081F                     NVMCON2         equ	2079	;# 
   211     088E                     OSCCON          equ	2190	;# 
   212     0890                     OSCSTAT         equ	2192	;# 
   213     0891                     OSCEN           equ	2193	;# 
   214     0892                     OSCTUNE         equ	2194	;# 
   215     0893                     OSCFRQ          equ	2195	;# 
   216     090C                     FVRCON          equ	2316	;# 
   217     1E8F                     PPSLOCK         equ	7823	;# 
   218     1E90                     INTPPS          equ	7824	;# 
   219     1E91                     T0CKIPPS        equ	7825	;# 
   220     1E92                     T1CKIPPS        equ	7826	;# 
   221     1E93                     T1GPPS          equ	7827	;# 
   222     1E9C                     T2INPPS         equ	7836	;# 
   223     1EA1                     CCP1PPS         equ	7841	;# 
   224     1EA2                     CCP2PPS         equ	7842	;# 
   225     1EC3                     ADACTPPS        equ	7875	;# 
   226     1EC5                     SSP1CLKPPS      equ	7877	;# 
   227     1EC6                     SSP1DATPPS      equ	7878	;# 
   228     1EC7                     SSP1SSPPS       equ	7879	;# 
   229     1ECB                     RX1PPS          equ	7883	;# 
   230     1ECB                     RX1DTPPS        equ	7883	;# 
   231     1ECB                     RXPPS           equ	7883	;# 
   232     1ECC                     CK1PPS          equ	7884	;# 
   233     1ECC                     TX1CKPPS        equ	7884	;# 
   234     1ECC                     CKPPS           equ	7884	;# 
   235     1F10                     RA0PPS          equ	7952	;# 
   236     1F11                     RA1PPS          equ	7953	;# 
   237     1F12                     RA2PPS          equ	7954	;# 
   238     1F14                     RA4PPS          equ	7956	;# 
   239     1F15                     RA5PPS          equ	7957	;# 
   240     1F1C                     RB4PPS          equ	7964	;# 
   241     1F1D                     RB5PPS          equ	7965	;# 
   242     1F1E                     RB6PPS          equ	7966	;# 
   243     1F1F                     RB7PPS          equ	7967	;# 
   244     1F20                     RC0PPS          equ	7968	;# 
   245     1F21                     RC1PPS          equ	7969	;# 
   246     1F22                     RC2PPS          equ	7970	;# 
   247     1F23                     RC3PPS          equ	7971	;# 
   248     1F24                     RC4PPS          equ	7972	;# 
   249     1F25                     RC5PPS          equ	7973	;# 
   250     1F26                     RC6PPS          equ	7974	;# 
   251     1F27                     RC7PPS          equ	7975	;# 
   252     1F38                     ANSELA          equ	7992	;# 
   253     1F39                     WPUA            equ	7993	;# 
   254     1F3A                     ODCONA          equ	7994	;# 
   255     1F3B                     SLRCONA         equ	7995	;# 
   256     1F3C                     INLVLA          equ	7996	;# 
   257     1F3D                     IOCAP           equ	7997	;# 
   258     1F3E                     IOCAN           equ	7998	;# 
   259     1F3F                     IOCAF           equ	7999	;# 
   260     1F43                     ANSELB          equ	8003	;# 
   261     1F44                     WPUB            equ	8004	;# 
   262     1F45                     ODCONB          equ	8005	;# 
   263     1F46                     SLRCONB         equ	8006	;# 
   264     1F47                     INLVLB          equ	8007	;# 
   265     1F48                     IOCBP           equ	8008	;# 
   266     1F49                     IOCBN           equ	8009	;# 
   267     1F4A                     IOCBF           equ	8010	;# 
   268     1F4E                     ANSELC          equ	8014	;# 
   269     1F4F                     WPUC            equ	8015	;# 
   270     1F50                     ODCONC          equ	8016	;# 
   271     1F51                     SLRCONC         equ	8017	;# 
   272     1F52                     INLVLC          equ	8018	;# 
   273     1F53                     IOCCP           equ	8019	;# 
   274     1F54                     IOCCN           equ	8020	;# 
   275     1F55                     IOCCF           equ	8021	;# 
   276     1FE4                     STATUS_SHAD     equ	8164	;# 
   277     1FE5                     WREG_SHAD       equ	8165	;# 
   278     1FE6                     BSR_SHAD        equ	8166	;# 
   279     1FE7                     PCLATH_SHAD     equ	8167	;# 
   280     1FE8                     FSR0_SHAD       equ	8168	;# 
   281     1FE8                     FSR0L_SHAD      equ	8168	;# 
   282     1FE9                     FSR0H_SHAD      equ	8169	;# 
   283     1FEA                     FSR1L_SHAD      equ	8170	;# 
   284     1FEB                     FSR1H_SHAD      equ	8171	;# 
   285     1FED                     STKPTR          equ	8173	;# 
   286     1FEE                     TOSL            equ	8174	;# 
   287     1FEF                     TOSH            equ	8175	;# 
   288     0000                     INDF0           equ	0	;# 
   289     0001                     INDF1           equ	1	;# 
   290     0002                     PCL             equ	2	;# 
   291     0003                     STATUS          equ	3	;# 
   292     0004                     FSR0L           equ	4	;# 
   293     0005                     FSR0H           equ	5	;# 
   294     0006                     FSR1L           equ	6	;# 
   295     0007                     FSR1H           equ	7	;# 
   296     0008                     BSR             equ	8	;# 
   297     0009                     WREG            equ	9	;# 
   298     000A                     PCLATH          equ	10	;# 
   299     000B                     INTCON          equ	11	;# 
   300     000C                     PORTA           equ	12	;# 
   301     000D                     PORTB           equ	13	;# 
   302     000E                     PORTC           equ	14	;# 
   303     0012                     TRISA           equ	18	;# 
   304     0013                     TRISB           equ	19	;# 
   305     0014                     TRISC           equ	20	;# 
   306     0018                     LATA            equ	24	;# 
   307     0019                     LATB            equ	25	;# 
   308     001A                     LATC            equ	26	;# 
   309     009A                     CPCON           equ	154	;# 
   310     009B                     ADRES           equ	155	;# 
   311     009B                     ADRESL          equ	155	;# 
   312     009C                     ADRESH          equ	156	;# 
   313     009D                     ADCON0          equ	157	;# 
   314     009E                     ADCON1          equ	158	;# 
   315     009F                     ADACT           equ	159	;# 
   316     010C                     RB4I2C          equ	268	;# 
   317     010D                     RB6I2C          equ	269	;# 
   318     0119                     RC1REG          equ	281	;# 
   319     011A                     TX1REG          equ	282	;# 
   320     011B                     SP1BRG          equ	283	;# 
   321     011B                     SP1BRGL         equ	283	;# 
   322     011C                     SP1BRGH         equ	284	;# 
   323     011D                     RC1STA          equ	285	;# 
   324     011E                     TX1STA          equ	286	;# 
   325     011F                     BAUD1CON        equ	287	;# 
   326     018C                     SSP1BUF         equ	396	;# 
   327     018D                     SSP1ADD         equ	397	;# 
   328     018E                     SSP1MSK         equ	398	;# 
   329     018F                     SSP1STAT        equ	399	;# 
   330     0190                     SSP1CON1        equ	400	;# 
   331     0191                     SSP1CON2        equ	401	;# 
   332     0192                     SSP1CON3        equ	402	;# 
   333     020C                     TMR1            equ	524	;# 
   334     020C                     TMR1L           equ	524	;# 
   335     020D                     TMR1H           equ	525	;# 
   336     020E                     T1CON           equ	526	;# 
   337     020E                     TMR1CON         equ	526	;# 
   338     020F                     T1GCON          equ	527	;# 
   339     020F                     TMR1GCON        equ	527	;# 
   340     0210                     T1GATE          equ	528	;# 
   341     0210                     TMR1GATE        equ	528	;# 
   342     0211                     T1CLK           equ	529	;# 
   343     0211                     TMR1CLK         equ	529	;# 
   344     0211                     PR1             equ	529	;# 
   345     028C                     T2TMR           equ	652	;# 
   346     028C                     TMR2            equ	652	;# 
   347     028D                     T2PR            equ	653	;# 
   348     028D                     PR2             equ	653	;# 
   349     028E                     T2CON           equ	654	;# 
   350     028F                     T2HLT           equ	655	;# 
   351     0290                     T2CLKCON        equ	656	;# 
   352     0291                     T2RST           equ	657	;# 
   353     030C                     CCPR1           equ	780	;# 
   354     030C                     CCPR1L          equ	780	;# 
   355     030D                     CCPR1H          equ	781	;# 
   356     030E                     CCP1CON         equ	782	;# 
   357     030F                     CCP1CAP         equ	783	;# 
   358     0310                     CCPR2           equ	784	;# 
   359     0310                     CCPR2L          equ	784	;# 
   360     0311                     CCPR2H          equ	785	;# 
   361     0312                     CCP2CON         equ	786	;# 
   362     0313                     CCP2CAP         equ	787	;# 
   363     0314                     PWM3DC          equ	788	;# 
   364     0314                     PWM3DCL         equ	788	;# 
   365     0315                     PWM3DCH         equ	789	;# 
   366     0316                     PWM3CON         equ	790	;# 
   367     0318                     PWM4DC          equ	792	;# 
   368     0318                     PWM4DCL         equ	792	;# 
   369     0319                     PWM4DCH         equ	793	;# 
   370     031A                     PWM4CON         equ	794	;# 
   371     059C                     TMR0L           equ	1436	;# 
   372     059C                     TMR0            equ	1436	;# 
   373     059D                     TMR0H           equ	1437	;# 
   374     059D                     PR0             equ	1437	;# 
   375     059E                     T0CON0          equ	1438	;# 
   376     059F                     T0CON1          equ	1439	;# 
   377     070C                     PIR0            equ	1804	;# 
   378     070D                     PIR1            equ	1805	;# 
   379     070E                     PIR2            equ	1806	;# 
   380     0716                     PIE0            equ	1814	;# 
   381     0717                     PIE1            equ	1815	;# 
   382     0718                     PIE2            equ	1816	;# 
   383     080C                     WDTCON          equ	2060	;# 
   384     0811                     BORCON          equ	2065	;# 
   385     0813                     PCON0           equ	2067	;# 
   386     0814                     PCON1           equ	2068	;# 
   387     081A                     NVMADR          equ	2074	;# 
   388     081A                     NVMADRL         equ	2074	;# 
   389     081B                     NVMADRH         equ	2075	;# 
   390     081C                     NVMDAT          equ	2076	;# 
   391     081C                     NVMDATL         equ	2076	;# 
   392     081D                     NVMDATH         equ	2077	;# 
   393     081E                     NVMCON1         equ	2078	;# 
   394     081F                     NVMCON2         equ	2079	;# 
   395     088E                     OSCCON          equ	2190	;# 
   396     0890                     OSCSTAT         equ	2192	;# 
   397     0891                     OSCEN           equ	2193	;# 
   398     0892                     OSCTUNE         equ	2194	;# 
   399     0893                     OSCFRQ          equ	2195	;# 
   400     090C                     FVRCON          equ	2316	;# 
   401     1E8F                     PPSLOCK         equ	7823	;# 
   402     1E90                     INTPPS          equ	7824	;# 
   403     1E91                     T0CKIPPS        equ	7825	;# 
   404     1E92                     T1CKIPPS        equ	7826	;# 
   405     1E93                     T1GPPS          equ	7827	;# 
   406     1E9C                     T2INPPS         equ	7836	;# 
   407     1EA1                     CCP1PPS         equ	7841	;# 
   408     1EA2                     CCP2PPS         equ	7842	;# 
   409     1EC3                     ADACTPPS        equ	7875	;# 
   410     1EC5                     SSP1CLKPPS      equ	7877	;# 
   411     1EC6                     SSP1DATPPS      equ	7878	;# 
   412     1EC7                     SSP1SSPPS       equ	7879	;# 
   413     1ECB                     RX1PPS          equ	7883	;# 
   414     1ECB                     RX1DTPPS        equ	7883	;# 
   415     1ECB                     RXPPS           equ	7883	;# 
   416     1ECC                     CK1PPS          equ	7884	;# 
   417     1ECC                     TX1CKPPS        equ	7884	;# 
   418     1ECC                     CKPPS           equ	7884	;# 
   419     1F10                     RA0PPS          equ	7952	;# 
   420     1F11                     RA1PPS          equ	7953	;# 
   421     1F12                     RA2PPS          equ	7954	;# 
   422     1F14                     RA4PPS          equ	7956	;# 
   423     1F15                     RA5PPS          equ	7957	;# 
   424     1F1C                     RB4PPS          equ	7964	;# 
   425     1F1D                     RB5PPS          equ	7965	;# 
   426     1F1E                     RB6PPS          equ	7966	;# 
   427     1F1F                     RB7PPS          equ	7967	;# 
   428     1F20                     RC0PPS          equ	7968	;# 
   429     1F21                     RC1PPS          equ	7969	;# 
   430     1F22                     RC2PPS          equ	7970	;# 
   431     1F23                     RC3PPS          equ	7971	;# 
   432     1F24                     RC4PPS          equ	7972	;# 
   433     1F25                     RC5PPS          equ	7973	;# 
   434     1F26                     RC6PPS          equ	7974	;# 
   435     1F27                     RC7PPS          equ	7975	;# 
   436     1F38                     ANSELA          equ	7992	;# 
   437     1F39                     WPUA            equ	7993	;# 
   438     1F3A                     ODCONA          equ	7994	;# 
   439     1F3B                     SLRCONA         equ	7995	;# 
   440     1F3C                     INLVLA          equ	7996	;# 
   441     1F3D                     IOCAP           equ	7997	;# 
   442     1F3E                     IOCAN           equ	7998	;# 
   443     1F3F                     IOCAF           equ	7999	;# 
   444     1F43                     ANSELB          equ	8003	;# 
   445     1F44                     WPUB            equ	8004	;# 
   446     1F45                     ODCONB          equ	8005	;# 
   447     1F46                     SLRCONB         equ	8006	;# 
   448     1F47                     INLVLB          equ	8007	;# 
   449     1F48                     IOCBP           equ	8008	;# 
   450     1F49                     IOCBN           equ	8009	;# 
   451     1F4A                     IOCBF           equ	8010	;# 
   452     1F4E                     ANSELC          equ	8014	;# 
   453     1F4F                     WPUC            equ	8015	;# 
   454     1F50                     ODCONC          equ	8016	;# 
   455     1F51                     SLRCONC         equ	8017	;# 
   456     1F52                     INLVLC          equ	8018	;# 
   457     1F53                     IOCCP           equ	8019	;# 
   458     1F54                     IOCCN           equ	8020	;# 
   459     1F55                     IOCCF           equ	8021	;# 
   460     1FE4                     STATUS_SHAD     equ	8164	;# 
   461     1FE5                     WREG_SHAD       equ	8165	;# 
   462     1FE6                     BSR_SHAD        equ	8166	;# 
   463     1FE7                     PCLATH_SHAD     equ	8167	;# 
   464     1FE8                     FSR0_SHAD       equ	8168	;# 
   465     1FE8                     FSR0L_SHAD      equ	8168	;# 
   466     1FE9                     FSR0H_SHAD      equ	8169	;# 
   467     1FEA                     FSR1L_SHAD      equ	8170	;# 
   468     1FEB                     FSR1H_SHAD      equ	8171	;# 
   469     1FED                     STKPTR          equ	8173	;# 
   470     1FEE                     TOSL            equ	8174	;# 
   471     1FEF                     TOSH            equ	8175	;# 
   472     0000                     INDF0           equ	0	;# 
   473     0001                     INDF1           equ	1	;# 
   474     0002                     PCL             equ	2	;# 
   475     0003                     STATUS          equ	3	;# 
   476     0004                     FSR0L           equ	4	;# 
   477     0005                     FSR0H           equ	5	;# 
   478     0006                     FSR1L           equ	6	;# 
   479     0007                     FSR1H           equ	7	;# 
   480     0008                     BSR             equ	8	;# 
   481     0009                     WREG            equ	9	;# 
   482     000A                     PCLATH          equ	10	;# 
   483     000B                     INTCON          equ	11	;# 
   484     000C                     PORTA           equ	12	;# 
   485     000D                     PORTB           equ	13	;# 
   486     000E                     PORTC           equ	14	;# 
   487     0012                     TRISA           equ	18	;# 
   488     0013                     TRISB           equ	19	;# 
   489     0014                     TRISC           equ	20	;# 
   490     0018                     LATA            equ	24	;# 
   491     0019                     LATB            equ	25	;# 
   492     001A                     LATC            equ	26	;# 
   493     009A                     CPCON           equ	154	;# 
   494     009B                     ADRES           equ	155	;# 
   495     009B                     ADRESL          equ	155	;# 
   496     009C                     ADRESH          equ	156	;# 
   497     009D                     ADCON0          equ	157	;# 
   498     009E                     ADCON1          equ	158	;# 
   499     009F                     ADACT           equ	159	;# 
   500     010C                     RB4I2C          equ	268	;# 
   501     010D                     RB6I2C          equ	269	;# 
   502     0119                     RC1REG          equ	281	;# 
   503     011A                     TX1REG          equ	282	;# 
   504     011B                     SP1BRG          equ	283	;# 
   505     011B                     SP1BRGL         equ	283	;# 
   506     011C                     SP1BRGH         equ	284	;# 
   507     011D                     RC1STA          equ	285	;# 
   508     011E                     TX1STA          equ	286	;# 
   509     011F                     BAUD1CON        equ	287	;# 
   510     018C                     SSP1BUF         equ	396	;# 
   511     018D                     SSP1ADD         equ	397	;# 
   512     018E                     SSP1MSK         equ	398	;# 
   513     018F                     SSP1STAT        equ	399	;# 
   514     0190                     SSP1CON1        equ	400	;# 
   515     0191                     SSP1CON2        equ	401	;# 
   516     0192                     SSP1CON3        equ	402	;# 
   517     020C                     TMR1            equ	524	;# 
   518     020C                     TMR1L           equ	524	;# 
   519     020D                     TMR1H           equ	525	;# 
   520     020E                     T1CON           equ	526	;# 
   521     020E                     TMR1CON         equ	526	;# 
   522     020F                     T1GCON          equ	527	;# 
   523     020F                     TMR1GCON        equ	527	;# 
   524     0210                     T1GATE          equ	528	;# 
   525     0210                     TMR1GATE        equ	528	;# 
   526     0211                     T1CLK           equ	529	;# 
   527     0211                     TMR1CLK         equ	529	;# 
   528     0211                     PR1             equ	529	;# 
   529     028C                     T2TMR           equ	652	;# 
   530     028C                     TMR2            equ	652	;# 
   531     028D                     T2PR            equ	653	;# 
   532     028D                     PR2             equ	653	;# 
   533     028E                     T2CON           equ	654	;# 
   534     028F                     T2HLT           equ	655	;# 
   535     0290                     T2CLKCON        equ	656	;# 
   536     0291                     T2RST           equ	657	;# 
   537     030C                     CCPR1           equ	780	;# 
   538     030C                     CCPR1L          equ	780	;# 
   539     030D                     CCPR1H          equ	781	;# 
   540     030E                     CCP1CON         equ	782	;# 
   541     030F                     CCP1CAP         equ	783	;# 
   542     0310                     CCPR2           equ	784	;# 
   543     0310                     CCPR2L          equ	784	;# 
   544     0311                     CCPR2H          equ	785	;# 
   545     0312                     CCP2CON         equ	786	;# 
   546     0313                     CCP2CAP         equ	787	;# 
   547     0314                     PWM3DC          equ	788	;# 
   548     0314                     PWM3DCL         equ	788	;# 
   549     0315                     PWM3DCH         equ	789	;# 
   550     0316                     PWM3CON         equ	790	;# 
   551     0318                     PWM4DC          equ	792	;# 
   552     0318                     PWM4DCL         equ	792	;# 
   553     0319                     PWM4DCH         equ	793	;# 
   554     031A                     PWM4CON         equ	794	;# 
   555     059C                     TMR0L           equ	1436	;# 
   556     059C                     TMR0            equ	1436	;# 
   557     059D                     TMR0H           equ	1437	;# 
   558     059D                     PR0             equ	1437	;# 
   559     059E                     T0CON0          equ	1438	;# 
   560     059F                     T0CON1          equ	1439	;# 
   561     070C                     PIR0            equ	1804	;# 
   562     070D                     PIR1            equ	1805	;# 
   563     070E                     PIR2            equ	1806	;# 
   564     0716                     PIE0            equ	1814	;# 
   565     0717                     PIE1            equ	1815	;# 
   566     0718                     PIE2            equ	1816	;# 
   567     080C                     WDTCON          equ	2060	;# 
   568     0811                     BORCON          equ	2065	;# 
   569     0813                     PCON0           equ	2067	;# 
   570     0814                     PCON1           equ	2068	;# 
   571     081A                     NVMADR          equ	2074	;# 
   572     081A                     NVMADRL         equ	2074	;# 
   573     081B                     NVMADRH         equ	2075	;# 
   574     081C                     NVMDAT          equ	2076	;# 
   575     081C                     NVMDATL         equ	2076	;# 
   576     081D                     NVMDATH         equ	2077	;# 
   577     081E                     NVMCON1         equ	2078	;# 
   578     081F                     NVMCON2         equ	2079	;# 
   579     088E                     OSCCON          equ	2190	;# 
   580     0890                     OSCSTAT         equ	2192	;# 
   581     0891                     OSCEN           equ	2193	;# 
   582     0892                     OSCTUNE         equ	2194	;# 
   583     0893                     OSCFRQ          equ	2195	;# 
   584     090C                     FVRCON          equ	2316	;# 
   585     1E8F                     PPSLOCK         equ	7823	;# 
   586     1E90                     INTPPS          equ	7824	;# 
   587     1E91                     T0CKIPPS        equ	7825	;# 
   588     1E92                     T1CKIPPS        equ	7826	;# 
   589     1E93                     T1GPPS          equ	7827	;# 
   590     1E9C                     T2INPPS         equ	7836	;# 
   591     1EA1                     CCP1PPS         equ	7841	;# 
   592     1EA2                     CCP2PPS         equ	7842	;# 
   593     1EC3                     ADACTPPS        equ	7875	;# 
   594     1EC5                     SSP1CLKPPS      equ	7877	;# 
   595     1EC6                     SSP1DATPPS      equ	7878	;# 
   596     1EC7                     SSP1SSPPS       equ	7879	;# 
   597     1ECB                     RX1PPS          equ	7883	;# 
   598     1ECB                     RX1DTPPS        equ	7883	;# 
   599     1ECB                     RXPPS           equ	7883	;# 
   600     1ECC                     CK1PPS          equ	7884	;# 
   601     1ECC                     TX1CKPPS        equ	7884	;# 
   602     1ECC                     CKPPS           equ	7884	;# 
   603     1F10                     RA0PPS          equ	7952	;# 
   604     1F11                     RA1PPS          equ	7953	;# 
   605     1F12                     RA2PPS          equ	7954	;# 
   606     1F14                     RA4PPS          equ	7956	;# 
   607     1F15                     RA5PPS          equ	7957	;# 
   608     1F1C                     RB4PPS          equ	7964	;# 
   609     1F1D                     RB5PPS          equ	7965	;# 
   610     1F1E                     RB6PPS          equ	7966	;# 
   611     1F1F                     RB7PPS          equ	7967	;# 
   612     1F20                     RC0PPS          equ	7968	;# 
   613     1F21                     RC1PPS          equ	7969	;# 
   614     1F22                     RC2PPS          equ	7970	;# 
   615     1F23                     RC3PPS          equ	7971	;# 
   616     1F24                     RC4PPS          equ	7972	;# 
   617     1F25                     RC5PPS          equ	7973	;# 
   618     1F26                     RC6PPS          equ	7974	;# 
   619     1F27                     RC7PPS          equ	7975	;# 
   620     1F38                     ANSELA          equ	7992	;# 
   621     1F39                     WPUA            equ	7993	;# 
   622     1F3A                     ODCONA          equ	7994	;# 
   623     1F3B                     SLRCONA         equ	7995	;# 
   624     1F3C                     INLVLA          equ	7996	;# 
   625     1F3D                     IOCAP           equ	7997	;# 
   626     1F3E                     IOCAN           equ	7998	;# 
   627     1F3F                     IOCAF           equ	7999	;# 
   628     1F43                     ANSELB          equ	8003	;# 
   629     1F44                     WPUB            equ	8004	;# 
   630     1F45                     ODCONB          equ	8005	;# 
   631     1F46                     SLRCONB         equ	8006	;# 
   632     1F47                     INLVLB          equ	8007	;# 
   633     1F48                     IOCBP           equ	8008	;# 
   634     1F49                     IOCBN           equ	8009	;# 
   635     1F4A                     IOCBF           equ	8010	;# 
   636     1F4E                     ANSELC          equ	8014	;# 
   637     1F4F                     WPUC            equ	8015	;# 
   638     1F50                     ODCONC          equ	8016	;# 
   639     1F51                     SLRCONC         equ	8017	;# 
   640     1F52                     INLVLC          equ	8018	;# 
   641     1F53                     IOCCP           equ	8019	;# 
   642     1F54                     IOCCN           equ	8020	;# 
   643     1F55                     IOCCF           equ	8021	;# 
   644     1FE4                     STATUS_SHAD     equ	8164	;# 
   645     1FE5                     WREG_SHAD       equ	8165	;# 
   646     1FE6                     BSR_SHAD        equ	8166	;# 
   647     1FE7                     PCLATH_SHAD     equ	8167	;# 
   648     1FE8                     FSR0_SHAD       equ	8168	;# 
   649     1FE8                     FSR0L_SHAD      equ	8168	;# 
   650     1FE9                     FSR0H_SHAD      equ	8169	;# 
   651     1FEA                     FSR1L_SHAD      equ	8170	;# 
   652     1FEB                     FSR1H_SHAD      equ	8171	;# 
   653     1FED                     STKPTR          equ	8173	;# 
   654     1FEE                     TOSL            equ	8174	;# 
   655     1FEF                     TOSH            equ	8175	;# 
   656     0000                     INDF0           equ	0	;# 
   657     0001                     INDF1           equ	1	;# 
   658     0002                     PCL             equ	2	;# 
   659     0003                     STATUS          equ	3	;# 
   660     0004                     FSR0L           equ	4	;# 
   661     0005                     FSR0H           equ	5	;# 
   662     0006                     FSR1L           equ	6	;# 
   663     0007                     FSR1H           equ	7	;# 
   664     0008                     BSR             equ	8	;# 
   665     0009                     WREG            equ	9	;# 
   666     000A                     PCLATH          equ	10	;# 
   667     000B                     INTCON          equ	11	;# 
   668     000C                     PORTA           equ	12	;# 
   669     000D                     PORTB           equ	13	;# 
   670     000E                     PORTC           equ	14	;# 
   671     0012                     TRISA           equ	18	;# 
   672     0013                     TRISB           equ	19	;# 
   673     0014                     TRISC           equ	20	;# 
   674     0018                     LATA            equ	24	;# 
   675     0019                     LATB            equ	25	;# 
   676     001A                     LATC            equ	26	;# 
   677     009A                     CPCON           equ	154	;# 
   678     009B                     ADRES           equ	155	;# 
   679     009B                     ADRESL          equ	155	;# 
   680     009C                     ADRESH          equ	156	;# 
   681     009D                     ADCON0          equ	157	;# 
   682     009E                     ADCON1          equ	158	;# 
   683     009F                     ADACT           equ	159	;# 
   684     010C                     RB4I2C          equ	268	;# 
   685     010D                     RB6I2C          equ	269	;# 
   686     0119                     RC1REG          equ	281	;# 
   687     011A                     TX1REG          equ	282	;# 
   688     011B                     SP1BRG          equ	283	;# 
   689     011B                     SP1BRGL         equ	283	;# 
   690     011C                     SP1BRGH         equ	284	;# 
   691     011D                     RC1STA          equ	285	;# 
   692     011E                     TX1STA          equ	286	;# 
   693     011F                     BAUD1CON        equ	287	;# 
   694     018C                     SSP1BUF         equ	396	;# 
   695     018D                     SSP1ADD         equ	397	;# 
   696     018E                     SSP1MSK         equ	398	;# 
   697     018F                     SSP1STAT        equ	399	;# 
   698     0190                     SSP1CON1        equ	400	;# 
   699     0191                     SSP1CON2        equ	401	;# 
   700     0192                     SSP1CON3        equ	402	;# 
   701     020C                     TMR1            equ	524	;# 
   702     020C                     TMR1L           equ	524	;# 
   703     020D                     TMR1H           equ	525	;# 
   704     020E                     T1CON           equ	526	;# 
   705     020E                     TMR1CON         equ	526	;# 
   706     020F                     T1GCON          equ	527	;# 
   707     020F                     TMR1GCON        equ	527	;# 
   708     0210                     T1GATE          equ	528	;# 
   709     0210                     TMR1GATE        equ	528	;# 
   710     0211                     T1CLK           equ	529	;# 
   711     0211                     TMR1CLK         equ	529	;# 
   712     0211                     PR1             equ	529	;# 
   713     028C                     T2TMR           equ	652	;# 
   714     028C                     TMR2            equ	652	;# 
   715     028D                     T2PR            equ	653	;# 
   716     028D                     PR2             equ	653	;# 
   717     028E                     T2CON           equ	654	;# 
   718     028F                     T2HLT           equ	655	;# 
   719     0290                     T2CLKCON        equ	656	;# 
   720     0291                     T2RST           equ	657	;# 
   721     030C                     CCPR1           equ	780	;# 
   722     030C                     CCPR1L          equ	780	;# 
   723     030D                     CCPR1H          equ	781	;# 
   724     030E                     CCP1CON         equ	782	;# 
   725     030F                     CCP1CAP         equ	783	;# 
   726     0310                     CCPR2           equ	784	;# 
   727     0310                     CCPR2L          equ	784	;# 
   728     0311                     CCPR2H          equ	785	;# 
   729     0312                     CCP2CON         equ	786	;# 
   730     0313                     CCP2CAP         equ	787	;# 
   731     0314                     PWM3DC          equ	788	;# 
   732     0314                     PWM3DCL         equ	788	;# 
   733     0315                     PWM3DCH         equ	789	;# 
   734     0316                     PWM3CON         equ	790	;# 
   735     0318                     PWM4DC          equ	792	;# 
   736     0318                     PWM4DCL         equ	792	;# 
   737     0319                     PWM4DCH         equ	793	;# 
   738     031A                     PWM4CON         equ	794	;# 
   739     059C                     TMR0L           equ	1436	;# 
   740     059C                     TMR0            equ	1436	;# 
   741     059D                     TMR0H           equ	1437	;# 
   742     059D                     PR0             equ	1437	;# 
   743     059E                     T0CON0          equ	1438	;# 
   744     059F                     T0CON1          equ	1439	;# 
   745     070C                     PIR0            equ	1804	;# 
   746     070D                     PIR1            equ	1805	;# 
   747     070E                     PIR2            equ	1806	;# 
   748     0716                     PIE0            equ	1814	;# 
   749     0717                     PIE1            equ	1815	;# 
   750     0718                     PIE2            equ	1816	;# 
   751     080C                     WDTCON          equ	2060	;# 
   752     0811                     BORCON          equ	2065	;# 
   753     0813                     PCON0           equ	2067	;# 
   754     0814                     PCON1           equ	2068	;# 
   755     081A                     NVMADR          equ	2074	;# 
   756     081A                     NVMADRL         equ	2074	;# 
   757     081B                     NVMADRH         equ	2075	;# 
   758     081C                     NVMDAT          equ	2076	;# 
   759     081C                     NVMDATL         equ	2076	;# 
   760     081D                     NVMDATH         equ	2077	;# 
   761     081E                     NVMCON1         equ	2078	;# 
   762     081F                     NVMCON2         equ	2079	;# 
   763     088E                     OSCCON          equ	2190	;# 
   764     0890                     OSCSTAT         equ	2192	;# 
   765     0891                     OSCEN           equ	2193	;# 
   766     0892                     OSCTUNE         equ	2194	;# 
   767     0893                     OSCFRQ          equ	2195	;# 
   768     090C                     FVRCON          equ	2316	;# 
   769     1E8F                     PPSLOCK         equ	7823	;# 
   770     1E90                     INTPPS          equ	7824	;# 
   771     1E91                     T0CKIPPS        equ	7825	;# 
   772     1E92                     T1CKIPPS        equ	7826	;# 
   773     1E93                     T1GPPS          equ	7827	;# 
   774     1E9C                     T2INPPS         equ	7836	;# 
   775     1EA1                     CCP1PPS         equ	7841	;# 
   776     1EA2                     CCP2PPS         equ	7842	;# 
   777     1EC3                     ADACTPPS        equ	7875	;# 
   778     1EC5                     SSP1CLKPPS      equ	7877	;# 
   779     1EC6                     SSP1DATPPS      equ	7878	;# 
   780     1EC7                     SSP1SSPPS       equ	7879	;# 
   781     1ECB                     RX1PPS          equ	7883	;# 
   782     1ECB                     RX1DTPPS        equ	7883	;# 
   783     1ECB                     RXPPS           equ	7883	;# 
   784     1ECC                     CK1PPS          equ	7884	;# 
   785     1ECC                     TX1CKPPS        equ	7884	;# 
   786     1ECC                     CKPPS           equ	7884	;# 
   787     1F10                     RA0PPS          equ	7952	;# 
   788     1F11                     RA1PPS          equ	7953	;# 
   789     1F12                     RA2PPS          equ	7954	;# 
   790     1F14                     RA4PPS          equ	7956	;# 
   791     1F15                     RA5PPS          equ	7957	;# 
   792     1F1C                     RB4PPS          equ	7964	;# 
   793     1F1D                     RB5PPS          equ	7965	;# 
   794     1F1E                     RB6PPS          equ	7966	;# 
   795     1F1F                     RB7PPS          equ	7967	;# 
   796     1F20                     RC0PPS          equ	7968	;# 
   797     1F21                     RC1PPS          equ	7969	;# 
   798     1F22                     RC2PPS          equ	7970	;# 
   799     1F23                     RC3PPS          equ	7971	;# 
   800     1F24                     RC4PPS          equ	7972	;# 
   801     1F25                     RC5PPS          equ	7973	;# 
   802     1F26                     RC6PPS          equ	7974	;# 
   803     1F27                     RC7PPS          equ	7975	;# 
   804     1F38                     ANSELA          equ	7992	;# 
   805     1F39                     WPUA            equ	7993	;# 
   806     1F3A                     ODCONA          equ	7994	;# 
   807     1F3B                     SLRCONA         equ	7995	;# 
   808     1F3C                     INLVLA          equ	7996	;# 
   809     1F3D                     IOCAP           equ	7997	;# 
   810     1F3E                     IOCAN           equ	7998	;# 
   811     1F3F                     IOCAF           equ	7999	;# 
   812     1F43                     ANSELB          equ	8003	;# 
   813     1F44                     WPUB            equ	8004	;# 
   814     1F45                     ODCONB          equ	8005	;# 
   815     1F46                     SLRCONB         equ	8006	;# 
   816     1F47                     INLVLB          equ	8007	;# 
   817     1F48                     IOCBP           equ	8008	;# 
   818     1F49                     IOCBN           equ	8009	;# 
   819     1F4A                     IOCBF           equ	8010	;# 
   820     1F4E                     ANSELC          equ	8014	;# 
   821     1F4F                     WPUC            equ	8015	;# 
   822     1F50                     ODCONC          equ	8016	;# 
   823     1F51                     SLRCONC         equ	8017	;# 
   824     1F52                     INLVLC          equ	8018	;# 
   825     1F53                     IOCCP           equ	8019	;# 
   826     1F54                     IOCCN           equ	8020	;# 
   827     1F55                     IOCCF           equ	8021	;# 
   828     1FE4                     STATUS_SHAD     equ	8164	;# 
   829     1FE5                     WREG_SHAD       equ	8165	;# 
   830     1FE6                     BSR_SHAD        equ	8166	;# 
   831     1FE7                     PCLATH_SHAD     equ	8167	;# 
   832     1FE8                     FSR0_SHAD       equ	8168	;# 
   833     1FE8                     FSR0L_SHAD      equ	8168	;# 
   834     1FE9                     FSR0H_SHAD      equ	8169	;# 
   835     1FEA                     FSR1L_SHAD      equ	8170	;# 
   836     1FEB                     FSR1H_SHAD      equ	8171	;# 
   837     1FED                     STKPTR          equ	8173	;# 
   838     1FEE                     TOSL            equ	8174	;# 
   839     1FEF                     TOSH            equ	8175	;# 
   840     0000                     INDF0           equ	0	;# 
   841     0001                     INDF1           equ	1	;# 
   842     0002                     PCL             equ	2	;# 
   843     0003                     STATUS          equ	3	;# 
   844     0004                     FSR0L           equ	4	;# 
   845     0005                     FSR0H           equ	5	;# 
   846     0006                     FSR1L           equ	6	;# 
   847     0007                     FSR1H           equ	7	;# 
   848     0008                     BSR             equ	8	;# 
   849     0009                     WREG            equ	9	;# 
   850     000A                     PCLATH          equ	10	;# 
   851     000B                     INTCON          equ	11	;# 
   852     000C                     PORTA           equ	12	;# 
   853     000D                     PORTB           equ	13	;# 
   854     000E                     PORTC           equ	14	;# 
   855     0012                     TRISA           equ	18	;# 
   856     0013                     TRISB           equ	19	;# 
   857     0014                     TRISC           equ	20	;# 
   858     0018                     LATA            equ	24	;# 
   859     0019                     LATB            equ	25	;# 
   860     001A                     LATC            equ	26	;# 
   861     009A                     CPCON           equ	154	;# 
   862     009B                     ADRES           equ	155	;# 
   863     009B                     ADRESL          equ	155	;# 
   864     009C                     ADRESH          equ	156	;# 
   865     009D                     ADCON0          equ	157	;# 
   866     009E                     ADCON1          equ	158	;# 
   867     009F                     ADACT           equ	159	;# 
   868     010C                     RB4I2C          equ	268	;# 
   869     010D                     RB6I2C          equ	269	;# 
   870     0119                     RC1REG          equ	281	;# 
   871     011A                     TX1REG          equ	282	;# 
   872     011B                     SP1BRG          equ	283	;# 
   873     011B                     SP1BRGL         equ	283	;# 
   874     011C                     SP1BRGH         equ	284	;# 
   875     011D                     RC1STA          equ	285	;# 
   876     011E                     TX1STA          equ	286	;# 
   877     011F                     BAUD1CON        equ	287	;# 
   878     018C                     SSP1BUF         equ	396	;# 
   879     018D                     SSP1ADD         equ	397	;# 
   880     018E                     SSP1MSK         equ	398	;# 
   881     018F                     SSP1STAT        equ	399	;# 
   882     0190                     SSP1CON1        equ	400	;# 
   883     0191                     SSP1CON2        equ	401	;# 
   884     0192                     SSP1CON3        equ	402	;# 
   885     020C                     TMR1            equ	524	;# 
   886     020C                     TMR1L           equ	524	;# 
   887     020D                     TMR1H           equ	525	;# 
   888     020E                     T1CON           equ	526	;# 
   889     020E                     TMR1CON         equ	526	;# 
   890     020F                     T1GCON          equ	527	;# 
   891     020F                     TMR1GCON        equ	527	;# 
   892     0210                     T1GATE          equ	528	;# 
   893     0210                     TMR1GATE        equ	528	;# 
   894     0211                     T1CLK           equ	529	;# 
   895     0211                     TMR1CLK         equ	529	;# 
   896     0211                     PR1             equ	529	;# 
   897     028C                     T2TMR           equ	652	;# 
   898     028C                     TMR2            equ	652	;# 
   899     028D                     T2PR            equ	653	;# 
   900     028D                     PR2             equ	653	;# 
   901     028E                     T2CON           equ	654	;# 
   902     028F                     T2HLT           equ	655	;# 
   903     0290                     T2CLKCON        equ	656	;# 
   904     0291                     T2RST           equ	657	;# 
   905     030C                     CCPR1           equ	780	;# 
   906     030C                     CCPR1L          equ	780	;# 
   907     030D                     CCPR1H          equ	781	;# 
   908     030E                     CCP1CON         equ	782	;# 
   909     030F                     CCP1CAP         equ	783	;# 
   910     0310                     CCPR2           equ	784	;# 
   911     0310                     CCPR2L          equ	784	;# 
   912     0311                     CCPR2H          equ	785	;# 
   913     0312                     CCP2CON         equ	786	;# 
   914     0313                     CCP2CAP         equ	787	;# 
   915     0314                     PWM3DC          equ	788	;# 
   916     0314                     PWM3DCL         equ	788	;# 
   917     0315                     PWM3DCH         equ	789	;# 
   918     0316                     PWM3CON         equ	790	;# 
   919     0318                     PWM4DC          equ	792	;# 
   920     0318                     PWM4DCL         equ	792	;# 
   921     0319                     PWM4DCH         equ	793	;# 
   922     031A                     PWM4CON         equ	794	;# 
   923     059C                     TMR0L           equ	1436	;# 
   924     059C                     TMR0            equ	1436	;# 
   925     059D                     TMR0H           equ	1437	;# 
   926     059D                     PR0             equ	1437	;# 
   927     059E                     T0CON0          equ	1438	;# 
   928     059F                     T0CON1          equ	1439	;# 
   929     070C                     PIR0            equ	1804	;# 
   930     070D                     PIR1            equ	1805	;# 
   931     070E                     PIR2            equ	1806	;# 
   932     0716                     PIE0            equ	1814	;# 
   933     0717                     PIE1            equ	1815	;# 
   934     0718                     PIE2            equ	1816	;# 
   935     080C                     WDTCON          equ	2060	;# 
   936     0811                     BORCON          equ	2065	;# 
   937     0813                     PCON0           equ	2067	;# 
   938     0814                     PCON1           equ	2068	;# 
   939     081A                     NVMADR          equ	2074	;# 
   940     081A                     NVMADRL         equ	2074	;# 
   941     081B                     NVMADRH         equ	2075	;# 
   942     081C                     NVMDAT          equ	2076	;# 
   943     081C                     NVMDATL         equ	2076	;# 
   944     081D                     NVMDATH         equ	2077	;# 
   945     081E                     NVMCON1         equ	2078	;# 
   946     081F                     NVMCON2         equ	2079	;# 
   947     088E                     OSCCON          equ	2190	;# 
   948     0890                     OSCSTAT         equ	2192	;# 
   949     0891                     OSCEN           equ	2193	;# 
   950     0892                     OSCTUNE         equ	2194	;# 
   951     0893                     OSCFRQ          equ	2195	;# 
   952     090C                     FVRCON          equ	2316	;# 
   953     1E8F                     PPSLOCK         equ	7823	;# 
   954     1E90                     INTPPS          equ	7824	;# 
   955     1E91                     T0CKIPPS        equ	7825	;# 
   956     1E92                     T1CKIPPS        equ	7826	;# 
   957     1E93                     T1GPPS          equ	7827	;# 
   958     1E9C                     T2INPPS         equ	7836	;# 
   959     1EA1                     CCP1PPS         equ	7841	;# 
   960     1EA2                     CCP2PPS         equ	7842	;# 
   961     1EC3                     ADACTPPS        equ	7875	;# 
   962     1EC5                     SSP1CLKPPS      equ	7877	;# 
   963     1EC6                     SSP1DATPPS      equ	7878	;# 
   964     1EC7                     SSP1SSPPS       equ	7879	;# 
   965     1ECB                     RX1PPS          equ	7883	;# 
   966     1ECB                     RX1DTPPS        equ	7883	;# 
   967     1ECB                     RXPPS           equ	7883	;# 
   968     1ECC                     CK1PPS          equ	7884	;# 
   969     1ECC                     TX1CKPPS        equ	7884	;# 
   970     1ECC                     CKPPS           equ	7884	;# 
   971     1F10                     RA0PPS          equ	7952	;# 
   972     1F11                     RA1PPS          equ	7953	;# 
   973     1F12                     RA2PPS          equ	7954	;# 
   974     1F14                     RA4PPS          equ	7956	;# 
   975     1F15                     RA5PPS          equ	7957	;# 
   976     1F1C                     RB4PPS          equ	7964	;# 
   977     1F1D                     RB5PPS          equ	7965	;# 
   978     1F1E                     RB6PPS          equ	7966	;# 
   979     1F1F                     RB7PPS          equ	7967	;# 
   980     1F20                     RC0PPS          equ	7968	;# 
   981     1F21                     RC1PPS          equ	7969	;# 
   982     1F22                     RC2PPS          equ	7970	;# 
   983     1F23                     RC3PPS          equ	7971	;# 
   984     1F24                     RC4PPS          equ	7972	;# 
   985     1F25                     RC5PPS          equ	7973	;# 
   986     1F26                     RC6PPS          equ	7974	;# 
   987     1F27                     RC7PPS          equ	7975	;# 
   988     1F38                     ANSELA          equ	7992	;# 
   989     1F39                     WPUA            equ	7993	;# 
   990     1F3A                     ODCONA          equ	7994	;# 
   991     1F3B                     SLRCONA         equ	7995	;# 
   992     1F3C                     INLVLA          equ	7996	;# 
   993     1F3D                     IOCAP           equ	7997	;# 
   994     1F3E                     IOCAN           equ	7998	;# 
   995     1F3F                     IOCAF           equ	7999	;# 
   996     1F43                     ANSELB          equ	8003	;# 
   997     1F44                     WPUB            equ	8004	;# 
   998     1F45                     ODCONB          equ	8005	;# 
   999     1F46                     SLRCONB         equ	8006	;# 
  1000     1F47                     INLVLB          equ	8007	;# 
  1001     1F48                     IOCBP           equ	8008	;# 
  1002     1F49                     IOCBN           equ	8009	;# 
  1003     1F4A                     IOCBF           equ	8010	;# 
  1004     1F4E                     ANSELC          equ	8014	;# 
  1005     1F4F                     WPUC            equ	8015	;# 
  1006     1F50                     ODCONC          equ	8016	;# 
  1007     1F51                     SLRCONC         equ	8017	;# 
  1008     1F52                     INLVLC          equ	8018	;# 
  1009     1F53                     IOCCP           equ	8019	;# 
  1010     1F54                     IOCCN           equ	8020	;# 
  1011     1F55                     IOCCF           equ	8021	;# 
  1012     1FE4                     STATUS_SHAD     equ	8164	;# 
  1013     1FE5                     WREG_SHAD       equ	8165	;# 
  1014     1FE6                     BSR_SHAD        equ	8166	;# 
  1015     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1016     1FE8                     FSR0_SHAD       equ	8168	;# 
  1017     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1018     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1019     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1020     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1021     1FED                     STKPTR          equ	8173	;# 
  1022     1FEE                     TOSL            equ	8174	;# 
  1023     1FEF                     TOSH            equ	8175	;# 
  1024     0000                     INDF0           equ	0	;# 
  1025     0001                     INDF1           equ	1	;# 
  1026     0002                     PCL             equ	2	;# 
  1027     0003                     STATUS          equ	3	;# 
  1028     0004                     FSR0L           equ	4	;# 
  1029     0005                     FSR0H           equ	5	;# 
  1030     0006                     FSR1L           equ	6	;# 
  1031     0007                     FSR1H           equ	7	;# 
  1032     0008                     BSR             equ	8	;# 
  1033     0009                     WREG            equ	9	;# 
  1034     000A                     PCLATH          equ	10	;# 
  1035     000B                     INTCON          equ	11	;# 
  1036     000C                     PORTA           equ	12	;# 
  1037     000D                     PORTB           equ	13	;# 
  1038     000E                     PORTC           equ	14	;# 
  1039     0012                     TRISA           equ	18	;# 
  1040     0013                     TRISB           equ	19	;# 
  1041     0014                     TRISC           equ	20	;# 
  1042     0018                     LATA            equ	24	;# 
  1043     0019                     LATB            equ	25	;# 
  1044     001A                     LATC            equ	26	;# 
  1045     009A                     CPCON           equ	154	;# 
  1046     009B                     ADRES           equ	155	;# 
  1047     009B                     ADRESL          equ	155	;# 
  1048     009C                     ADRESH          equ	156	;# 
  1049     009D                     ADCON0          equ	157	;# 
  1050     009E                     ADCON1          equ	158	;# 
  1051     009F                     ADACT           equ	159	;# 
  1052     010C                     RB4I2C          equ	268	;# 
  1053     010D                     RB6I2C          equ	269	;# 
  1054     0119                     RC1REG          equ	281	;# 
  1055     011A                     TX1REG          equ	282	;# 
  1056     011B                     SP1BRG          equ	283	;# 
  1057     011B                     SP1BRGL         equ	283	;# 
  1058     011C                     SP1BRGH         equ	284	;# 
  1059     011D                     RC1STA          equ	285	;# 
  1060     011E                     TX1STA          equ	286	;# 
  1061     011F                     BAUD1CON        equ	287	;# 
  1062     018C                     SSP1BUF         equ	396	;# 
  1063     018D                     SSP1ADD         equ	397	;# 
  1064     018E                     SSP1MSK         equ	398	;# 
  1065     018F                     SSP1STAT        equ	399	;# 
  1066     0190                     SSP1CON1        equ	400	;# 
  1067     0191                     SSP1CON2        equ	401	;# 
  1068     0192                     SSP1CON3        equ	402	;# 
  1069     020C                     TMR1            equ	524	;# 
  1070     020C                     TMR1L           equ	524	;# 
  1071     020D                     TMR1H           equ	525	;# 
  1072     020E                     T1CON           equ	526	;# 
  1073     020E                     TMR1CON         equ	526	;# 
  1074     020F                     T1GCON          equ	527	;# 
  1075     020F                     TMR1GCON        equ	527	;# 
  1076     0210                     T1GATE          equ	528	;# 
  1077     0210                     TMR1GATE        equ	528	;# 
  1078     0211                     T1CLK           equ	529	;# 
  1079     0211                     TMR1CLK         equ	529	;# 
  1080     0211                     PR1             equ	529	;# 
  1081     028C                     T2TMR           equ	652	;# 
  1082     028C                     TMR2            equ	652	;# 
  1083     028D                     T2PR            equ	653	;# 
  1084     028D                     PR2             equ	653	;# 
  1085     028E                     T2CON           equ	654	;# 
  1086     028F                     T2HLT           equ	655	;# 
  1087     0290                     T2CLKCON        equ	656	;# 
  1088     0291                     T2RST           equ	657	;# 
  1089     030C                     CCPR1           equ	780	;# 
  1090     030C                     CCPR1L          equ	780	;# 
  1091     030D                     CCPR1H          equ	781	;# 
  1092     030E                     CCP1CON         equ	782	;# 
  1093     030F                     CCP1CAP         equ	783	;# 
  1094     0310                     CCPR2           equ	784	;# 
  1095     0310                     CCPR2L          equ	784	;# 
  1096     0311                     CCPR2H          equ	785	;# 
  1097     0312                     CCP2CON         equ	786	;# 
  1098     0313                     CCP2CAP         equ	787	;# 
  1099     0314                     PWM3DC          equ	788	;# 
  1100     0314                     PWM3DCL         equ	788	;# 
  1101     0315                     PWM3DCH         equ	789	;# 
  1102     0316                     PWM3CON         equ	790	;# 
  1103     0318                     PWM4DC          equ	792	;# 
  1104     0318                     PWM4DCL         equ	792	;# 
  1105     0319                     PWM4DCH         equ	793	;# 
  1106     031A                     PWM4CON         equ	794	;# 
  1107     059C                     TMR0L           equ	1436	;# 
  1108     059C                     TMR0            equ	1436	;# 
  1109     059D                     TMR0H           equ	1437	;# 
  1110     059D                     PR0             equ	1437	;# 
  1111     059E                     T0CON0          equ	1438	;# 
  1112     059F                     T0CON1          equ	1439	;# 
  1113     070C                     PIR0            equ	1804	;# 
  1114     070D                     PIR1            equ	1805	;# 
  1115     070E                     PIR2            equ	1806	;# 
  1116     0716                     PIE0            equ	1814	;# 
  1117     0717                     PIE1            equ	1815	;# 
  1118     0718                     PIE2            equ	1816	;# 
  1119     080C                     WDTCON          equ	2060	;# 
  1120     0811                     BORCON          equ	2065	;# 
  1121     0813                     PCON0           equ	2067	;# 
  1122     0814                     PCON1           equ	2068	;# 
  1123     081A                     NVMADR          equ	2074	;# 
  1124     081A                     NVMADRL         equ	2074	;# 
  1125     081B                     NVMADRH         equ	2075	;# 
  1126     081C                     NVMDAT          equ	2076	;# 
  1127     081C                     NVMDATL         equ	2076	;# 
  1128     081D                     NVMDATH         equ	2077	;# 
  1129     081E                     NVMCON1         equ	2078	;# 
  1130     081F                     NVMCON2         equ	2079	;# 
  1131     088E                     OSCCON          equ	2190	;# 
  1132     0890                     OSCSTAT         equ	2192	;# 
  1133     0891                     OSCEN           equ	2193	;# 
  1134     0892                     OSCTUNE         equ	2194	;# 
  1135     0893                     OSCFRQ          equ	2195	;# 
  1136     090C                     FVRCON          equ	2316	;# 
  1137     1E8F                     PPSLOCK         equ	7823	;# 
  1138     1E90                     INTPPS          equ	7824	;# 
  1139     1E91                     T0CKIPPS        equ	7825	;# 
  1140     1E92                     T1CKIPPS        equ	7826	;# 
  1141     1E93                     T1GPPS          equ	7827	;# 
  1142     1E9C                     T2INPPS         equ	7836	;# 
  1143     1EA1                     CCP1PPS         equ	7841	;# 
  1144     1EA2                     CCP2PPS         equ	7842	;# 
  1145     1EC3                     ADACTPPS        equ	7875	;# 
  1146     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1147     1EC6                     SSP1DATPPS      equ	7878	;# 
  1148     1EC7                     SSP1SSPPS       equ	7879	;# 
  1149     1ECB                     RX1PPS          equ	7883	;# 
  1150     1ECB                     RX1DTPPS        equ	7883	;# 
  1151     1ECB                     RXPPS           equ	7883	;# 
  1152     1ECC                     CK1PPS          equ	7884	;# 
  1153     1ECC                     TX1CKPPS        equ	7884	;# 
  1154     1ECC                     CKPPS           equ	7884	;# 
  1155     1F10                     RA0PPS          equ	7952	;# 
  1156     1F11                     RA1PPS          equ	7953	;# 
  1157     1F12                     RA2PPS          equ	7954	;# 
  1158     1F14                     RA4PPS          equ	7956	;# 
  1159     1F15                     RA5PPS          equ	7957	;# 
  1160     1F1C                     RB4PPS          equ	7964	;# 
  1161     1F1D                     RB5PPS          equ	7965	;# 
  1162     1F1E                     RB6PPS          equ	7966	;# 
  1163     1F1F                     RB7PPS          equ	7967	;# 
  1164     1F20                     RC0PPS          equ	7968	;# 
  1165     1F21                     RC1PPS          equ	7969	;# 
  1166     1F22                     RC2PPS          equ	7970	;# 
  1167     1F23                     RC3PPS          equ	7971	;# 
  1168     1F24                     RC4PPS          equ	7972	;# 
  1169     1F25                     RC5PPS          equ	7973	;# 
  1170     1F26                     RC6PPS          equ	7974	;# 
  1171     1F27                     RC7PPS          equ	7975	;# 
  1172     1F38                     ANSELA          equ	7992	;# 
  1173     1F39                     WPUA            equ	7993	;# 
  1174     1F3A                     ODCONA          equ	7994	;# 
  1175     1F3B                     SLRCONA         equ	7995	;# 
  1176     1F3C                     INLVLA          equ	7996	;# 
  1177     1F3D                     IOCAP           equ	7997	;# 
  1178     1F3E                     IOCAN           equ	7998	;# 
  1179     1F3F                     IOCAF           equ	7999	;# 
  1180     1F43                     ANSELB          equ	8003	;# 
  1181     1F44                     WPUB            equ	8004	;# 
  1182     1F45                     ODCONB          equ	8005	;# 
  1183     1F46                     SLRCONB         equ	8006	;# 
  1184     1F47                     INLVLB          equ	8007	;# 
  1185     1F48                     IOCBP           equ	8008	;# 
  1186     1F49                     IOCBN           equ	8009	;# 
  1187     1F4A                     IOCBF           equ	8010	;# 
  1188     1F4E                     ANSELC          equ	8014	;# 
  1189     1F4F                     WPUC            equ	8015	;# 
  1190     1F50                     ODCONC          equ	8016	;# 
  1191     1F51                     SLRCONC         equ	8017	;# 
  1192     1F52                     INLVLC          equ	8018	;# 
  1193     1F53                     IOCCP           equ	8019	;# 
  1194     1F54                     IOCCN           equ	8020	;# 
  1195     1F55                     IOCCF           equ	8021	;# 
  1196     1FE4                     STATUS_SHAD     equ	8164	;# 
  1197     1FE5                     WREG_SHAD       equ	8165	;# 
  1198     1FE6                     BSR_SHAD        equ	8166	;# 
  1199     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1200     1FE8                     FSR0_SHAD       equ	8168	;# 
  1201     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1202     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1203     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1204     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1205     1FED                     STKPTR          equ	8173	;# 
  1206     1FEE                     TOSL            equ	8174	;# 
  1207     1FEF                     TOSH            equ	8175	;# 
  1208     0000                     INDF0           equ	0	;# 
  1209     0001                     INDF1           equ	1	;# 
  1210     0002                     PCL             equ	2	;# 
  1211     0003                     STATUS          equ	3	;# 
  1212     0004                     FSR0L           equ	4	;# 
  1213     0005                     FSR0H           equ	5	;# 
  1214     0006                     FSR1L           equ	6	;# 
  1215     0007                     FSR1H           equ	7	;# 
  1216     0008                     BSR             equ	8	;# 
  1217     0009                     WREG            equ	9	;# 
  1218     000A                     PCLATH          equ	10	;# 
  1219     000B                     INTCON          equ	11	;# 
  1220     000C                     PORTA           equ	12	;# 
  1221     000D                     PORTB           equ	13	;# 
  1222     000E                     PORTC           equ	14	;# 
  1223     0012                     TRISA           equ	18	;# 
  1224     0013                     TRISB           equ	19	;# 
  1225     0014                     TRISC           equ	20	;# 
  1226     0018                     LATA            equ	24	;# 
  1227     0019                     LATB            equ	25	;# 
  1228     001A                     LATC            equ	26	;# 
  1229     009A                     CPCON           equ	154	;# 
  1230     009B                     ADRES           equ	155	;# 
  1231     009B                     ADRESL          equ	155	;# 
  1232     009C                     ADRESH          equ	156	;# 
  1233     009D                     ADCON0          equ	157	;# 
  1234     009E                     ADCON1          equ	158	;# 
  1235     009F                     ADACT           equ	159	;# 
  1236     010C                     RB4I2C          equ	268	;# 
  1237     010D                     RB6I2C          equ	269	;# 
  1238     0119                     RC1REG          equ	281	;# 
  1239     011A                     TX1REG          equ	282	;# 
  1240     011B                     SP1BRG          equ	283	;# 
  1241     011B                     SP1BRGL         equ	283	;# 
  1242     011C                     SP1BRGH         equ	284	;# 
  1243     011D                     RC1STA          equ	285	;# 
  1244     011E                     TX1STA          equ	286	;# 
  1245     011F                     BAUD1CON        equ	287	;# 
  1246     018C                     SSP1BUF         equ	396	;# 
  1247     018D                     SSP1ADD         equ	397	;# 
  1248     018E                     SSP1MSK         equ	398	;# 
  1249     018F                     SSP1STAT        equ	399	;# 
  1250     0190                     SSP1CON1        equ	400	;# 
  1251     0191                     SSP1CON2        equ	401	;# 
  1252     0192                     SSP1CON3        equ	402	;# 
  1253     020C                     TMR1            equ	524	;# 
  1254     020C                     TMR1L           equ	524	;# 
  1255     020D                     TMR1H           equ	525	;# 
  1256     020E                     T1CON           equ	526	;# 
  1257     020E                     TMR1CON         equ	526	;# 
  1258     020F                     T1GCON          equ	527	;# 
  1259     020F                     TMR1GCON        equ	527	;# 
  1260     0210                     T1GATE          equ	528	;# 
  1261     0210                     TMR1GATE        equ	528	;# 
  1262     0211                     T1CLK           equ	529	;# 
  1263     0211                     TMR1CLK         equ	529	;# 
  1264     0211                     PR1             equ	529	;# 
  1265     028C                     T2TMR           equ	652	;# 
  1266     028C                     TMR2            equ	652	;# 
  1267     028D                     T2PR            equ	653	;# 
  1268     028D                     PR2             equ	653	;# 
  1269     028E                     T2CON           equ	654	;# 
  1270     028F                     T2HLT           equ	655	;# 
  1271     0290                     T2CLKCON        equ	656	;# 
  1272     0291                     T2RST           equ	657	;# 
  1273     030C                     CCPR1           equ	780	;# 
  1274     030C                     CCPR1L          equ	780	;# 
  1275     030D                     CCPR1H          equ	781	;# 
  1276     030E                     CCP1CON         equ	782	;# 
  1277     030F                     CCP1CAP         equ	783	;# 
  1278     0310                     CCPR2           equ	784	;# 
  1279     0310                     CCPR2L          equ	784	;# 
  1280     0311                     CCPR2H          equ	785	;# 
  1281     0312                     CCP2CON         equ	786	;# 
  1282     0313                     CCP2CAP         equ	787	;# 
  1283     0314                     PWM3DC          equ	788	;# 
  1284     0314                     PWM3DCL         equ	788	;# 
  1285     0315                     PWM3DCH         equ	789	;# 
  1286     0316                     PWM3CON         equ	790	;# 
  1287     0318                     PWM4DC          equ	792	;# 
  1288     0318                     PWM4DCL         equ	792	;# 
  1289     0319                     PWM4DCH         equ	793	;# 
  1290     031A                     PWM4CON         equ	794	;# 
  1291     059C                     TMR0L           equ	1436	;# 
  1292     059C                     TMR0            equ	1436	;# 
  1293     059D                     TMR0H           equ	1437	;# 
  1294     059D                     PR0             equ	1437	;# 
  1295     059E                     T0CON0          equ	1438	;# 
  1296     059F                     T0CON1          equ	1439	;# 
  1297     070C                     PIR0            equ	1804	;# 
  1298     070D                     PIR1            equ	1805	;# 
  1299     070E                     PIR2            equ	1806	;# 
  1300     0716                     PIE0            equ	1814	;# 
  1301     0717                     PIE1            equ	1815	;# 
  1302     0718                     PIE2            equ	1816	;# 
  1303     080C                     WDTCON          equ	2060	;# 
  1304     0811                     BORCON          equ	2065	;# 
  1305     0813                     PCON0           equ	2067	;# 
  1306     0814                     PCON1           equ	2068	;# 
  1307     081A                     NVMADR          equ	2074	;# 
  1308     081A                     NVMADRL         equ	2074	;# 
  1309     081B                     NVMADRH         equ	2075	;# 
  1310     081C                     NVMDAT          equ	2076	;# 
  1311     081C                     NVMDATL         equ	2076	;# 
  1312     081D                     NVMDATH         equ	2077	;# 
  1313     081E                     NVMCON1         equ	2078	;# 
  1314     081F                     NVMCON2         equ	2079	;# 
  1315     088E                     OSCCON          equ	2190	;# 
  1316     0890                     OSCSTAT         equ	2192	;# 
  1317     0891                     OSCEN           equ	2193	;# 
  1318     0892                     OSCTUNE         equ	2194	;# 
  1319     0893                     OSCFRQ          equ	2195	;# 
  1320     090C                     FVRCON          equ	2316	;# 
  1321     1E8F                     PPSLOCK         equ	7823	;# 
  1322     1E90                     INTPPS          equ	7824	;# 
  1323     1E91                     T0CKIPPS        equ	7825	;# 
  1324     1E92                     T1CKIPPS        equ	7826	;# 
  1325     1E93                     T1GPPS          equ	7827	;# 
  1326     1E9C                     T2INPPS         equ	7836	;# 
  1327     1EA1                     CCP1PPS         equ	7841	;# 
  1328     1EA2                     CCP2PPS         equ	7842	;# 
  1329     1EC3                     ADACTPPS        equ	7875	;# 
  1330     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1331     1EC6                     SSP1DATPPS      equ	7878	;# 
  1332     1EC7                     SSP1SSPPS       equ	7879	;# 
  1333     1ECB                     RX1PPS          equ	7883	;# 
  1334     1ECB                     RX1DTPPS        equ	7883	;# 
  1335     1ECB                     RXPPS           equ	7883	;# 
  1336     1ECC                     CK1PPS          equ	7884	;# 
  1337     1ECC                     TX1CKPPS        equ	7884	;# 
  1338     1ECC                     CKPPS           equ	7884	;# 
  1339     1F10                     RA0PPS          equ	7952	;# 
  1340     1F11                     RA1PPS          equ	7953	;# 
  1341     1F12                     RA2PPS          equ	7954	;# 
  1342     1F14                     RA4PPS          equ	7956	;# 
  1343     1F15                     RA5PPS          equ	7957	;# 
  1344     1F1C                     RB4PPS          equ	7964	;# 
  1345     1F1D                     RB5PPS          equ	7965	;# 
  1346     1F1E                     RB6PPS          equ	7966	;# 
  1347     1F1F                     RB7PPS          equ	7967	;# 
  1348     1F20                     RC0PPS          equ	7968	;# 
  1349     1F21                     RC1PPS          equ	7969	;# 
  1350     1F22                     RC2PPS          equ	7970	;# 
  1351     1F23                     RC3PPS          equ	7971	;# 
  1352     1F24                     RC4PPS          equ	7972	;# 
  1353     1F25                     RC5PPS          equ	7973	;# 
  1354     1F26                     RC6PPS          equ	7974	;# 
  1355     1F27                     RC7PPS          equ	7975	;# 
  1356     1F38                     ANSELA          equ	7992	;# 
  1357     1F39                     WPUA            equ	7993	;# 
  1358     1F3A                     ODCONA          equ	7994	;# 
  1359     1F3B                     SLRCONA         equ	7995	;# 
  1360     1F3C                     INLVLA          equ	7996	;# 
  1361     1F3D                     IOCAP           equ	7997	;# 
  1362     1F3E                     IOCAN           equ	7998	;# 
  1363     1F3F                     IOCAF           equ	7999	;# 
  1364     1F43                     ANSELB          equ	8003	;# 
  1365     1F44                     WPUB            equ	8004	;# 
  1366     1F45                     ODCONB          equ	8005	;# 
  1367     1F46                     SLRCONB         equ	8006	;# 
  1368     1F47                     INLVLB          equ	8007	;# 
  1369     1F48                     IOCBP           equ	8008	;# 
  1370     1F49                     IOCBN           equ	8009	;# 
  1371     1F4A                     IOCBF           equ	8010	;# 
  1372     1F4E                     ANSELC          equ	8014	;# 
  1373     1F4F                     WPUC            equ	8015	;# 
  1374     1F50                     ODCONC          equ	8016	;# 
  1375     1F51                     SLRCONC         equ	8017	;# 
  1376     1F52                     INLVLC          equ	8018	;# 
  1377     1F53                     IOCCP           equ	8019	;# 
  1378     1F54                     IOCCN           equ	8020	;# 
  1379     1F55                     IOCCF           equ	8021	;# 
  1380     1FE4                     STATUS_SHAD     equ	8164	;# 
  1381     1FE5                     WREG_SHAD       equ	8165	;# 
  1382     1FE6                     BSR_SHAD        equ	8166	;# 
  1383     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1384     1FE8                     FSR0_SHAD       equ	8168	;# 
  1385     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1386     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1387     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1388     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1389     1FED                     STKPTR          equ	8173	;# 
  1390     1FEE                     TOSL            equ	8174	;# 
  1391     1FEF                     TOSH            equ	8175	;# 
  1392     0000                     INDF0           equ	0	;# 
  1393     0001                     INDF1           equ	1	;# 
  1394     0002                     PCL             equ	2	;# 
  1395     0003                     STATUS          equ	3	;# 
  1396     0004                     FSR0L           equ	4	;# 
  1397     0005                     FSR0H           equ	5	;# 
  1398     0006                     FSR1L           equ	6	;# 
  1399     0007                     FSR1H           equ	7	;# 
  1400     0008                     BSR             equ	8	;# 
  1401     0009                     WREG            equ	9	;# 
  1402     000A                     PCLATH          equ	10	;# 
  1403     000B                     INTCON          equ	11	;# 
  1404     000C                     PORTA           equ	12	;# 
  1405     000D                     PORTB           equ	13	;# 
  1406     000E                     PORTC           equ	14	;# 
  1407     0012                     TRISA           equ	18	;# 
  1408     0013                     TRISB           equ	19	;# 
  1409     0014                     TRISC           equ	20	;# 
  1410     0018                     LATA            equ	24	;# 
  1411     0019                     LATB            equ	25	;# 
  1412     001A                     LATC            equ	26	;# 
  1413     009A                     CPCON           equ	154	;# 
  1414     009B                     ADRES           equ	155	;# 
  1415     009B                     ADRESL          equ	155	;# 
  1416     009C                     ADRESH          equ	156	;# 
  1417     009D                     ADCON0          equ	157	;# 
  1418     009E                     ADCON1          equ	158	;# 
  1419     009F                     ADACT           equ	159	;# 
  1420     010C                     RB4I2C          equ	268	;# 
  1421     010D                     RB6I2C          equ	269	;# 
  1422     0119                     RC1REG          equ	281	;# 
  1423     011A                     TX1REG          equ	282	;# 
  1424     011B                     SP1BRG          equ	283	;# 
  1425     011B                     SP1BRGL         equ	283	;# 
  1426     011C                     SP1BRGH         equ	284	;# 
  1427     011D                     RC1STA          equ	285	;# 
  1428     011E                     TX1STA          equ	286	;# 
  1429     011F                     BAUD1CON        equ	287	;# 
  1430     018C                     SSP1BUF         equ	396	;# 
  1431     018D                     SSP1ADD         equ	397	;# 
  1432     018E                     SSP1MSK         equ	398	;# 
  1433     018F                     SSP1STAT        equ	399	;# 
  1434     0190                     SSP1CON1        equ	400	;# 
  1435     0191                     SSP1CON2        equ	401	;# 
  1436     0192                     SSP1CON3        equ	402	;# 
  1437     020C                     TMR1            equ	524	;# 
  1438     020C                     TMR1L           equ	524	;# 
  1439     020D                     TMR1H           equ	525	;# 
  1440     020E                     T1CON           equ	526	;# 
  1441     020E                     TMR1CON         equ	526	;# 
  1442     020F                     T1GCON          equ	527	;# 
  1443     020F                     TMR1GCON        equ	527	;# 
  1444     0210                     T1GATE          equ	528	;# 
  1445     0210                     TMR1GATE        equ	528	;# 
  1446     0211                     T1CLK           equ	529	;# 
  1447     0211                     TMR1CLK         equ	529	;# 
  1448     0211                     PR1             equ	529	;# 
  1449     028C                     T2TMR           equ	652	;# 
  1450     028C                     TMR2            equ	652	;# 
  1451     028D                     T2PR            equ	653	;# 
  1452     028D                     PR2             equ	653	;# 
  1453     028E                     T2CON           equ	654	;# 
  1454     028F                     T2HLT           equ	655	;# 
  1455     0290                     T2CLKCON        equ	656	;# 
  1456     0291                     T2RST           equ	657	;# 
  1457     030C                     CCPR1           equ	780	;# 
  1458     030C                     CCPR1L          equ	780	;# 
  1459     030D                     CCPR1H          equ	781	;# 
  1460     030E                     CCP1CON         equ	782	;# 
  1461     030F                     CCP1CAP         equ	783	;# 
  1462     0310                     CCPR2           equ	784	;# 
  1463     0310                     CCPR2L          equ	784	;# 
  1464     0311                     CCPR2H          equ	785	;# 
  1465     0312                     CCP2CON         equ	786	;# 
  1466     0313                     CCP2CAP         equ	787	;# 
  1467     0314                     PWM3DC          equ	788	;# 
  1468     0314                     PWM3DCL         equ	788	;# 
  1469     0315                     PWM3DCH         equ	789	;# 
  1470     0316                     PWM3CON         equ	790	;# 
  1471     0318                     PWM4DC          equ	792	;# 
  1472     0318                     PWM4DCL         equ	792	;# 
  1473     0319                     PWM4DCH         equ	793	;# 
  1474     031A                     PWM4CON         equ	794	;# 
  1475     059C                     TMR0L           equ	1436	;# 
  1476     059C                     TMR0            equ	1436	;# 
  1477     059D                     TMR0H           equ	1437	;# 
  1478     059D                     PR0             equ	1437	;# 
  1479     059E                     T0CON0          equ	1438	;# 
  1480     059F                     T0CON1          equ	1439	;# 
  1481     070C                     PIR0            equ	1804	;# 
  1482     070D                     PIR1            equ	1805	;# 
  1483     070E                     PIR2            equ	1806	;# 
  1484     0716                     PIE0            equ	1814	;# 
  1485     0717                     PIE1            equ	1815	;# 
  1486     0718                     PIE2            equ	1816	;# 
  1487     080C                     WDTCON          equ	2060	;# 
  1488     0811                     BORCON          equ	2065	;# 
  1489     0813                     PCON0           equ	2067	;# 
  1490     0814                     PCON1           equ	2068	;# 
  1491     081A                     NVMADR          equ	2074	;# 
  1492     081A                     NVMADRL         equ	2074	;# 
  1493     081B                     NVMADRH         equ	2075	;# 
  1494     081C                     NVMDAT          equ	2076	;# 
  1495     081C                     NVMDATL         equ	2076	;# 
  1496     081D                     NVMDATH         equ	2077	;# 
  1497     081E                     NVMCON1         equ	2078	;# 
  1498     081F                     NVMCON2         equ	2079	;# 
  1499     088E                     OSCCON          equ	2190	;# 
  1500     0890                     OSCSTAT         equ	2192	;# 
  1501     0891                     OSCEN           equ	2193	;# 
  1502     0892                     OSCTUNE         equ	2194	;# 
  1503     0893                     OSCFRQ          equ	2195	;# 
  1504     090C                     FVRCON          equ	2316	;# 
  1505     1E8F                     PPSLOCK         equ	7823	;# 
  1506     1E90                     INTPPS          equ	7824	;# 
  1507     1E91                     T0CKIPPS        equ	7825	;# 
  1508     1E92                     T1CKIPPS        equ	7826	;# 
  1509     1E93                     T1GPPS          equ	7827	;# 
  1510     1E9C                     T2INPPS         equ	7836	;# 
  1511     1EA1                     CCP1PPS         equ	7841	;# 
  1512     1EA2                     CCP2PPS         equ	7842	;# 
  1513     1EC3                     ADACTPPS        equ	7875	;# 
  1514     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1515     1EC6                     SSP1DATPPS      equ	7878	;# 
  1516     1EC7                     SSP1SSPPS       equ	7879	;# 
  1517     1ECB                     RX1PPS          equ	7883	;# 
  1518     1ECB                     RX1DTPPS        equ	7883	;# 
  1519     1ECB                     RXPPS           equ	7883	;# 
  1520     1ECC                     CK1PPS          equ	7884	;# 
  1521     1ECC                     TX1CKPPS        equ	7884	;# 
  1522     1ECC                     CKPPS           equ	7884	;# 
  1523     1F10                     RA0PPS          equ	7952	;# 
  1524     1F11                     RA1PPS          equ	7953	;# 
  1525     1F12                     RA2PPS          equ	7954	;# 
  1526     1F14                     RA4PPS          equ	7956	;# 
  1527     1F15                     RA5PPS          equ	7957	;# 
  1528     1F1C                     RB4PPS          equ	7964	;# 
  1529     1F1D                     RB5PPS          equ	7965	;# 
  1530     1F1E                     RB6PPS          equ	7966	;# 
  1531     1F1F                     RB7PPS          equ	7967	;# 
  1532     1F20                     RC0PPS          equ	7968	;# 
  1533     1F21                     RC1PPS          equ	7969	;# 
  1534     1F22                     RC2PPS          equ	7970	;# 
  1535     1F23                     RC3PPS          equ	7971	;# 
  1536     1F24                     RC4PPS          equ	7972	;# 
  1537     1F25                     RC5PPS          equ	7973	;# 
  1538     1F26                     RC6PPS          equ	7974	;# 
  1539     1F27                     RC7PPS          equ	7975	;# 
  1540     1F38                     ANSELA          equ	7992	;# 
  1541     1F39                     WPUA            equ	7993	;# 
  1542     1F3A                     ODCONA          equ	7994	;# 
  1543     1F3B                     SLRCONA         equ	7995	;# 
  1544     1F3C                     INLVLA          equ	7996	;# 
  1545     1F3D                     IOCAP           equ	7997	;# 
  1546     1F3E                     IOCAN           equ	7998	;# 
  1547     1F3F                     IOCAF           equ	7999	;# 
  1548     1F43                     ANSELB          equ	8003	;# 
  1549     1F44                     WPUB            equ	8004	;# 
  1550     1F45                     ODCONB          equ	8005	;# 
  1551     1F46                     SLRCONB         equ	8006	;# 
  1552     1F47                     INLVLB          equ	8007	;# 
  1553     1F48                     IOCBP           equ	8008	;# 
  1554     1F49                     IOCBN           equ	8009	;# 
  1555     1F4A                     IOCBF           equ	8010	;# 
  1556     1F4E                     ANSELC          equ	8014	;# 
  1557     1F4F                     WPUC            equ	8015	;# 
  1558     1F50                     ODCONC          equ	8016	;# 
  1559     1F51                     SLRCONC         equ	8017	;# 
  1560     1F52                     INLVLC          equ	8018	;# 
  1561     1F53                     IOCCP           equ	8019	;# 
  1562     1F54                     IOCCN           equ	8020	;# 
  1563     1F55                     IOCCF           equ	8021	;# 
  1564     1FE4                     STATUS_SHAD     equ	8164	;# 
  1565     1FE5                     WREG_SHAD       equ	8165	;# 
  1566     1FE6                     BSR_SHAD        equ	8166	;# 
  1567     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1568     1FE8                     FSR0_SHAD       equ	8168	;# 
  1569     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1570     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1571     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1572     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1573     1FED                     STKPTR          equ	8173	;# 
  1574     1FEE                     TOSL            equ	8174	;# 
  1575     1FEF                     TOSH            equ	8175	;# 
  1576     0000                     INDF0           equ	0	;# 
  1577     0001                     INDF1           equ	1	;# 
  1578     0002                     PCL             equ	2	;# 
  1579     0003                     STATUS          equ	3	;# 
  1580     0004                     FSR0L           equ	4	;# 
  1581     0005                     FSR0H           equ	5	;# 
  1582     0006                     FSR1L           equ	6	;# 
  1583     0007                     FSR1H           equ	7	;# 
  1584     0008                     BSR             equ	8	;# 
  1585     0009                     WREG            equ	9	;# 
  1586     000A                     PCLATH          equ	10	;# 
  1587     000B                     INTCON          equ	11	;# 
  1588     000C                     PORTA           equ	12	;# 
  1589     000D                     PORTB           equ	13	;# 
  1590     000E                     PORTC           equ	14	;# 
  1591     0012                     TRISA           equ	18	;# 
  1592     0013                     TRISB           equ	19	;# 
  1593     0014                     TRISC           equ	20	;# 
  1594     0018                     LATA            equ	24	;# 
  1595     0019                     LATB            equ	25	;# 
  1596     001A                     LATC            equ	26	;# 
  1597     009A                     CPCON           equ	154	;# 
  1598     009B                     ADRES           equ	155	;# 
  1599     009B                     ADRESL          equ	155	;# 
  1600     009C                     ADRESH          equ	156	;# 
  1601     009D                     ADCON0          equ	157	;# 
  1602     009E                     ADCON1          equ	158	;# 
  1603     009F                     ADACT           equ	159	;# 
  1604     010C                     RB4I2C          equ	268	;# 
  1605     010D                     RB6I2C          equ	269	;# 
  1606     0119                     RC1REG          equ	281	;# 
  1607     011A                     TX1REG          equ	282	;# 
  1608     011B                     SP1BRG          equ	283	;# 
  1609     011B                     SP1BRGL         equ	283	;# 
  1610     011C                     SP1BRGH         equ	284	;# 
  1611     011D                     RC1STA          equ	285	;# 
  1612     011E                     TX1STA          equ	286	;# 
  1613     011F                     BAUD1CON        equ	287	;# 
  1614     018C                     SSP1BUF         equ	396	;# 
  1615     018D                     SSP1ADD         equ	397	;# 
  1616     018E                     SSP1MSK         equ	398	;# 
  1617     018F                     SSP1STAT        equ	399	;# 
  1618     0190                     SSP1CON1        equ	400	;# 
  1619     0191                     SSP1CON2        equ	401	;# 
  1620     0192                     SSP1CON3        equ	402	;# 
  1621     020C                     TMR1            equ	524	;# 
  1622     020C                     TMR1L           equ	524	;# 
  1623     020D                     TMR1H           equ	525	;# 
  1624     020E                     T1CON           equ	526	;# 
  1625     020E                     TMR1CON         equ	526	;# 
  1626     020F                     T1GCON          equ	527	;# 
  1627     020F                     TMR1GCON        equ	527	;# 
  1628     0210                     T1GATE          equ	528	;# 
  1629     0210                     TMR1GATE        equ	528	;# 
  1630     0211                     T1CLK           equ	529	;# 
  1631     0211                     TMR1CLK         equ	529	;# 
  1632     0211                     PR1             equ	529	;# 
  1633     028C                     T2TMR           equ	652	;# 
  1634     028C                     TMR2            equ	652	;# 
  1635     028D                     T2PR            equ	653	;# 
  1636     028D                     PR2             equ	653	;# 
  1637     028E                     T2CON           equ	654	;# 
  1638     028F                     T2HLT           equ	655	;# 
  1639     0290                     T2CLKCON        equ	656	;# 
  1640     0291                     T2RST           equ	657	;# 
  1641     030C                     CCPR1           equ	780	;# 
  1642     030C                     CCPR1L          equ	780	;# 
  1643     030D                     CCPR1H          equ	781	;# 
  1644     030E                     CCP1CON         equ	782	;# 
  1645     030F                     CCP1CAP         equ	783	;# 
  1646     0310                     CCPR2           equ	784	;# 
  1647     0310                     CCPR2L          equ	784	;# 
  1648     0311                     CCPR2H          equ	785	;# 
  1649     0312                     CCP2CON         equ	786	;# 
  1650     0313                     CCP2CAP         equ	787	;# 
  1651     0314                     PWM3DC          equ	788	;# 
  1652     0314                     PWM3DCL         equ	788	;# 
  1653     0315                     PWM3DCH         equ	789	;# 
  1654     0316                     PWM3CON         equ	790	;# 
  1655     0318                     PWM4DC          equ	792	;# 
  1656     0318                     PWM4DCL         equ	792	;# 
  1657     0319                     PWM4DCH         equ	793	;# 
  1658     031A                     PWM4CON         equ	794	;# 
  1659     059C                     TMR0L           equ	1436	;# 
  1660     059C                     TMR0            equ	1436	;# 
  1661     059D                     TMR0H           equ	1437	;# 
  1662     059D                     PR0             equ	1437	;# 
  1663     059E                     T0CON0          equ	1438	;# 
  1664     059F                     T0CON1          equ	1439	;# 
  1665     070C                     PIR0            equ	1804	;# 
  1666     070D                     PIR1            equ	1805	;# 
  1667     070E                     PIR2            equ	1806	;# 
  1668     0716                     PIE0            equ	1814	;# 
  1669     0717                     PIE1            equ	1815	;# 
  1670     0718                     PIE2            equ	1816	;# 
  1671     080C                     WDTCON          equ	2060	;# 
  1672     0811                     BORCON          equ	2065	;# 
  1673     0813                     PCON0           equ	2067	;# 
  1674     0814                     PCON1           equ	2068	;# 
  1675     081A                     NVMADR          equ	2074	;# 
  1676     081A                     NVMADRL         equ	2074	;# 
  1677     081B                     NVMADRH         equ	2075	;# 
  1678     081C                     NVMDAT          equ	2076	;# 
  1679     081C                     NVMDATL         equ	2076	;# 
  1680     081D                     NVMDATH         equ	2077	;# 
  1681     081E                     NVMCON1         equ	2078	;# 
  1682     081F                     NVMCON2         equ	2079	;# 
  1683     088E                     OSCCON          equ	2190	;# 
  1684     0890                     OSCSTAT         equ	2192	;# 
  1685     0891                     OSCEN           equ	2193	;# 
  1686     0892                     OSCTUNE         equ	2194	;# 
  1687     0893                     OSCFRQ          equ	2195	;# 
  1688     090C                     FVRCON          equ	2316	;# 
  1689     1E8F                     PPSLOCK         equ	7823	;# 
  1690     1E90                     INTPPS          equ	7824	;# 
  1691     1E91                     T0CKIPPS        equ	7825	;# 
  1692     1E92                     T1CKIPPS        equ	7826	;# 
  1693     1E93                     T1GPPS          equ	7827	;# 
  1694     1E9C                     T2INPPS         equ	7836	;# 
  1695     1EA1                     CCP1PPS         equ	7841	;# 
  1696     1EA2                     CCP2PPS         equ	7842	;# 
  1697     1EC3                     ADACTPPS        equ	7875	;# 
  1698     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1699     1EC6                     SSP1DATPPS      equ	7878	;# 
  1700     1EC7                     SSP1SSPPS       equ	7879	;# 
  1701     1ECB                     RX1PPS          equ	7883	;# 
  1702     1ECB                     RX1DTPPS        equ	7883	;# 
  1703     1ECB                     RXPPS           equ	7883	;# 
  1704     1ECC                     CK1PPS          equ	7884	;# 
  1705     1ECC                     TX1CKPPS        equ	7884	;# 
  1706     1ECC                     CKPPS           equ	7884	;# 
  1707     1F10                     RA0PPS          equ	7952	;# 
  1708     1F11                     RA1PPS          equ	7953	;# 
  1709     1F12                     RA2PPS          equ	7954	;# 
  1710     1F14                     RA4PPS          equ	7956	;# 
  1711     1F15                     RA5PPS          equ	7957	;# 
  1712     1F1C                     RB4PPS          equ	7964	;# 
  1713     1F1D                     RB5PPS          equ	7965	;# 
  1714     1F1E                     RB6PPS          equ	7966	;# 
  1715     1F1F                     RB7PPS          equ	7967	;# 
  1716     1F20                     RC0PPS          equ	7968	;# 
  1717     1F21                     RC1PPS          equ	7969	;# 
  1718     1F22                     RC2PPS          equ	7970	;# 
  1719     1F23                     RC3PPS          equ	7971	;# 
  1720     1F24                     RC4PPS          equ	7972	;# 
  1721     1F25                     RC5PPS          equ	7973	;# 
  1722     1F26                     RC6PPS          equ	7974	;# 
  1723     1F27                     RC7PPS          equ	7975	;# 
  1724     1F38                     ANSELA          equ	7992	;# 
  1725     1F39                     WPUA            equ	7993	;# 
  1726     1F3A                     ODCONA          equ	7994	;# 
  1727     1F3B                     SLRCONA         equ	7995	;# 
  1728     1F3C                     INLVLA          equ	7996	;# 
  1729     1F3D                     IOCAP           equ	7997	;# 
  1730     1F3E                     IOCAN           equ	7998	;# 
  1731     1F3F                     IOCAF           equ	7999	;# 
  1732     1F43                     ANSELB          equ	8003	;# 
  1733     1F44                     WPUB            equ	8004	;# 
  1734     1F45                     ODCONB          equ	8005	;# 
  1735     1F46                     SLRCONB         equ	8006	;# 
  1736     1F47                     INLVLB          equ	8007	;# 
  1737     1F48                     IOCBP           equ	8008	;# 
  1738     1F49                     IOCBN           equ	8009	;# 
  1739     1F4A                     IOCBF           equ	8010	;# 
  1740     1F4E                     ANSELC          equ	8014	;# 
  1741     1F4F                     WPUC            equ	8015	;# 
  1742     1F50                     ODCONC          equ	8016	;# 
  1743     1F51                     SLRCONC         equ	8017	;# 
  1744     1F52                     INLVLC          equ	8018	;# 
  1745     1F53                     IOCCP           equ	8019	;# 
  1746     1F54                     IOCCN           equ	8020	;# 
  1747     1F55                     IOCCF           equ	8021	;# 
  1748     1FE4                     STATUS_SHAD     equ	8164	;# 
  1749     1FE5                     WREG_SHAD       equ	8165	;# 
  1750     1FE6                     BSR_SHAD        equ	8166	;# 
  1751     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1752     1FE8                     FSR0_SHAD       equ	8168	;# 
  1753     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1754     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1755     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1756     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1757     1FED                     STKPTR          equ	8173	;# 
  1758     1FEE                     TOSL            equ	8174	;# 
  1759     1FEF                     TOSH            equ	8175	;# 
  1760                           
  1761 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  1762     0000                     _INT_DefaultInterruptHandler equ	0
  1763                           
  1764 ;; Function _EUSART1_Deinitialize is unused but had its address taken
  1765     0000                     _EUSART1_Deinitialize equ	0
  1766                           
  1767 ;; Function _EUSART1_TransmitEnable is unused but had its address taken
  1768     0000                     _EUSART1_TransmitEnable equ	0
  1769                           
  1770 ;; Function _EUSART1_TransmitDisable is unused but had its address taken
  1771     0000                     _EUSART1_TransmitDisable equ	0
  1772                           
  1773 ;; Function _EUSART1_AutoBaudSet is unused but had its address taken
  1774     0000                     _EUSART1_AutoBaudSet equ	0
  1775                           
  1776 ;; Function _EUSART1_AutoBaudQuery is unused but had its address taken
  1777     0000                     _EUSART1_AutoBaudQuery equ	0
  1778                           
  1779 ;; Function _EUSART1_IsTxDone is unused but had its address taken
  1780     0000                     _EUSART1_IsTxDone equ	0
  1781                           
  1782 ;; Function _EUSART1_RxCompleteCallbackRegister is unused but had its address taken
  1783     0000                     _EUSART1_RxCompleteCallbackRegister equ	0
  1784                           
  1785 ;; Function _EUSART1_TxCompleteCallbackRegister is unused but had its address taken
  1786     0000                     _EUSART1_TxCompleteCallbackRegister equ	0
  1787                           
  1788                           	psect	idataBANK0
  1789     04DC                     __pidataBANK0:
  1790                           
  1791                           ;initializer for _UART
  1792     04DC  342E               	retlw	low (_UART1| (0+32768))
  1793     04DD  3483               	retlw	high (_UART1| (0+32768))
  1794                           
  1795                           ;initializer for main@increment
  1796     04DE  3401               	retlw	1
  1797                           
  1798                           	psect	stringtext1
  1799     04D4                     __pstringtext1:
  1800     04D4                     _DVRT:
  1801     04D4  3446               	retlw	low _DVRT_Initialize
  1802     04D5  3402               	retlw	high _DVRT_Initialize
  1803     04D6  3430               	retlw	low _DVRT_Process
  1804     04D7  3401               	retlw	high _DVRT_Process
  1805     04D8                     __end_of_DVRT:
  1806                           
  1807                           	psect	stringtext2
  1808     04DF                     __pstringtext2:
  1809     04DF                     _dvIdFw:
  1810     04DF  3405               	retlw	5
  1811     04E0  3401               	retlw	1
  1812     04E1                     __end_of_dvIdFw:
  1813                           
  1814                           	psect	stringtext3
  1815     032E                     __pstringtext3:
  1816     032E                     _UART1:
  1817     032E  34FB               	retlw	low _EUSART1_Initialize
  1818     032F  3402               	retlw	high _EUSART1_Initialize
  1819     0330  3400               	retlw	0
  1820     0331  3400               	retlw	0
  1821     0332  34F0               	retlw	low _EUSART1_Read
  1822     0333  3403               	retlw	high _EUSART1_Read
  1823     0334  345E               	retlw	low _EUSART1_Write
  1824     0335  3403               	retlw	high _EUSART1_Write
  1825     0336  349F               	retlw	low _EUSART1_IsRxReady
  1826     0337  3404               	retlw	high _EUSART1_IsRxReady
  1827     0338  34A8               	retlw	low _EUSART1_IsTxReady
  1828     0339  3404               	retlw	high _EUSART1_IsTxReady
  1829     033A  3400               	retlw	0
  1830     033B  3400               	retlw	0
  1831     033C  3400               	retlw	0
  1832     033D  3400               	retlw	0
  1833     033E  3400               	retlw	0
  1834     033F  3400               	retlw	0
  1835     0340  3400               	retlw	0
  1836     0341  3400               	retlw	0
  1837     0342  3400               	retlw	0
  1838     0343  3400               	retlw	0
  1839     0344  3400               	retlw	0
  1840     0345  3400               	retlw	0
  1841     0346  3400               	retlw	0
  1842     0347  3400               	retlw	0
  1843     0348  3400               	retlw	0
  1844     0349  3400               	retlw	0
  1845     034A  3400               	retlw	0
  1846     034B  3400               	retlw	0
  1847     034C  3400               	retlw	0
  1848     034D  3400               	retlw	0
  1849     034E  346E               	retlw	low _EUSART1_ErrorGet
  1850     034F  3404               	retlw	high _EUSART1_ErrorGet
  1851     0350  3400               	retlw	0
  1852     0351  3400               	retlw	0
  1853     0352  3400               	retlw	0
  1854     0353  3400               	retlw	0
  1855     0354  3400               	retlw	0
  1856     0355  3400               	retlw	0
  1857     0356  3488               	retlw	low _EUSART1_FramingErrorCallbackRegister
  1858     0357  3404               	retlw	high _EUSART1_FramingErrorCallbackRegister
  1859     0358  347C               	retlw	low _EUSART1_OverrunErrorCallbackRegister
  1860     0359  3404               	retlw	high _EUSART1_OverrunErrorCallbackRegister
  1861     035A  3400               	retlw	0
  1862     035B  3400               	retlw	0
  1863     035C  3400               	retlw	0
  1864     035D  3400               	retlw	0
  1865     035E                     __end_of_UART1:
  1866                           
  1867                           	psect	nvBANK0
  1868     006D                     __pnvBANK0:
  1869     006D                     _TMR2_PeriodMatchCallback:
  1870     006D                     	ds	2
  1871     0012                     _TRISAbits      set	18
  1872     000B                     _INTCONbits     set	11
  1873     0014                     _TRISC          set	20
  1874     0013                     _TRISB          set	19
  1875     0012                     _TRISA          set	18
  1876     001A                     _LATC           set	26
  1877     0019                     _LATB           set	25
  1878     0018                     _LATA           set	24
  1879     011A                     _TX1REG         set	282
  1880     0119                     _RC1REG         set	281
  1881     011F                     _BAUD1CONbits   set	287
  1882     011E                     _TX1STAbits     set	286
  1883     011D                     _RC1STAbits     set	285
  1884     011C                     _SP1BRGH        set	284
  1885     011B                     _SP1BRGL        set	283
  1886     011E                     _TX1STA         set	286
  1887     011D                     _RC1STA         set	285
  1888     011F                     _BAUD1CON       set	287
  1889     0291                     _T2RSTbits      set	657
  1890     028F                     _T2HLTbits      set	655
  1891     028E                     _T2CONbits      set	654
  1892     028E                     _T2CON          set	654
  1893     028C                     _T2TMR          set	652
  1894     028D                     _T2PR           set	653
  1895     0291                     _T2RST          set	657
  1896     028F                     _T2HLT          set	655
  1897     0290                     _T2CLKCON       set	656
  1898     0314                     _PWM3DCL        set	788
  1899     0315                     _PWM3DCH        set	789
  1900     0316                     _PWM3CON        set	790
  1901     070D                     _PIR1bits       set	1805
  1902     0717                     _PIE1bits       set	1815
  1903     070C                     _PIR0bits       set	1804
  1904     0892                     _OSCTUNE        set	2194
  1905     0893                     _OSCFRQ         set	2195
  1906     0891                     _OSCEN          set	2193
  1907     1ECB                     _RX1PPS         set	7883
  1908     1F38                     _ANSELAbits     set	7992
  1909     1F55                     _IOCCF          set	8021
  1910     1F54                     _IOCCN          set	8020
  1911     1F53                     _IOCCP          set	8019
  1912     1F4A                     _IOCBF          set	8010
  1913     1F49                     _IOCBN          set	8009
  1914     1F48                     _IOCBP          set	8008
  1915     1F3F                     _IOCAF          set	7999
  1916     1F3E                     _IOCAN          set	7998
  1917     1F3D                     _IOCAP          set	7997
  1918     1F20                     _RC0PPS         set	7968
  1919     1F12                     _RA2PPS         set	7954
  1920     1F52                     _INLVLC         set	8018
  1921     1F47                     _INLVLB         set	8007
  1922     1F3C                     _INLVLA         set	7996
  1923     1F51                     _SLRCONC        set	8017
  1924     1F46                     _SLRCONB        set	8006
  1925     1F3B                     _SLRCONA        set	7995
  1926     1F50                     _ODCONC         set	8016
  1927     1F45                     _ODCONB         set	8005
  1928     1F3A                     _ODCONA         set	7994
  1929     1F4F                     _WPUC           set	8015
  1930     1F44                     _WPUB           set	8004
  1931     1F39                     _WPUA           set	7993
  1932     1F4E                     _ANSELC         set	8014
  1933     1F43                     _ANSELB         set	8003
  1934     1F38                     _ANSELA         set	7992
  1935                           
  1936                           	psect	cinit
  1937     0039                     start_initialization:	
  1938                           ; #config settings
  1939                           
  1940     0039                     __initialization:
  1941                           
  1942                           ; Initialize objects allocated to BANK0
  1943     0039  3184  24DC  3180   	fcall	__pidataBANK0	;fetch initializer
  1944     003C  00EA               	movwf	__pdataBANK0& (0+127)
  1945     003D  3184  24DD  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1946     0040  00EB               	movwf	(__pdataBANK0+1)& (0+127)
  1947     0041  3184  24DE  3180   	fcall	__pidataBANK0+2	;fetch initializer
  1948     0044  00EC               	movwf	(__pdataBANK0+2)& (0+127)
  1949                           
  1950                           ; Clear objects allocated to COMMON
  1951     0045  01F9               	clrf	__pbssCOMMON& (0+127)
  1952     0046  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1953                           
  1954                           ; Clear objects allocated to BANK0
  1955     0047  3020               	movlw	low __pbssBANK0
  1956     0048  0084               	movwf	4
  1957     0049  3000               	movlw	high __pbssBANK0
  1958     004A  0085               	movwf	5
  1959     004B  3043               	movlw	67
  1960     004C  3184  24B8  3180   	fcall	clear_ram0
  1961                           
  1962                           ; Clear objects allocated to BANK1
  1963     004F  30A0               	movlw	low __pbssBANK1
  1964     0050  0084               	movwf	4
  1965     0051  3000               	movlw	high __pbssBANK1
  1966     0052  0085               	movwf	5
  1967     0053  303C               	movlw	60
  1968     0054  3184  24B8  3180   	fcall	clear_ram0
  1969                           
  1970                           ; Clear objects allocated to BANK2
  1971     0057  3020               	movlw	low __pbssBANK2
  1972     0058  0084               	movwf	4
  1973     0059  3001               	movlw	high __pbssBANK2
  1974     005A  0085               	movwf	5
  1975     005B  3040               	movlw	64
  1976     005C  3184  24B8  3180   	fcall	clear_ram0
  1977     005F                     end_of_initialization:	
  1978                           ;End of C runtime variable initialization code
  1979                           
  1980     005F                     __end_of__initialization:
  1981     005F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1982     0060  0140               	movlb	0
  1983     0061  3182  2A8C         	ljmp	_main	;jump to C main() function
  1984                           
  1985                           	psect	bssCOMMON
  1986     0079                     __pbssCOMMON:
  1987     0079                     _eusart1RxTail:
  1988     0079                     	ds	1
  1989     007A                     _eusart1RxHead:
  1990     007A                     	ds	1
  1991                           
  1992                           	psect	bssBANK0
  1993     0020                     __pbssBANK0:
  1994     0020                     _DVPMT:
  1995     0020                     	ds	24
  1996     0038                     _eusart1TxBuffer:
  1997     0038                     	ds	8
  1998     0040                     _EUSART1_OverrunErrorHandler:
  1999     0040                     	ds	2
  2000     0042                     _EUSART1_FramingErrorHandler:
  2001     0042                     	ds	2
  2002     0044                     _EUSART1_RxCompleteInterruptHandler:
  2003     0044                     	ds	2
  2004     0046                     _EUSART1_TxCompleteInterruptHandler:
  2005     0046                     	ds	2
  2006     0048                     _eusart1RxLastError:
  2007     0048                     	ds	2
  2008     004A                     _INT_InterruptHandler:
  2009     004A                     	ds	2
  2010     004C                     _EUSART1_RxInterruptHandler:
  2011     004C                     	ds	2
  2012     004E                     _EUSART1_TxInterruptHandler:
  2013     004E                     	ds	2
  2014     0050                     _DVCmdInterval_Counter:
  2015     0050                     	ds	2
  2016     0052                     _DVCmdInterval:
  2017     0052                     	ds	2
  2018     0054                     _DVStreamInterval_Counter:
  2019     0054                     	ds	2
  2020     0056                     _DVStreamInterval:
  2021     0056                     	ds	2
  2022     0058                     _error:
  2023     0058                     	ds	2
  2024     005A                     _dutyValue:
  2025     005A                     	ds	1
  2026     005B                     _eusart1RxCount:
  2027     005B                     	ds	1
  2028     005C                     _eusart1TxBufferRemaining:
  2029     005C                     	ds	1
  2030     005D                     _eusart1TxTail:
  2031     005D                     	ds	1
  2032     005E                     _eusart1TxHead:
  2033     005E                     	ds	1
  2034     005F                     _xwaitPeriod:
  2035     005F                     	ds	1
  2036     0060                     _DVflag:
  2037     0060                     	ds	1
  2038     0061                     _tickCounter:
  2039     0061                     	ds	1
  2040     0062                     _rxBufPtr:
  2041     0062                     	ds	1
  2042                           
  2043                           	psect	dataBANK0
  2044     006A                     __pdataBANK0:
  2045     006A                     _UART:
  2046     006A                     	ds	2
  2047     006C                     main@increment:
  2048     006C                     	ds	1
  2049                           
  2050                           	psect	bssBANK1
  2051     00A0                     __pbssBANK1:
  2052     00A0                     _eusart1RxBuffer:
  2053     00A0                     	ds	32
  2054     00C0                     _DVRT_ReceivedCmd:
  2055     00C0                     	ds	28
  2056                           
  2057                           	psect	bssBANK2
  2058     0120                     __pbssBANK2:
  2059     0120                     _eusart1RxStatusBuffer:
  2060     0120                     	ds	64
  2061                           
  2062                           	psect	clrtext
  2063     04B8                     clear_ram0:	
  2064                           ;	Called with FSR0 containing the base address, and
  2065                           ;	WREG with the size to clear
  2066                           
  2067     04B8  0064               	clrwdt	;clear the watchdog before getting into this loop
  2068     04B9                     clrloop0:
  2069     04B9  0180               	clrf	0	;clear RAM location pointed to by FSR
  2070     04BA  3101               	addfsr 0,1
  2071     04BB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2072     04BC  2CB9               	goto	clrloop0	;have we reached the end yet?
  2073     04BD  3400               	retlw	0	;all done for this memory range, return
  2074                           
  2075                           	psect	cstackBANK1
  2076     00DC                     __pcstackBANK1:
  2077     00DC                     ??_main:
  2078                           
  2079                           ; 1 bytes @ 0x0
  2080     00DC                     	ds	2
  2081                           
  2082                           	psect	cstackCOMMON
  2083     0070                     __pcstackCOMMON:
  2084     0070                     ?_DVRT_Initialize:
  2085     0070                     ?_DVRT_Process:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088     0070                     ?_DVRT_Error_Callback:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091     0070                     ?_DVRT_HandleCommand:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094     0070                     ?_TMR2_ISR:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097     0070                     ?_CLOCK_Initialize:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100     0070                     ?_TMR2_Initialize:	
  2101                           ; 1 bytes @ 0x0
  2102                           
  2103     0070                     ?_EUSART1_Initialize:	
  2104                           ; 1 bytes @ 0x0
  2105                           
  2106     0070                     ?_TMR2_DefaultPeriodMatchCallback:	
  2107                           ; 1 bytes @ 0x0
  2108                           
  2109     0070                     ?_EUSART1_Read:	
  2110                           ; 1 bytes @ 0x0
  2111                           
  2112     0070                     ?_EUSART1_IsRxReady:	
  2113                           ; 1 bytes @ 0x0
  2114                           
  2115     0070                     ?_EUSART1_IsTxReady:	
  2116                           ; 1 bytes @ 0x0
  2117                           
  2118     0070                     ?_EUSART1_ReceiveISR:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121     0070                     ?_EUSART1_TransmitISR:	
  2122                           ; 1 bytes @ 0x0
  2123                           
  2124     0070                     ?_EUSART1_DefaultFramingErrorCallback:	
  2125                           ; 1 bytes @ 0x0
  2126                           
  2127     0070                     ?_EUSART1_DefaultOverrunErrorCallback:	
  2128                           ; 1 bytes @ 0x0
  2129                           
  2130     0070                     ?_DVRT_UART_WriteByte:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133     0070                     ?_DVRT_WritePacket:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136     0070                     ?_PWM3_Initialize:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139     0070                     ?_PIN_MANAGER_Initialize:	
  2140                           ; 1 bytes @ 0x0
  2141                           
  2142     0070                     ?_INTERRUPT_Initialize:	
  2143                           ; 1 bytes @ 0x0
  2144                           
  2145     0070                     ?_INTERRUPT_InterruptManager:	
  2146                           ; 1 bytes @ 0x0
  2147                           
  2148     0070                     ?_SYSTEM_Initialize:	
  2149                           ; 1 bytes @ 0x0
  2150                           
  2151     0070                     ?_TMR2_PeriodSet:	
  2152                           ; 1 bytes @ 0x0
  2153                           
  2154     0070                     ?_PWM3_Initialize2:	
  2155                           ; 1 bytes @ 0x0
  2156                           
  2157     0070                     ?_EUSART1_ErrorGet:	
  2158                           ; 1 bytes @ 0x0
  2159                           
  2160     0070                     ?_main:	
  2161                           ; 2 bytes @ 0x0
  2162                           
  2163     0070                     EUSART1_ReceiveISR@regValue:	
  2164                           ; 2 bytes @ 0x0
  2165                           
  2166     0070                     EUSART1_TransmitISR@tempTxTail:	
  2167                           ; 1 bytes @ 0x0
  2168                           
  2169     0070                     ??_DVRT_Error_Callback:	
  2170                           ; 1 bytes @ 0x0
  2171                           
  2172     0070                     ??_TMR2_ISR:	
  2173                           ; 1 bytes @ 0x0
  2174                           
  2175     0070                     ??_TMR2_DefaultPeriodMatchCallback:	
  2176                           ; 1 bytes @ 0x0
  2177                           
  2178     0070                     ??_EUSART1_ReceiveISR:	
  2179                           ; 1 bytes @ 0x0
  2180                           
  2181     0070                     ??_EUSART1_TransmitISR:	
  2182                           ; 1 bytes @ 0x0
  2183                           
  2184     0070                     ??_EUSART1_DefaultFramingErrorCallback:	
  2185                           ; 1 bytes @ 0x0
  2186                           
  2187     0070                     ??_EUSART1_DefaultOverrunErrorCallback:	
  2188                           ; 1 bytes @ 0x0
  2189                           
  2190                           
  2191                           ; 1 bytes @ 0x0
  2192     0070                     	ds	1
  2193     0071                     EUSART1_ReceiveISR@tempRxHead:
  2194                           
  2195                           ; 1 bytes @ 0x1
  2196     0071                     	ds	1
  2197     0072                     ?_INT_SetInterruptHandler:
  2198     0072                     ?_EUSART1_Write:	
  2199                           ; 1 bytes @ 0x2
  2200                           
  2201     0072                     ?_EUSART1_FramingErrorCallbackRegister:	
  2202                           ; 1 bytes @ 0x2
  2203                           
  2204     0072                     ?_EUSART1_OverrunErrorCallbackRegister:	
  2205                           ; 1 bytes @ 0x2
  2206                           
  2207     0072                     ?_PWM3_LoadDutyValue:	
  2208                           ; 1 bytes @ 0x2
  2209                           
  2210     0072                     ?___bmul:	
  2211                           ; 1 bytes @ 0x2
  2212                           
  2213     0072                     ?___wmul:	
  2214                           ; 1 bytes @ 0x2
  2215                           
  2216     0072                     TMR2_PeriodSet@periodVal:	
  2217                           ; 2 bytes @ 0x2
  2218                           
  2219     0072                     EUSART1_Read@tempRxTail:	
  2220                           ; 1 bytes @ 0x2
  2221                           
  2222     0072                     EUSART1_Write@txData:	
  2223                           ; 1 bytes @ 0x2
  2224                           
  2225     0072                     ___bmul@multiplicand:	
  2226                           ; 1 bytes @ 0x2
  2227                           
  2228     0072                     PWM3_LoadDutyValue@dutyValue:	
  2229                           ; 1 bytes @ 0x2
  2230                           
  2231     0072                     INT_SetInterruptHandler@InterruptHandler:	
  2232                           ; 2 bytes @ 0x2
  2233                           
  2234     0072                     EUSART1_FramingErrorCallbackRegister@callbackHandler:	
  2235                           ; 2 bytes @ 0x2
  2236                           
  2237     0072                     EUSART1_OverrunErrorCallbackRegister@callbackHandler:	
  2238                           ; 2 bytes @ 0x2
  2239                           
  2240     0072                     ___wmul@multiplier:	
  2241                           ; 2 bytes @ 0x2
  2242                           
  2243     0072                     ??_EUSART1_ErrorGet:	
  2244                           ; 2 bytes @ 0x2
  2245                           
  2246     0072                     ??_CLOCK_Initialize:	
  2247                           ; 1 bytes @ 0x2
  2248                           
  2249     0072                     ??_TMR2_Initialize:	
  2250                           ; 1 bytes @ 0x2
  2251                           
  2252     0072                     ??_EUSART1_Read:	
  2253                           ; 1 bytes @ 0x2
  2254                           
  2255     0072                     ??_EUSART1_IsRxReady:	
  2256                           ; 1 bytes @ 0x2
  2257                           
  2258     0072                     ??_EUSART1_IsTxReady:	
  2259                           ; 1 bytes @ 0x2
  2260                           
  2261     0072                     ??_PWM3_Initialize:	
  2262                           ; 1 bytes @ 0x2
  2263                           
  2264     0072                     ??_PIN_MANAGER_Initialize:	
  2265                           ; 1 bytes @ 0x2
  2266                           
  2267     0072                     ??_INTERRUPT_InterruptManager:	
  2268                           ; 1 bytes @ 0x2
  2269                           
  2270     0072                     ??_TMR2_PeriodSet:	
  2271                           ; 1 bytes @ 0x2
  2272                           
  2273                           
  2274                           ; 1 bytes @ 0x2
  2275     0072                     	ds	1
  2276     0073                     EUSART1_Read@readValue:
  2277     0073                     EUSART1_Write@tempTxHead:	
  2278                           ; 1 bytes @ 0x3
  2279                           
  2280     0073                     ___bmul@product:	
  2281                           ; 1 bytes @ 0x3
  2282                           
  2283     0073                     ??_EUSART1_Write:	
  2284                           ; 1 bytes @ 0x3
  2285                           
  2286     0073                     ??_PWM3_Initialize2:	
  2287                           ; 1 bytes @ 0x3
  2288                           
  2289     0073                     ??___bmul:	
  2290                           ; 1 bytes @ 0x3
  2291                           
  2292                           
  2293                           ; 1 bytes @ 0x3
  2294     0073                     	ds	1
  2295     0074                     DVRT_UART_WriteByte@txData:
  2296     0074                     ___bmul@multiplier:	
  2297                           ; 1 bytes @ 0x4
  2298                           
  2299     0074                     ___wmul@multiplicand:	
  2300                           ; 1 bytes @ 0x4
  2301                           
  2302     0074                     ??_INT_SetInterruptHandler:	
  2303                           ; 2 bytes @ 0x4
  2304                           
  2305     0074                     ??_EUSART1_Initialize:	
  2306                           ; 1 bytes @ 0x4
  2307                           
  2308     0074                     ??_EUSART1_FramingErrorCallbackRegister:	
  2309                           ; 1 bytes @ 0x4
  2310                           
  2311     0074                     ??_EUSART1_OverrunErrorCallbackRegister:	
  2312                           ; 1 bytes @ 0x4
  2313                           
  2314     0074                     ??_DVRT_UART_WriteByte:	
  2315                           ; 1 bytes @ 0x4
  2316                           
  2317     0074                     ??_PWM3_LoadDutyValue:	
  2318                           ; 1 bytes @ 0x4
  2319                           
  2320     0074                     ??_INTERRUPT_Initialize:	
  2321                           ; 1 bytes @ 0x4
  2322                           
  2323                           
  2324                           ; 1 bytes @ 0x4
  2325     0074                     	ds	1
  2326     0075                     DVRT_Initialize@i:
  2327     0075                     ??_DVRT_Initialize:	
  2328                           ; 1 bytes @ 0x5
  2329                           
  2330     0075                     ??_DVRT_WritePacket:	
  2331                           ; 1 bytes @ 0x5
  2332                           
  2333                           
  2334                           ; 1 bytes @ 0x5
  2335     0075                     	ds	1
  2336     0076                     ___wmul@product:
  2337     0076                     ??_SYSTEM_Initialize:	
  2338                           ; 2 bytes @ 0x6
  2339                           
  2340     0076                     ??___wmul:	
  2341                           ; 1 bytes @ 0x6
  2342                           
  2343                           
  2344                           ; 1 bytes @ 0x6
  2345     0076                     	ds	1
  2346     0077                     DVRT_WritePacket@k:
  2347                           
  2348                           ; 1 bytes @ 0x7
  2349     0077                     	ds	1
  2350     0078                     DVRT_WritePacket@i:
  2351     0078                     DVRT_HandleCommand@VARcount:	
  2352                           ; 1 bytes @ 0x8
  2353                           
  2354                           
  2355                           ; 1 bytes @ 0x8
  2356     0078                     	ds	1
  2357                           
  2358                           	psect	cstackBANK0
  2359     0063                     __pcstackBANK0:
  2360     0063                     ??_DVRT_HandleCommand:
  2361                           
  2362                           ; 1 bytes @ 0x0
  2363     0063                     	ds	4
  2364     0067                     ??_DVRT_Process:
  2365                           
  2366                           ; 1 bytes @ 0x4
  2367     0067                     	ds	3
  2368                           
  2369                           	psect	maintext
  2370     028C                     __pmaintext:	
  2371 ;;
  2372 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2373 ;;
  2374 ;; *************** function _main *****************
  2375 ;; Defined at:
  2376 ;;		line 78 in file "main.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;		None
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;		None
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  2  582[None  ] int 
  2383 ;; Registers used:
  2384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : B3F/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2390 ;;      Params:         0       0       0       0       0       0       0       0
  2391 ;;      Locals:         0       0       0       0       0       0       0       0
  2392 ;;      Temps:          0       0       2       0       0       0       0       0
  2393 ;;      Totals:         0       0       2       0       0       0       0       0
  2394 ;;Total ram usage:        2 bytes
  2395 ;; Hardware stack levels required when called: 7
  2396 ;; This function calls:
  2397 ;;		_DVRT_Process
  2398 ;;		_PWM3_Initialize2
  2399 ;;		_PWM3_LoadDutyValue
  2400 ;;		_SYSTEM_Initialize
  2401 ;; This function is called by:
  2402 ;;		Startup code after reset
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406     028C                     _main:	
  2407                           ;psect for function _main
  2408                           
  2409     028C                     l2254:	
  2410                           ;incstack = 0
  2411                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2412                           
  2413                           
  2414                           ;main.c: 80:     SYSTEM_Initialize();
  2415     028C  3184  240A  3182   	fcall	_SYSTEM_Initialize
  2416     028F                     l2256:
  2417                           
  2418                           ;main.c: 84:     PWM3_Initialize2();
  2419     028F  3183  23D6  3182   	fcall	_PWM3_Initialize2
  2420     0292                     l2258:
  2421                           
  2422                           ;main.c: 89:     (INTCONbits.GIE = 1);
  2423     0292  178B               	bsf	11,7	;volatile
  2424     0293                     l2260:
  2425                           
  2426                           ;main.c: 96:     (INTCONbits.PEIE = 1);
  2427     0293  170B               	bsf	11,6	;volatile
  2428     0294                     l2262:
  2429                           
  2430                           ;main.c: 106:     {;main.c: 107:         static uint8_t increment = 1U;;main.c: 109:    
      +                               if ((xwaitPeriod & 15U) == 0U){
  2431     0294  0140               	movlb	0	; select bank0
  2432     0295  085F               	movf	_xwaitPeriod,w
  2433     0296  390F               	andlw	15
  2434     0297  1D03               	btfss	3,2
  2435     0298  2A9A               	goto	u1321
  2436     0299  2A9B               	goto	u1320
  2437     029A                     u1321:
  2438     029A  2A94               	goto	l2262
  2439     029B                     u1320:
  2440     029B                     l2264:
  2441                           
  2442                           ;main.c: 111:             PWM3_LoadDutyValue(dutyValue);
  2443     029B  085A               	movf	_dutyValue,w
  2444     029C  0141               	movlb	1	; select bank1
  2445     029D  00DC               	movwf	??_main^(0+128)
  2446     029E  01DD               	clrf	(??_main^(0+128)+1)
  2447     029F  085C               	movf	??_main^(0+128),w
  2448     02A0  00F2               	movwf	PWM3_LoadDutyValue@dutyValue
  2449     02A1  085D               	movf	(??_main+1)^(0+128),w
  2450     02A2  00F3               	movwf	PWM3_LoadDutyValue@dutyValue+1
  2451     02A3  3184  2420  3182   	fcall	_PWM3_LoadDutyValue
  2452     02A6                     l2266:
  2453                           
  2454                           ;main.c: 112:             DVRT_Process();
  2455     02A6  3181  2130  3182   	fcall	_DVRT_Process
  2456     02A9                     l2268:
  2457                           
  2458                           ;main.c: 115:             if(dutyValue == 100U){
  2459     02A9  3064               	movlw	100
  2460     02AA  0140               	movlb	0	; select bank0
  2461     02AB  065A               	xorwf	_dutyValue,w
  2462     02AC  1D03               	btfss	3,2
  2463     02AD  2AAF               	goto	u1331
  2464     02AE  2AB0               	goto	u1330
  2465     02AF                     u1331:
  2466     02AF  2AB2               	goto	l2272
  2467     02B0                     u1330:
  2468     02B0                     l2270:
  2469                           
  2470                           ;main.c: 116:                 increment = 0;
  2471     02B0  01EC               	clrf	main@increment
  2472                           
  2473                           ;main.c: 117:             }else if(dutyValue == 0U){
  2474     02B1  2AB9               	goto	l2276
  2475     02B2                     l2272:
  2476     02B2  085A               	movf	_dutyValue,w
  2477     02B3  1D03               	btfss	3,2
  2478     02B4  2AB6               	goto	u1341
  2479     02B5  2AB7               	goto	u1340
  2480     02B6                     u1341:
  2481     02B6  2AB9               	goto	l2276
  2482     02B7                     u1340:
  2483     02B7                     l2274:
  2484                           
  2485                           ;main.c: 118:                 increment = 1;
  2486     02B7  3001               	movlw	1
  2487     02B8  00EC               	movwf	main@increment
  2488     02B9                     l2276:
  2489                           
  2490                           ;main.c: 122:             (increment) ?
  2491     02B9  086C               	movf	main@increment,w
  2492     02BA  1903               	btfsc	3,2
  2493     02BB  2ABD               	goto	u1351
  2494     02BC  2ABE               	goto	u1350
  2495     02BD                     u1351:
  2496     02BD  2AC1               	goto	l2280
  2497     02BE                     u1350:
  2498     02BE                     l2278:
  2499     02BE  3001               	movlw	1
  2500     02BF  07DA               	addwf	_dutyValue,f
  2501     02C0  2A94               	goto	l2262
  2502     02C1                     l2280:
  2503     02C1  3001               	movlw	1
  2504     02C2  02DA               	subwf	_dutyValue,f
  2505     02C3  2A94               	goto	l2262
  2506     02C4  3180  2837         	ljmp	start
  2507     02C6                     __end_of_main:
  2508                           
  2509                           	psect	text1
  2510     040A                     __ptext1:	
  2511 ;; *************** function _SYSTEM_Initialize *****************
  2512 ;; Defined at:
  2513 ;;		line 40 in file "mcc_generated_files/system/src/system.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2527 ;;      Params:         0       0       0       0       0       0       0       0
  2528 ;;      Locals:         0       0       0       0       0       0       0       0
  2529 ;;      Temps:          0       0       0       0       0       0       0       0
  2530 ;;      Totals:         0       0       0       0       0       0       0       0
  2531 ;;Total ram usage:        0 bytes
  2532 ;; Hardware stack levels used: 1
  2533 ;; Hardware stack levels required when called: 5
  2534 ;; This function calls:
  2535 ;;		_CLOCK_Initialize
  2536 ;;		_DVRT_Initialize
  2537 ;;		_EUSART1_Initialize
  2538 ;;		_INTERRUPT_Initialize
  2539 ;;		_PIN_MANAGER_Initialize
  2540 ;;		_PWM3_Initialize
  2541 ;;		_TMR2_Initialize
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547     040A                     _SYSTEM_Initialize:	
  2548                           ;psect for function _SYSTEM_Initialize
  2549                           
  2550     040A                     l2242:	
  2551                           ;incstack = 0
  2552                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2553                           
  2554                           
  2555                           ;mcc_generated_files/system/src/system.c: 42:     CLOCK_Initialize();
  2556     040A  3184  24CA  3184   	fcall	_CLOCK_Initialize
  2557                           
  2558                           ;mcc_generated_files/system/src/system.c: 43:     PIN_MANAGER_Initialize();
  2559     040D  3182  22C6  3184   	fcall	_PIN_MANAGER_Initialize
  2560     0410                     l2244:
  2561                           
  2562                           ;mcc_generated_files/system/src/system.c: 44:     TMR2_Initialize();
  2563     0410  3184  2435  3184   	fcall	_TMR2_Initialize
  2564     0413                     l2246:
  2565                           
  2566                           ;mcc_generated_files/system/src/system.c: 45:     DVRT_Initialize();
  2567     0413  3182  2246  3184   	fcall	_DVRT_Initialize
  2568     0416                     l2248:
  2569                           
  2570                           ;mcc_generated_files/system/src/system.c: 46:     EUSART1_Initialize();
  2571     0416  3182  22FB  3184   	fcall	_EUSART1_Initialize
  2572     0419                     l2250:
  2573                           
  2574                           ;mcc_generated_files/system/src/system.c: 47:     PWM3_Initialize();
  2575     0419  3184  24B1  3184   	fcall	_PWM3_Initialize
  2576     041C                     l2252:
  2577                           
  2578                           ;mcc_generated_files/system/src/system.c: 48:     INTERRUPT_Initialize();
  2579     041C  3184  2494  3184   	fcall	_INTERRUPT_Initialize
  2580     041F                     l248:
  2581     041F  0008               	return
  2582     0420                     __end_of_SYSTEM_Initialize:
  2583                           
  2584                           	psect	text2
  2585     0435                     __ptext2:	
  2586 ;; *************** function _TMR2_Initialize *****************
  2587 ;; Defined at:
  2588 ;;		line 50 in file "mcc_generated_files/timer/src/tmr2.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2602 ;;      Params:         0       0       0       0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0
  2605 ;;      Totals:         0       0       0       0       0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 3
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_SYSTEM_Initialize
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616     0435                     _TMR2_Initialize:	
  2617                           ;psect for function _TMR2_Initialize
  2618                           
  2619     0435                     l1836:	
  2620                           ;incstack = 0
  2621                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  2622                           
  2623                           
  2624                           ;mcc_generated_files/timer/src/tmr2.c: 52:     T2CLKCON = (1 << 0x0);
  2625     0435  3001               	movlw	1
  2626     0436  0145               	movlb	5	; select bank5
  2627     0437  0090               	movwf	16	;volatile
  2628     0438                     l1838:
  2629                           
  2630                           ;mcc_generated_files/timer/src/tmr2.c: 54:     T2HLT = (0 << 0x0)
  2631     0438  018F               	clrf	15	;volatile
  2632                           
  2633                           ;mcc_generated_files/timer/src/tmr2.c: 59:     T2RST = (0 << 0x0);
  2634     0439  0191               	clrf	17	;volatile
  2635     043A                     l1840:
  2636                           
  2637                           ;mcc_generated_files/timer/src/tmr2.c: 61:     T2PR = 0x7B;
  2638     043A  307B               	movlw	123
  2639     043B  008D               	movwf	13	;volatile
  2640                           
  2641                           ;mcc_generated_files/timer/src/tmr2.c: 63:     T2TMR = 0x0;
  2642     043C  018C               	clrf	12	;volatile
  2643     043D                     l1842:
  2644                           
  2645                           ;mcc_generated_files/timer/src/tmr2.c: 65:     TMR2_PeriodMatchCallback = TMR2_DefaultPe
      +                          riodMatchCallback;
  2646     043D  30E1               	movlw	low _TMR2_DefaultPeriodMatchCallback
  2647     043E  0140               	movlb	0	; select bank0
  2648     043F  00ED               	movwf	_TMR2_PeriodMatchCallback
  2649     0440  3004               	movlw	high _TMR2_DefaultPeriodMatchCallback
  2650     0441  00EE               	movwf	_TMR2_PeriodMatchCallback+1
  2651     0442                     l1844:
  2652                           
  2653                           ;mcc_generated_files/timer/src/tmr2.c: 67:     PIR1bits.TMR2IF = 0;
  2654     0442  014E               	movlb	14	; select bank14
  2655     0443  130D               	bcf	13,6	;volatile
  2656     0444                     l1846:
  2657                           
  2658                           ;mcc_generated_files/timer/src/tmr2.c: 68:     PIE1bits.TMR2IE = 1;
  2659     0444  1717               	bsf	23,6	;volatile
  2660     0445                     l1848:
  2661                           
  2662                           ;mcc_generated_files/timer/src/tmr2.c: 70:     T2CON = (2 << 0x4)
  2663     0445  30A0               	movlw	160
  2664     0446  0145               	movlb	5	; select bank5
  2665     0447  008E               	movwf	14	;volatile
  2666     0448                     l288:
  2667     0448  0008               	return
  2668     0449                     __end_of_TMR2_Initialize:
  2669                           
  2670                           	psect	text3
  2671     04B1                     __ptext3:	
  2672 ;; *************** function _PWM3_Initialize *****************
  2673 ;; Defined at:
  2674 ;;		line 45 in file "mcc_generated_files/pwm/src/pwm3.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		status,2
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2688 ;;      Params:         0       0       0       0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 3
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_SYSTEM_Initialize
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702     04B1                     _PWM3_Initialize:	
  2703                           ;psect for function _PWM3_Initialize
  2704                           
  2705     04B1                     l1792:	
  2706                           ;incstack = 0
  2707                           ; Regs used in _PWM3_Initialize: [status,2]
  2708                           
  2709                           
  2710                           ;mcc_generated_files/pwm/src/pwm3.c: 50:     PWM3CON = 0x80;
  2711     04B1  3080               	movlw	128
  2712     04B2  0146               	movlb	6	; select bank6
  2713     04B3  0096               	movwf	22	;volatile
  2714     04B4                     l1794:
  2715                           
  2716                           ;mcc_generated_files/pwm/src/pwm3.c: 53:     PWM3DCH = 0x0;
  2717     04B4  0195               	clrf	21	;volatile
  2718     04B5                     l1796:
  2719                           
  2720                           ;mcc_generated_files/pwm/src/pwm3.c: 56:     PWM3DCL = 0x40;
  2721     04B5  3040               	movlw	64
  2722     04B6  0094               	movwf	20	;volatile
  2723     04B7                     l105:
  2724     04B7  0008               	return
  2725     04B8                     __end_of_PWM3_Initialize:
  2726                           
  2727                           	psect	text4
  2728     02C6                     __ptext4:	
  2729 ;; *************** function _PIN_MANAGER_Initialize *****************
  2730 ;; Defined at:
  2731 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		status,2
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2745 ;;      Params:         0       0       0       0       0       0       0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0
  2748 ;;      Totals:         0       0       0       0       0       0       0       0
  2749 ;;Total ram usage:        0 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 3
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_SYSTEM_Initialize
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759     02C6                     _PIN_MANAGER_Initialize:	
  2760                           ;psect for function _PIN_MANAGER_Initialize
  2761                           
  2762     02C6                     l1798:	
  2763                           ;incstack = 0
  2764                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2765                           
  2766                           
  2767                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  2768     02C6  0140               	movlb	0	; select bank0
  2769     02C7  0198               	clrf	24	;volatile
  2770                           
  2771                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  2772     02C8  0199               	clrf	25	;volatile
  2773                           
  2774                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  2775     02C9  019A               	clrf	26	;volatile
  2776     02CA                     l1800:
  2777                           
  2778                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3B;
  2779     02CA  303B               	movlw	59
  2780     02CB  0092               	movwf	18	;volatile
  2781     02CC                     l1802:
  2782                           
  2783                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xF0;
  2784     02CC  30F0               	movlw	240
  2785     02CD  0093               	movwf	19	;volatile
  2786     02CE                     l1804:
  2787                           
  2788                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0xFE;
  2789     02CE  30FE               	movlw	254
  2790     02CF  0094               	movwf	20	;volatile
  2791     02D0                     l1806:
  2792                           
  2793                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x37;
  2794     02D0  3037               	movlw	55
  2795     02D1  017E               	movlb	62	; select bank62
  2796     02D2  00B8               	movwf	56	;volatile
  2797     02D3                     l1808:
  2798                           
  2799                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0xF0;
  2800     02D3  30F0               	movlw	240
  2801     02D4  00C3               	movwf	67	;volatile
  2802     02D5                     l1810:
  2803                           
  2804                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0xFC;
  2805     02D5  30FC               	movlw	252
  2806     02D6  00CE               	movwf	78	;volatile
  2807                           
  2808                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
  2809     02D7  01B9               	clrf	57	;volatile
  2810                           
  2811                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
  2812     02D8  01C4               	clrf	68	;volatile
  2813                           
  2814                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
  2815     02D9  01CF               	clrf	79	;volatile
  2816                           
  2817                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONA = 0x0;
  2818     02DA  01BA               	clrf	58	;volatile
  2819                           
  2820                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONB = 0x0;
  2821     02DB  01C5               	clrf	69	;volatile
  2822                           
  2823                           ;mcc_generated_files/system/src/pins.c: 74:     ODCONC = 0x0;
  2824     02DC  01D0               	clrf	80	;volatile
  2825     02DD                     l1812:
  2826                           
  2827                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
  2828     02DD  3037               	movlw	55
  2829     02DE  00BB               	movwf	59	;volatile
  2830     02DF                     l1814:
  2831                           
  2832                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
  2833     02DF  30F0               	movlw	240
  2834     02E0  00C6               	movwf	70	;volatile
  2835     02E1                     l1816:
  2836                           
  2837                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
  2838     02E1  30FF               	movlw	255
  2839     02E2  00D1               	movwf	81	;volatile
  2840     02E3                     l1818:
  2841                           
  2842                           ;mcc_generated_files/system/src/pins.c: 84:     INLVLA = 0x3F;
  2843     02E3  303F               	movlw	63
  2844     02E4  00BC               	movwf	60	;volatile
  2845     02E5                     l1820:
  2846                           
  2847                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLB = 0xF0;
  2848     02E5  30F0               	movlw	240
  2849     02E6  00C7               	movwf	71	;volatile
  2850     02E7                     l1822:
  2851                           
  2852                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLC = 0xFF;
  2853     02E7  30FF               	movlw	255
  2854     02E8  00D2               	movwf	82	;volatile
  2855     02E9                     l1824:
  2856                           
  2857                           ;mcc_generated_files/system/src/pins.c: 91:     RX1PPS = 0x11;
  2858     02E9  3011               	movlw	17
  2859     02EA  017D               	movlb	61	; select bank61
  2860     02EB  00CB               	movwf	75	;volatile
  2861     02EC                     l1826:
  2862                           
  2863                           ;mcc_generated_files/system/src/pins.c: 92:     RA2PPS = 0x03;
  2864     02EC  3003               	movlw	3
  2865     02ED  017E               	movlb	62	; select bank62
  2866     02EE  0092               	movwf	18	;volatile
  2867     02EF                     l1828:
  2868                           
  2869                           ;mcc_generated_files/system/src/pins.c: 93:     RC0PPS = 0x05;
  2870     02EF  3005               	movlw	5
  2871     02F0  00A0               	movwf	32	;volatile
  2872                           
  2873                           ;mcc_generated_files/system/src/pins.c: 102:     IOCAP = 0x0;
  2874     02F1  01BD               	clrf	61	;volatile
  2875                           
  2876                           ;mcc_generated_files/system/src/pins.c: 103:     IOCAN = 0x0;
  2877     02F2  01BE               	clrf	62	;volatile
  2878                           
  2879                           ;mcc_generated_files/system/src/pins.c: 104:     IOCAF = 0x0;
  2880     02F3  01BF               	clrf	63	;volatile
  2881                           
  2882                           ;mcc_generated_files/system/src/pins.c: 105:     IOCBP = 0x0;
  2883     02F4  01C8               	clrf	72	;volatile
  2884                           
  2885                           ;mcc_generated_files/system/src/pins.c: 106:     IOCBN = 0x0;
  2886     02F5  01C9               	clrf	73	;volatile
  2887                           
  2888                           ;mcc_generated_files/system/src/pins.c: 107:     IOCBF = 0x0;
  2889     02F6  01CA               	clrf	74	;volatile
  2890                           
  2891                           ;mcc_generated_files/system/src/pins.c: 108:     IOCCP = 0x0;
  2892     02F7  01D3               	clrf	83	;volatile
  2893                           
  2894                           ;mcc_generated_files/system/src/pins.c: 109:     IOCCN = 0x0;
  2895     02F8  01D4               	clrf	84	;volatile
  2896                           
  2897                           ;mcc_generated_files/system/src/pins.c: 110:     IOCCF = 0x0;
  2898     02F9  01D5               	clrf	85	;volatile
  2899     02FA                     l177:
  2900     02FA  0008               	return
  2901     02FB                     __end_of_PIN_MANAGER_Initialize:
  2902                           
  2903                           	psect	text5
  2904     0494                     __ptext5:	
  2905 ;; *************** function _INTERRUPT_Initialize *****************
  2906 ;; Defined at:
  2907 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, pclath, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2921 ;;      Params:         0       0       0       0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 4
  2928 ;; This function calls:
  2929 ;;		_INT_SetInterruptHandler
  2930 ;; This function is called by:
  2931 ;;		_SYSTEM_Initialize
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935     0494                     _INTERRUPT_Initialize:	
  2936                           ;psect for function _INTERRUPT_Initialize
  2937                           
  2938     0494                     l1830:	
  2939                           ;incstack = 0
  2940                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2941                           
  2942                           
  2943                           ;mcc_generated_files/system/src/interrupt.c: 44:     (PIR0bits.INTF = 0);
  2944     0494  014E               	movlb	14	; select bank14
  2945     0495  100C               	bcf	12,0	;volatile
  2946                           
  2947                           ;mcc_generated_files/system/src/interrupt.c: 45:     (INTCONbits.INTEDG = 1);
  2948     0496  140B               	bsf	11,0	;volatile
  2949     0497                     l1832:
  2950                           
  2951                           ;mcc_generated_files/system/src/interrupt.c: 47:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  2952     0497  3000               	movlw	0
  2953     0498  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
  2954     0499  3000               	movlw	0
  2955     049A  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2956     049B  3184  24BE  3184   	fcall	_INT_SetInterruptHandler
  2957     049E                     l205:
  2958     049E  0008               	return
  2959     049F                     __end_of_INTERRUPT_Initialize:
  2960                           
  2961                           	psect	text6
  2962     04BE                     __ptext6:	
  2963 ;; *************** function _INT_SetInterruptHandler *****************
  2964 ;; Defined at:
  2965 ;;		line 105 in file "mcc_generated_files/system/src/interrupt.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2968 ;;		 -> INT_DefaultInterruptHandler(1), 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2980 ;;      Params:         2       0       0       0       0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0       0       0       0
  2982 ;;      Temps:          0       0       0       0       0       0       0       0
  2983 ;;      Totals:         2       0       0       0       0       0       0       0
  2984 ;;Total ram usage:        2 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 3
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_INTERRUPT_Initialize
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994     04BE                     _INT_SetInterruptHandler:	
  2995                           ;psect for function _INT_SetInterruptHandler
  2996                           
  2997     04BE                     l1660:	
  2998                           ;incstack = 0
  2999                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  3000                           
  3001                           
  3002                           ;mcc_generated_files/system/src/interrupt.c: 106:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  3003     04BE  0873               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  3004     04BF  0140               	movlb	0	; select bank0
  3005     04C0  00CB               	movwf	_INT_InterruptHandler+1
  3006     04C1  0872               	movf	INT_SetInterruptHandler@InterruptHandler,w
  3007     04C2  00CA               	movwf	_INT_InterruptHandler
  3008     04C3                     l228:
  3009     04C3  0008               	return
  3010     04C4                     __end_of_INT_SetInterruptHandler:
  3011                           
  3012                           	psect	text7
  3013     02FB                     __ptext7:	
  3014 ;; *************** function _EUSART1_Initialize *****************
  3015 ;; Defined at:
  3016 ;;		line 131 in file "mcc_generated_files/uart/src/eusart1.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3030 ;;      Params:         0       0       0       0       0       0       0       0
  3031 ;;      Locals:         0       0       0       0       0       0       0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0
  3033 ;;      Totals:         0       0       0       0       0       0       0       0
  3034 ;;Total ram usage:        0 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 4
  3037 ;; This function calls:
  3038 ;;		_EUSART1_FramingErrorCallbackRegister
  3039 ;;		_EUSART1_OverrunErrorCallbackRegister
  3040 ;; This function is called by:
  3041 ;;		_SYSTEM_Initialize
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045     02FB                     _EUSART1_Initialize:	
  3046                           ;psect for function _EUSART1_Initialize
  3047                           
  3048     02FB                     l1850:	
  3049                           ;incstack = 0
  3050                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3051                           
  3052                           
  3053                           ;mcc_generated_files/uart/src/eusart1.c: 133:     PIE1bits.RC1IE = 0;
  3054     02FB  014E               	movlb	14	; select bank14
  3055     02FC  1217               	bcf	23,4	;volatile
  3056     02FD                     l1852:
  3057                           
  3058                           ;mcc_generated_files/uart/src/eusart1.c: 134:      EUSART1_RxInterruptHandler = EUSART1_
      +                          ReceiveISR;
  3059     02FD  30F6               	movlw	low _EUSART1_ReceiveISR
  3060     02FE  0140               	movlb	0	; select bank0
  3061     02FF  00CC               	movwf	_EUSART1_RxInterruptHandler
  3062     0300  3001               	movlw	high _EUSART1_ReceiveISR
  3063     0301  00CD               	movwf	_EUSART1_RxInterruptHandler+1
  3064     0302                     l1854:
  3065                           
  3066                           ;mcc_generated_files/uart/src/eusart1.c: 136:     PIE1bits.TX1IE = 0;
  3067     0302  014E               	movlb	14	; select bank14
  3068     0303  1197               	bcf	23,3	;volatile
  3069                           
  3070                           ;mcc_generated_files/uart/src/eusart1.c: 137:     EUSART1_TxInterruptHandler = EUSART1_T
      +                          ransmitISR;
  3071     0304  30BB               	movlw	low _EUSART1_TransmitISR
  3072     0305  0140               	movlb	0	; select bank0
  3073     0306  00CE               	movwf	_EUSART1_TxInterruptHandler
  3074     0307  3003               	movlw	high _EUSART1_TransmitISR
  3075     0308  00CF               	movwf	_EUSART1_TxInterruptHandler+1
  3076     0309                     l1856:
  3077                           
  3078                           ;mcc_generated_files/uart/src/eusart1.c: 142:     BAUD1CON = 0x48;
  3079     0309  3048               	movlw	72
  3080     030A  0142               	movlb	2	; select bank2
  3081     030B  009F               	movwf	31	;volatile
  3082     030C                     l1858:
  3083                           
  3084                           ;mcc_generated_files/uart/src/eusart1.c: 144:     RC1STA = 0x90;
  3085     030C  3090               	movlw	144
  3086     030D  009D               	movwf	29	;volatile
  3087     030E                     l1860:
  3088                           
  3089                           ;mcc_generated_files/uart/src/eusart1.c: 146:     TX1STA = 0x26;
  3090     030E  3026               	movlw	38
  3091     030F  009E               	movwf	30	;volatile
  3092     0310                     l1862:
  3093                           
  3094                           ;mcc_generated_files/uart/src/eusart1.c: 148:     SP1BRGL = 0x1;
  3095     0310  3001               	movlw	1
  3096     0311  009B               	movwf	27	;volatile
  3097     0312                     l1864:
  3098                           
  3099                           ;mcc_generated_files/uart/src/eusart1.c: 150:     SP1BRGH = 0x0;
  3100     0312  019C               	clrf	28	;volatile
  3101     0313                     l1866:
  3102                           
  3103                           ;mcc_generated_files/uart/src/eusart1.c: 152:     EUSART1_FramingErrorCallbackRegister(E
      +                          USART1_DefaultFramingErrorCallback);
  3104     0313  30E2               	movlw	low _EUSART1_DefaultFramingErrorCallback
  3105     0314  00F2               	movwf	EUSART1_FramingErrorCallbackRegister@callbackHandler
  3106     0315  3004               	movlw	high _EUSART1_DefaultFramingErrorCallback
  3107     0316  00F3               	movwf	EUSART1_FramingErrorCallbackRegister@callbackHandler+1
  3108     0317  3184  2488  3182   	fcall	_EUSART1_FramingErrorCallbackRegister
  3109     031A                     l1868:
  3110                           
  3111                           ;mcc_generated_files/uart/src/eusart1.c: 153:     EUSART1_OverrunErrorCallbackRegister(E
      +                          USART1_DefaultOverrunErrorCallback);
  3112     031A  30D8               	movlw	low _EUSART1_DefaultOverrunErrorCallback
  3113     031B  00F2               	movwf	EUSART1_OverrunErrorCallbackRegister@callbackHandler
  3114     031C  3004               	movlw	high _EUSART1_DefaultOverrunErrorCallback
  3115     031D  00F3               	movwf	EUSART1_OverrunErrorCallbackRegister@callbackHandler+1
  3116     031E  3184  247C  3182   	fcall	_EUSART1_OverrunErrorCallbackRegister
  3117     0321                     l1870:
  3118                           
  3119                           ;mcc_generated_files/uart/src/eusart1.c: 154:     eusart1RxLastError.status = 0;
  3120     0321  0140               	movlb	0	; select bank0
  3121     0322  01C8               	clrf	_eusart1RxLastError	;volatile
  3122     0323  01C9               	clrf	_eusart1RxLastError+1	;volatile
  3123     0324                     l1872:
  3124                           
  3125                           ;mcc_generated_files/uart/src/eusart1.c: 156:     eusart1TxHead = 0;
  3126     0324  01DE               	clrf	_eusart1TxHead	;volatile
  3127     0325                     l1874:
  3128                           
  3129                           ;mcc_generated_files/uart/src/eusart1.c: 157:     eusart1TxTail = 0;
  3130     0325  01DD               	clrf	_eusart1TxTail	;volatile
  3131     0326                     l1876:
  3132                           
  3133                           ;mcc_generated_files/uart/src/eusart1.c: 158:     eusart1TxBufferRemaining = sizeof(eusa
      +                          rt1TxBuffer);
  3134     0326  3008               	movlw	8
  3135     0327  00DC               	movwf	_eusart1TxBufferRemaining	;volatile
  3136     0328                     l1878:
  3137                           
  3138                           ;mcc_generated_files/uart/src/eusart1.c: 160:     eusart1RxHead = 0;
  3139     0328  01FA               	clrf	_eusart1RxHead	;volatile
  3140     0329                     l1880:
  3141                           
  3142                           ;mcc_generated_files/uart/src/eusart1.c: 161:     eusart1RxTail = 0;
  3143     0329  01F9               	clrf	_eusart1RxTail	;volatile
  3144     032A                     l1882:
  3145                           
  3146                           ;mcc_generated_files/uart/src/eusart1.c: 162:     eusart1RxCount = 0;
  3147     032A  01DB               	clrf	_eusart1RxCount	;volatile
  3148     032B                     l1884:
  3149                           
  3150                           ;mcc_generated_files/uart/src/eusart1.c: 164:     PIE1bits.RC1IE = 1;
  3151     032B  014E               	movlb	14	; select bank14
  3152     032C  1617               	bsf	23,4	;volatile
  3153     032D                     l433:
  3154     032D  0008               	return
  3155     032E                     __end_of_EUSART1_Initialize:
  3156                           
  3157                           	psect	text8
  3158     0246                     __ptext8:	
  3159 ;; *************** function _DVRT_Initialize *****************
  3160 ;; Defined at:
  3161 ;;		line 124 in file "mcc_generated_files/DVRT/src/DVRunTime.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  i               1    5[COMMON] unsigned char 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3175 ;;      Params:         0       0       0       0       0       0       0       0
  3176 ;;      Locals:         1       0       0       0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0       0       0       0
  3178 ;;      Totals:         1       0       0       0       0       0       0       0
  3179 ;;Total ram usage:        1 bytes
  3180 ;; Hardware stack levels used: 1
  3181 ;; Hardware stack levels required when called: 4
  3182 ;; This function calls:
  3183 ;;		_EUSART1_FramingErrorCallbackRegister
  3184 ;;		_EUSART1_OverrunErrorCallbackRegister
  3185 ;;		___bmul
  3186 ;; This function is called by:
  3187 ;;		_SYSTEM_Initialize
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191     0246                     _DVRT_Initialize:	
  3192                           ;psect for function _DVRT_Initialize
  3193                           
  3194     0246                     l2150:	
  3195                           ;incstack = 0
  3196                           ; Regs used in _DVRT_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3197                           
  3198                           
  3199                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 125:  uint8_t i;;mcc_generated_files/DVRT/src
      +                          /DVRunTime.c: 126:  for (i = 0; i < 8; i++) {
  3200     0246  01F5               	clrf	DVRT_Initialize@i
  3201     0247                     l2156:
  3202                           
  3203                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 127:         DVPMT[i].address = 0;
  3204     0247  3003               	movlw	3
  3205     0248  00F2               	movwf	___bmul@multiplicand
  3206     0249  0875               	movf	DVRT_Initialize@i,w
  3207     024A  3184  2449  3182   	fcall	___bmul
  3208     024D  3E21               	addlw	(low ((_DVPMT| 0+1)))& (0+255)
  3209     024E  0086               	movwf	6
  3210     024F  0187               	clrf	7
  3211     0250  3000               	movlw	0
  3212     0251  3FC0               	movwi [0]fsr1
  3213     0252  3FC1               	movwi [1]fsr1
  3214                           
  3215                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 128:         DVPMT[i].size = 0;
  3216     0253  3003               	movlw	3
  3217     0254  00F2               	movwf	___bmul@multiplicand
  3218     0255  0875               	movf	DVRT_Initialize@i,w
  3219     0256  3184  2449  3182   	fcall	___bmul
  3220     0259  3E20               	addlw	(low (_DVPMT| 0))& (0+255)
  3221     025A  0086               	movwf	6
  3222     025B  0187               	clrf	7
  3223     025C  0181               	clrf	1
  3224     025D                     l2158:
  3225                           
  3226                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 129:     }
  3227     025D  3001               	movlw	1
  3228     025E  07F5               	addwf	DVRT_Initialize@i,f
  3229     025F                     l2160:
  3230     025F  3008               	movlw	8
  3231     0260  0275               	subwf	DVRT_Initialize@i,w
  3232     0261  1C03               	skipc
  3233     0262  2A64               	goto	u1191
  3234     0263  2A65               	goto	u1190
  3235     0264                     u1191:
  3236     0264  2A47               	goto	l2156
  3237     0265                     u1190:
  3238     0265                     l58:
  3239                           
  3240                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 131:     DVflag.streamOn = 1;
  3241     0265  0140               	movlb	0	; select bank0
  3242     0266  1460               	bsf	_DVflag,0
  3243     0267                     l2162:
  3244                           
  3245                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 132:  DVStreamInterval = 20;
  3246     0267  3014               	movlw	20
  3247     0268  00D6               	movwf	_DVStreamInterval
  3248     0269  3000               	movlw	0
  3249     026A  00D7               	movwf	_DVStreamInterval+1
  3250                           
  3251                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 133:  DVCmdInterval = 200;
  3252     026B  30C8               	movlw	200
  3253     026C  00D2               	movwf	_DVCmdInterval
  3254     026D  3000               	movlw	0
  3255     026E  00D3               	movwf	_DVCmdInterval+1
  3256     026F                     l2164:
  3257                           
  3258                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 135:  error = 0;
  3259     026F  01D8               	clrf	_error
  3260     0270  01D9               	clrf	_error+1
  3261     0271                     l2166:
  3262                           
  3263                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 136:  UART->FramingErrorCallbackRegister(&DVR
      +                          T_Error_Callback);
  3264     0271  30C4               	movlw	low _DVRT_Error_Callback
  3265     0272  00F2               	movwf	EUSART1_FramingErrorCallbackRegister@callbackHandler
  3266     0273  3004               	movlw	high _DVRT_Error_Callback
  3267     0274  00F3               	movwf	EUSART1_FramingErrorCallbackRegister@callbackHandler+1
  3268     0275  3056               	movlw	low ((_UART1+40)| (0+32768))
  3269     0276  0084               	movwf	4
  3270     0277  3083               	movlw	high ((_UART1+40)| (0+32768))
  3271     0278  0085               	movwf	5
  3272     0279  3F01               	moviw [1]fsr0
  3273     027A  008A               	movwf	10
  3274     027B  3F00               	moviw [0]fsr0
  3275     027C  000A               	callw
  3276     027D  3182               	pagesel	$
  3277     027E                     l2168:
  3278                           
  3279                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 137:  UART->OverrunErrorCallbackRegister(&DVR
      +                          T_Error_Callback);
  3280     027E  30C4               	movlw	low _DVRT_Error_Callback
  3281     027F  00F2               	movwf	EUSART1_OverrunErrorCallbackRegister@callbackHandler
  3282     0280  3004               	movlw	high _DVRT_Error_Callback
  3283     0281  00F3               	movwf	EUSART1_OverrunErrorCallbackRegister@callbackHandler+1
  3284     0282  3058               	movlw	low ((_UART1+42)| (0+32768))
  3285     0283  0084               	movwf	4
  3286     0284  3083               	movlw	high ((_UART1+42)| (0+32768))
  3287     0285  0085               	movwf	5
  3288     0286  3F01               	moviw [1]fsr0
  3289     0287  008A               	movwf	10
  3290     0288  3F00               	moviw [0]fsr0
  3291     0289  000A               	callw
  3292     028A  3182               	pagesel	$
  3293     028B                     l59:
  3294     028B  0008               	return
  3295     028C                     __end_of_DVRT_Initialize:
  3296                           
  3297                           	psect	text9
  3298     047C                     __ptext9:	
  3299 ;; *************** function _EUSART1_OverrunErrorCallbackRegister *****************
  3300 ;; Defined at:
  3301 ;;		line 420 in file "mcc_generated_files/uart/src/eusart1.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  callbackHand    2    2[COMMON] PTR FTN()void 
  3304 ;;		 -> EUSART1_DefaultOverrunErrorCallback(1), DVRT_Error_Callback(1), 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3316 ;;      Params:         2       0       0       0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0       0
  3319 ;;      Totals:         2       0       0       0       0       0       0       0
  3320 ;;Total ram usage:        2 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; Hardware stack levels required when called: 3
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_EUSART1_Initialize
  3327 ;;		_DVRT_Initialize
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331     047C                     _EUSART1_OverrunErrorCallbackRegister:	
  3332                           ;psect for function _EUSART1_OverrunErrorCallbackRegister
  3333                           
  3334     047C                     l1666:	
  3335                           ;incstack = 0
  3336                           ; Regs used in _EUSART1_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
  3337                           
  3338                           
  3339                           ;mcc_generated_files/uart/src/eusart1.c: 420: void EUSART1_OverrunErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 421: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 422:     if(((void*)0) != callbackHandler)
  3340     047C  0872               	movf	EUSART1_OverrunErrorCallbackRegister@callbackHandler,w
  3341     047D  0473               	iorwf	EUSART1_OverrunErrorCallbackRegister@callbackHandler+1,w
  3342     047E  1903               	btfsc	3,2
  3343     047F  2C81               	goto	u621
  3344     0480  2C82               	goto	u620
  3345     0481                     u621:
  3346     0481  2C87               	goto	l539
  3347     0482                     u620:
  3348     0482                     l1668:
  3349                           
  3350                           ;mcc_generated_files/uart/src/eusart1.c: 423:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 424:         EUSART1_OverrunErrorHandler = callbackHandler;
  3351     0482  0873               	movf	EUSART1_OverrunErrorCallbackRegister@callbackHandler+1,w
  3352     0483  0140               	movlb	0	; select bank0
  3353     0484  00C1               	movwf	_EUSART1_OverrunErrorHandler+1
  3354     0485  0872               	movf	EUSART1_OverrunErrorCallbackRegister@callbackHandler,w
  3355     0486  00C0               	movwf	_EUSART1_OverrunErrorHandler
  3356     0487                     l539:
  3357     0487  0008               	return
  3358     0488                     __end_of_EUSART1_OverrunErrorCallbackRegister:
  3359                           
  3360                           	psect	text10
  3361     0488                     __ptext10:	
  3362 ;; *************** function _EUSART1_FramingErrorCallbackRegister *****************
  3363 ;; Defined at:
  3364 ;;		line 412 in file "mcc_generated_files/uart/src/eusart1.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  callbackHand    2    2[COMMON] PTR FTN()void 
  3367 ;;		 -> EUSART1_DefaultFramingErrorCallback(1), DVRT_Error_Callback(1), 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3379 ;;      Params:         2       0       0       0       0       0       0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0       0
  3382 ;;      Totals:         2       0       0       0       0       0       0       0
  3383 ;;Total ram usage:        2 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 3
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_EUSART1_Initialize
  3390 ;;		_DVRT_Initialize
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394     0488                     _EUSART1_FramingErrorCallbackRegister:	
  3395                           ;psect for function _EUSART1_FramingErrorCallbackRegister
  3396                           
  3397     0488                     l1662:	
  3398                           ;incstack = 0
  3399                           ; Regs used in _EUSART1_FramingErrorCallbackRegister: [wreg+status,2+status,0]
  3400                           
  3401                           
  3402                           ;mcc_generated_files/uart/src/eusart1.c: 412: void EUSART1_FramingErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 413: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 414:     if(((void*)0) != callbackHandler)
  3403     0488  0872               	movf	EUSART1_FramingErrorCallbackRegister@callbackHandler,w
  3404     0489  0473               	iorwf	EUSART1_FramingErrorCallbackRegister@callbackHandler+1,w
  3405     048A  1903               	btfsc	3,2
  3406     048B  2C8D               	goto	u611
  3407     048C  2C8E               	goto	u610
  3408     048D                     u611:
  3409     048D  2C93               	goto	l535
  3410     048E                     u610:
  3411     048E                     l1664:
  3412                           
  3413                           ;mcc_generated_files/uart/src/eusart1.c: 415:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 416:         EUSART1_FramingErrorHandler = callbackHandler;
  3414     048E  0873               	movf	EUSART1_FramingErrorCallbackRegister@callbackHandler+1,w
  3415     048F  0140               	movlb	0	; select bank0
  3416     0490  00C3               	movwf	_EUSART1_FramingErrorHandler+1
  3417     0491  0872               	movf	EUSART1_FramingErrorCallbackRegister@callbackHandler,w
  3418     0492  00C2               	movwf	_EUSART1_FramingErrorHandler
  3419     0493                     l535:
  3420     0493  0008               	return
  3421     0494                     __end_of_EUSART1_FramingErrorCallbackRegister:
  3422                           
  3423                           	psect	text11
  3424     04CA                     __ptext11:	
  3425 ;; *************** function _CLOCK_Initialize *****************
  3426 ;; Defined at:
  3427 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		status,2
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3441 ;;      Params:         0       0       0       0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 3
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_SYSTEM_Initialize
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455     04CA                     _CLOCK_Initialize:	
  3456                           ;psect for function _CLOCK_Initialize
  3457                           
  3458     04CA                     l1834:	
  3459                           ;incstack = 0
  3460                           ; Regs used in _CLOCK_Initialize: [status,2]
  3461                           
  3462                           
  3463                           ;mcc_generated_files/system/src/clock.c: 41:     OSCEN = (0 << 0x6)
  3464     04CA  0151               	movlb	17	; select bank17
  3465     04CB  0191               	clrf	17	;volatile
  3466                           
  3467                           ;mcc_generated_files/system/src/clock.c: 45:     OSCFRQ = (0 << 0x0);
  3468     04CC  0193               	clrf	19	;volatile
  3469                           
  3470                           ;mcc_generated_files/system/src/clock.c: 46:     OSCTUNE = (0 << 0x0);
  3471     04CD  0192               	clrf	18	;volatile
  3472     04CE                     l257:
  3473     04CE  0008               	return
  3474     04CF                     __end_of_CLOCK_Initialize:
  3475                           
  3476                           	psect	text12
  3477     0420                     __ptext12:	
  3478 ;; *************** function _PWM3_LoadDutyValue *****************
  3479 ;; Defined at:
  3480 ;;		line 62 in file "mcc_generated_files/pwm/src/pwm3.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  dutyValue       2    2[COMMON] unsigned short 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3494 ;;      Params:         2       0       0       0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0
  3496 ;;      Temps:          2       0       0       0       0       0       0       0
  3497 ;;      Totals:         4       0       0       0       0       0       0       0
  3498 ;;Total ram usage:        4 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; Hardware stack levels required when called: 3
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508     0420                     _PWM3_LoadDutyValue:	
  3509                           ;psect for function _PWM3_LoadDutyValue
  3510                           
  3511     0420                     l1946:	
  3512                           ;incstack = 0
  3513                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  3514                           
  3515                           
  3516                           ;mcc_generated_files/pwm/src/pwm3.c: 62:  void PWM3_LoadDutyValue(uint16_t dutyValue);mc
      +                          c_generated_files/pwm/src/pwm3.c: 63:  {;mcc_generated_files/pwm/src/pwm3.c: 65:      PW
      +                          M3DCH = (uint8_t) ((dutyValue & 0x03FCu) >> 2);
  3517     0420  0873               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  3518     0421  00F5               	movwf	??_PWM3_LoadDutyValue+1
  3519     0422  0872               	movf	PWM3_LoadDutyValue@dutyValue,w
  3520     0423  00F4               	movwf	??_PWM3_LoadDutyValue
  3521     0424  36F5               	lsrf	??_PWM3_LoadDutyValue+1,f
  3522     0425  0CF4               	rrf	??_PWM3_LoadDutyValue,f
  3523     0426  36F5               	lsrf	??_PWM3_LoadDutyValue+1,f
  3524     0427  0CF4               	rrf	??_PWM3_LoadDutyValue,f
  3525     0428  0874               	movf	??_PWM3_LoadDutyValue,w
  3526     0429  0146               	movlb	6	; select bank6
  3527     042A  0095               	movwf	21	;volatile
  3528                           
  3529                           ;mcc_generated_files/pwm/src/pwm3.c: 68:      PWM3DCL = (uint8_t) ((dutyValue & 0x0003u)
      +                           << 6);
  3530     042B  0872               	movf	PWM3_LoadDutyValue@dutyValue,w
  3531     042C  3903               	andlw	3
  3532     042D  00F4               	movwf	??_PWM3_LoadDutyValue
  3533     042E  3006               	movlw	6
  3534     042F                     u885:
  3535     042F  35F4               	lslf	??_PWM3_LoadDutyValue,f
  3536     0430  0B89               	decfsz	9,f
  3537     0431  2C2F               	goto	u885
  3538     0432  0874               	movf	??_PWM3_LoadDutyValue,w
  3539     0433  0094               	movwf	20	;volatile
  3540     0434                     l108:
  3541     0434  0008               	return
  3542     0435                     __end_of_PWM3_LoadDutyValue:
  3543                           
  3544                           	psect	text13
  3545     03D6                     __ptext13:	
  3546 ;; *************** function _PWM3_Initialize2 *****************
  3547 ;; Defined at:
  3548 ;;		line 41 in file "main.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0, pclath, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3562 ;;      Params:         0       0       0       0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; Hardware stack levels required when called: 4
  3569 ;; This function calls:
  3570 ;;		_TMR2_PeriodSet
  3571 ;; This function is called by:
  3572 ;;		_main
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576     03D6                     _PWM3_Initialize2:	
  3577                           ;psect for function _PWM3_Initialize2
  3578                           
  3579     03D6                     l2014:	
  3580                           ;incstack = 0
  3581                           ; Regs used in _PWM3_Initialize2: [wreg+status,2+status,0+pclath+cstack]
  3582                           
  3583                           
  3584                           ;main.c: 46:     ANSELAbits.ANSA2 = 0;
  3585     03D6  017E               	movlb	62	; select bank62
  3586     03D7  1138               	bcf	56,2	;volatile
  3587                           
  3588                           ;main.c: 47:     TRISAbits.TRISA2 = 1U;
  3589     03D8  0140               	movlb	0	; select bank0
  3590     03D9  1512               	bsf	18,2	;volatile
  3591     03DA                     l2016:
  3592                           
  3593                           ;main.c: 48:     PWM3CON = 0;
  3594     03DA  0146               	movlb	6	; select bank6
  3595     03DB  0196               	clrf	22	;volatile
  3596     03DC                     l2018:
  3597                           
  3598                           ;main.c: 50:     TMR2_PeriodSet((0x7F) >> 0);
  3599     03DC  307F               	movlw	127
  3600     03DD  3184  24CF  3183   	fcall	_TMR2_PeriodSet
  3601     03E0                     l2020:
  3602                           
  3603                           ;main.c: 53:     PIR1bits.TMR2IF = 0;
  3604     03E0  014E               	movlb	14	; select bank14
  3605     03E1  130D               	bcf	13,6	;volatile
  3606     03E2                     l2022:
  3607                           
  3608                           ;main.c: 54:     T2CLKCON = (1 << 0x0);
  3609     03E2  3001               	movlw	1
  3610     03E3  0145               	movlb	5	; select bank5
  3611     03E4  0090               	movwf	16	;volatile
  3612     03E5                     l2024:
  3613                           
  3614                           ;main.c: 55:     T2CON = (2 << 0x4)
  3615     03E5  30A0               	movlw	160
  3616     03E6  008E               	movwf	14	;volatile
  3617     03E7                     l2026:
  3618                           
  3619                           ;main.c: 58:     RA2PPS = 0x03;
  3620     03E7  3003               	movlw	3
  3621     03E8  017E               	movlb	62	; select bank62
  3622     03E9  0092               	movwf	18	;volatile
  3623     03EA                     l2028:
  3624                           
  3625                           ;main.c: 59:     TRISAbits.TRISA2 = 0;
  3626     03EA  0140               	movlb	0	; select bank0
  3627     03EB  1112               	bcf	18,2	;volatile
  3628     03EC                     l2030:
  3629                           
  3630                           ;main.c: 60:     PWM3CON = 0x90U;
  3631     03EC  3090               	movlw	144
  3632     03ED  0146               	movlb	6	; select bank6
  3633     03EE  0096               	movwf	22	;volatile
  3634     03EF                     l576:
  3635     03EF  0008               	return
  3636     03F0                     __end_of_PWM3_Initialize2:
  3637                           
  3638                           	psect	text14
  3639     04CF                     __ptext14:	
  3640 ;; *************** function _TMR2_PeriodSet *****************
  3641 ;; Defined at:
  3642 ;;		line 120 in file "mcc_generated_files/timer/src/tmr2.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  periodVal       1    wreg     unsigned char 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  periodVal       1    2[COMMON] unsigned char 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3656 ;;      Params:         0       0       0       0       0       0       0       0
  3657 ;;      Locals:         1       0       0       0       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0       0
  3659 ;;      Totals:         1       0       0       0       0       0       0       0
  3660 ;;Total ram usage:        1 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 3
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_PWM3_Initialize2
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670     04CF                     _TMR2_PeriodSet:	
  3671                           ;psect for function _TMR2_PeriodSet
  3672                           
  3673                           
  3674                           ;incstack = 0
  3675                           ; Regs used in _TMR2_PeriodSet: [wreg]
  3676                           ;TMR2_PeriodSet@periodVal stored from wreg
  3677     04CF  00F2               	movwf	TMR2_PeriodSet@periodVal
  3678     04D0                     l1886:
  3679                           
  3680                           ;mcc_generated_files/timer/src/tmr2.c: 120: void TMR2_PeriodSet(uint8_t periodVal);mcc_g
      +                          enerated_files/timer/src/tmr2.c: 121: {;mcc_generated_files/timer/src/tmr2.c: 122:     T
      +                          2PR = periodVal;
  3681     04D0  0872               	movf	TMR2_PeriodSet@periodVal,w
  3682     04D1  0145               	movlb	5	; select bank5
  3683     04D2  008D               	movwf	13	;volatile
  3684     04D3                     l312:
  3685     04D3  0008               	return
  3686     04D4                     __end_of_TMR2_PeriodSet:
  3687                           
  3688                           	psect	text15
  3689     0130                     __ptext15:	
  3690 ;; *************** function _DVRT_Process *****************
  3691 ;; Defined at:
  3692 ;;		line 147 in file "mcc_generated_files/DVRT/src/DVRunTime.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3706 ;;      Params:         0       0       0       0       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0       0
  3708 ;;      Temps:          0       3       0       0       0       0       0       0
  3709 ;;      Totals:         0       3       0       0       0       0       0       0
  3710 ;;Total ram usage:        3 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; Hardware stack levels required when called: 6
  3713 ;; This function calls:
  3714 ;;		_DVRT_HandleCommand
  3715 ;;		_DVRT_WritePacket
  3716 ;;		_EUSART1_ErrorGet
  3717 ;;		_EUSART1_IsRxReady
  3718 ;;		_EUSART1_Read
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724     0130                     _DVRT_Process:	
  3725                           ;psect for function _DVRT_Process
  3726                           
  3727     0130                     l2210:	
  3728                           ;incstack = 0
  3729                           ; Regs used in _DVRT_Process: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3730                           
  3731                           
  3732                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 149:  if(error){
  3733     0130  0140               	movlb	0	; select bank0
  3734     0131  0858               	movf	_error,w
  3735     0132  0459               	iorwf	_error+1,w
  3736     0133  1903               	btfsc	3,2
  3737     0134  2936               	goto	u1251
  3738     0135  2937               	goto	u1250
  3739     0136                     u1251:
  3740     0136  2958               	goto	l2222
  3741     0137                     u1250:
  3742     0137                     l2212:
  3743                           
  3744                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 150:   EUSART1_ErrorGet();
  3745     0137  3184  246E  3181   	fcall	_EUSART1_ErrorGet
  3746     013A                     l2214:
  3747                           
  3748                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 151:   rxBufPtr = 0;
  3749     013A  0140               	movlb	0	; select bank0
  3750     013B  01E2               	clrf	_rxBufPtr	;volatile
  3751     013C                     l2216:
  3752                           
  3753                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 152:   error = 0;
  3754     013C  01D8               	clrf	_error
  3755     013D  01D9               	clrf	_error+1
  3756                           
  3757                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 153:  }
  3758     013E  2966               	goto	l2224
  3759     013F                     l2218:
  3760                           
  3761                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 156:   DVRT_ReceivedCmd.DVCmdArray[rxBufPtr++
      +                          ] = UART->Read();
  3762     013F  3032               	movlw	low ((_UART1+4)| (0+32768))
  3763     0140  0084               	movwf	4
  3764     0141  3083               	movlw	high ((_UART1+4)| (0+32768))
  3765     0142  0085               	movwf	5
  3766     0143  3F01               	moviw [1]fsr0
  3767     0144  008A               	movwf	10
  3768     0145  3F00               	moviw [0]fsr0
  3769     0146  000A               	callw
  3770     0147  3181               	pagesel	$
  3771     0148  0140               	movlb	0	; select bank0
  3772     0149  00E7               	movwf	??_DVRT_Process
  3773     014A  0862               	movf	_rxBufPtr,w	;volatile
  3774     014B  3EC0               	addlw	low _DVRT_ReceivedCmd
  3775     014C  00E8               	movwf	??_DVRT_Process+1
  3776     014D  01E9               	clrf	??_DVRT_Process+2
  3777     014E  3000               	movlw	high _DVRT_ReceivedCmd
  3778     014F  3DE9               	addwfc	??_DVRT_Process+2,f
  3779     0150  0868               	movf	??_DVRT_Process+1,w
  3780     0151  0086               	movwf	6
  3781     0152  0869               	movf	??_DVRT_Process+2,w
  3782     0153  0087               	movwf	7
  3783     0154  0867               	movf	??_DVRT_Process,w
  3784     0155  0081               	movwf	1
  3785     0156                     l2220:
  3786     0156  3001               	movlw	1
  3787     0157  07E2               	addwf	_rxBufPtr,f	;volatile
  3788     0158                     l2222:
  3789                           
  3790                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 155:   while(UART->IsRxReady()) {
  3791     0158  3036               	movlw	low ((_UART1+8)| (0+32768))
  3792     0159  0084               	movwf	4
  3793     015A  3083               	movlw	high ((_UART1+8)| (0+32768))
  3794     015B  0085               	movwf	5
  3795     015C  3F01               	moviw [1]fsr0
  3796     015D  008A               	movwf	10
  3797     015E  3F00               	moviw [0]fsr0
  3798     015F  000A               	callw
  3799     0160  3181               	pagesel	$
  3800     0161  3A00               	xorlw	0
  3801     0162  1D03               	skipz
  3802     0163  2965               	goto	u1261
  3803     0164  2966               	goto	u1260
  3804     0165                     u1261:
  3805     0165  293F               	goto	l2218
  3806     0166                     u1260:
  3807     0166                     l2224:
  3808                           
  3809                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 160:  if(DVCmdInterval_Counter++ >= DVCmdInte
      +                          rval){
  3810     0166  0140               	movlb	0	; select bank0
  3811     0167  0851               	movf	_DVCmdInterval_Counter+1,w
  3812     0168  00E8               	movwf	??_DVRT_Process+1
  3813     0169  0850               	movf	_DVCmdInterval_Counter,w
  3814     016A  00E7               	movwf	??_DVRT_Process
  3815     016B  0AD0               	incf	_DVCmdInterval_Counter,f
  3816     016C  1903               	skipnz
  3817     016D  0AD1               	incf	_DVCmdInterval_Counter+1,f
  3818     016E  0853               	movf	_DVCmdInterval+1,w
  3819     016F  0268               	subwf	??_DVRT_Process+1,w
  3820     0170  1D03               	skipz
  3821     0171  2974               	goto	u1275
  3822     0172  0852               	movf	_DVCmdInterval,w
  3823     0173  0267               	subwf	??_DVRT_Process,w
  3824     0174                     u1275:
  3825     0174  1C03               	skipc
  3826     0175  2977               	goto	u1271
  3827     0176  2978               	goto	u1270
  3828     0177                     u1271:
  3829     0177  297D               	goto	l2230
  3830     0178                     u1270:
  3831     0178                     l2226:
  3832                           
  3833                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 161:   DVCmdInterval_Counter = 0;
  3834     0178  01D0               	clrf	_DVCmdInterval_Counter
  3835     0179  01D1               	clrf	_DVCmdInterval_Counter+1
  3836     017A                     l2228:
  3837                           
  3838                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 162:   DVRT_HandleCommand();
  3839     017A  3180  2063  3181   	fcall	_DVRT_HandleCommand
  3840     017D                     l2230:
  3841                           
  3842                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 165:  if(DVStreamInterval_Counter++ >= DVStre
      +                          amInterval){
  3843     017D  0140               	movlb	0	; select bank0
  3844     017E  0855               	movf	_DVStreamInterval_Counter+1,w
  3845     017F  00E8               	movwf	??_DVRT_Process+1
  3846     0180  0854               	movf	_DVStreamInterval_Counter,w
  3847     0181  00E7               	movwf	??_DVRT_Process
  3848     0182  0AD4               	incf	_DVStreamInterval_Counter,f
  3849     0183  1903               	skipnz
  3850     0184  0AD5               	incf	_DVStreamInterval_Counter+1,f
  3851     0185  0857               	movf	_DVStreamInterval+1,w
  3852     0186  0268               	subwf	??_DVRT_Process+1,w
  3853     0187  1D03               	skipz
  3854     0188  298B               	goto	u1285
  3855     0189  0856               	movf	_DVStreamInterval,w
  3856     018A  0267               	subwf	??_DVRT_Process,w
  3857     018B                     u1285:
  3858     018B  1C03               	skipc
  3859     018C  298E               	goto	u1281
  3860     018D  298F               	goto	u1280
  3861     018E                     u1281:
  3862     018E  2998               	goto	l2238
  3863     018F                     u1280:
  3864     018F                     l2232:
  3865                           
  3866                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 166:   DVStreamInterval_Counter = 0;
  3867     018F  01D4               	clrf	_DVStreamInterval_Counter
  3868     0190  01D5               	clrf	_DVStreamInterval_Counter+1
  3869     0191                     l2234:
  3870                           
  3871                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 167:   if(DVflag.streamOn){
  3872     0191  1C60               	btfss	_DVflag,0
  3873     0192  2994               	goto	u1291
  3874     0193  2995               	goto	u1290
  3875     0194                     u1291:
  3876     0194  2998               	goto	l2238
  3877     0195                     u1290:
  3878     0195                     l2236:
  3879                           
  3880                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 168:    DVRT_WritePacket();
  3881     0195  3181  21A5  3181   	fcall	_DVRT_WritePacket
  3882     0198                     l2238:
  3883                           
  3884                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 172:  if(DVflag.osr || DVflag.ping){
  3885     0198  0140               	movlb	0	; select bank0
  3886     0199  18E0               	btfsc	_DVflag,1
  3887     019A  299C               	goto	u1301
  3888     019B  299D               	goto	u1300
  3889     019C                     u1301:
  3890     019C  29A1               	goto	l75
  3891     019D                     u1300:
  3892     019D                     l2240:
  3893     019D  1D60               	btfss	_DVflag,2
  3894     019E  29A0               	goto	u1311
  3895     019F  29A1               	goto	u1310
  3896     01A0                     u1311:
  3897     01A0  29A4               	goto	l76
  3898     01A1                     u1310:
  3899     01A1                     l75:
  3900                           
  3901                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 173:   DVflag.osr = 0;
  3902     01A1  10E0               	bcf	_DVflag,1
  3903                           
  3904                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 174:   DVflag.ping = 0;
  3905     01A2  1160               	bcf	_DVflag,2
  3906                           
  3907                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 175:   DVflag.streamOn = 0;
  3908     01A3  1060               	bcf	_DVflag,0
  3909     01A4                     l76:
  3910     01A4  0008               	return
  3911     01A5                     __end_of_DVRT_Process:
  3912                           
  3913                           	psect	text16
  3914     03F0                     __ptext16:	
  3915 ;; *************** function _EUSART1_Read *****************
  3916 ;; Defined at:
  3917 ;;		line 288 in file "mcc_generated_files/uart/src/eusart1.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  readValue       1    3[COMMON] unsigned char 
  3922 ;;  tempRxTail      1    2[COMMON] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      unsigned char 
  3925 ;; Registers used:
  3926 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3932 ;;      Params:         0       0       0       0       0       0       0       0
  3933 ;;      Locals:         2       0       0       0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0
  3935 ;;      Totals:         2       0       0       0       0       0       0       0
  3936 ;;Total ram usage:        2 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; Hardware stack levels required when called: 3
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_DVRT_Process
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946     03F0                     _EUSART1_Read:	
  3947                           ;psect for function _EUSART1_Read
  3948                           
  3949     03F0                     l1892:	
  3950                           ;incstack = 0
  3951                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  3952                           
  3953     03F0                     l1894:
  3954                           
  3955                           ;mcc_generated_files/uart/src/eusart1.c: 291:     uint8_t tempRxTail;;mcc_generated_file
      +                          s/uart/src/eusart1.c: 293:     readValue = eusart1RxBuffer[eusart1RxTail];
  3956     03F0  0879               	movf	_eusart1RxTail,w
  3957     03F1  3EA0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  3958     03F2  0086               	movwf	6
  3959     03F3  0187               	clrf	7
  3960     03F4  0801               	movf	1,w
  3961     03F5  00F3               	movwf	EUSART1_Read@readValue
  3962     03F6                     l1896:
  3963                           
  3964                           ;mcc_generated_files/uart/src/eusart1.c: 295:     tempRxTail = (eusart1RxTail + 1U) & ((
      +                          32U) - 1U);
  3965     03F6  0879               	movf	_eusart1RxTail,w	;volatile
  3966     03F7  3E01               	addlw	1
  3967     03F8  391F               	andlw	31
  3968     03F9  00F2               	movwf	EUSART1_Read@tempRxTail
  3969     03FA                     l1898:
  3970                           
  3971                           ;mcc_generated_files/uart/src/eusart1.c: 297:     eusart1RxTail = tempRxTail;
  3972     03FA  0872               	movf	EUSART1_Read@tempRxTail,w
  3973     03FB  00F9               	movwf	_eusart1RxTail	;volatile
  3974     03FC                     l1900:
  3975                           
  3976                           ;mcc_generated_files/uart/src/eusart1.c: 299:     PIE1bits.RC1IE = 0;
  3977     03FC  014E               	movlb	14	; select bank14
  3978     03FD  1217               	bcf	23,4	;volatile
  3979     03FE                     l1902:
  3980                           
  3981                           ;mcc_generated_files/uart/src/eusart1.c: 300:     if(0U != eusart1RxCount)
  3982     03FE  0140               	movlb	0	; select bank0
  3983     03FF  085B               	movf	_eusart1RxCount,w	;volatile
  3984     0400  1903               	btfsc	3,2
  3985     0401  2C03               	goto	u801
  3986     0402  2C04               	goto	u800
  3987     0403                     u801:
  3988     0403  2C06               	goto	l1906
  3989     0404                     u800:
  3990     0404                     l1904:
  3991                           
  3992                           ;mcc_generated_files/uart/src/eusart1.c: 301:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 302:         eusart1RxCount--;
  3993     0404  3001               	movlw	1
  3994     0405  02DB               	subwf	_eusart1RxCount,f	;volatile
  3995     0406                     l1906:
  3996                           
  3997                           ;mcc_generated_files/uart/src/eusart1.c: 304:     PIE1bits.RC1IE = 1;
  3998     0406  014E               	movlb	14	; select bank14
  3999     0407  1617               	bsf	23,4	;volatile
  4000     0408                     l1908:
  4001                           
  4002                           ;mcc_generated_files/uart/src/eusart1.c: 305:     return readValue;
  4003     0408  0873               	movf	EUSART1_Read@readValue,w
  4004     0409                     l502:
  4005     0409  0008               	return
  4006     040A                     __end_of_EUSART1_Read:
  4007                           
  4008                           	psect	text17
  4009     049F                     __ptext17:	
  4010 ;; *************** function _EUSART1_IsRxReady *****************
  4011 ;; Defined at:
  4012 ;;		line 267 in file "mcc_generated_files/uart/src/eusart1.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      _Bool 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4026 ;;      Params:         0       0       0       0       0       0       0       0
  4027 ;;      Locals:         0       0       0       0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0
  4029 ;;      Totals:         0       0       0       0       0       0       0       0
  4030 ;;Total ram usage:        0 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; Hardware stack levels required when called: 3
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_DVRT_Process
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040     049F                     _EUSART1_IsRxReady:	
  4041                           ;psect for function _EUSART1_IsRxReady
  4042                           
  4043     049F                     l1888:	
  4044                           ;incstack = 0
  4045                           ; Regs used in _EUSART1_IsRxReady: [wreg+status,2+status,0]
  4046                           
  4047                           
  4048                           ;mcc_generated_files/uart/src/eusart1.c: 269:     return (eusart1RxCount ? 1 : 0);
  4049     049F  0140               	movlb	0	; select bank0
  4050     04A0  085B               	movf	_eusart1RxCount,w	;volatile
  4051     04A1  1D03               	btfss	3,2
  4052     04A2  2CA4               	goto	u781
  4053     04A3  2CA6               	goto	u780
  4054     04A4                     u781:
  4055     04A4  3001               	movlw	1
  4056     04A5  2CA7               	goto	u790
  4057     04A6                     u780:
  4058     04A6  3000               	movlw	0
  4059     04A7                     u790:
  4060     04A7                     l489:
  4061     04A7  0008               	return
  4062     04A8                     __end_of_EUSART1_IsRxReady:
  4063                           
  4064                           	psect	text18
  4065     046E                     __ptext18:	
  4066 ;; *************** function _EUSART1_ErrorGet *****************
  4067 ;; Defined at:
  4068 ;;		line 282 in file "mcc_generated_files/uart/src/eusart1.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  2   10[None  ] unsigned int 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4082 ;;      Params:         0       0       0       0       0       0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0
  4084 ;;      Temps:          1       0       0       0       0       0       0       0
  4085 ;;      Totals:         1       0       0       0       0       0       0       0
  4086 ;;Total ram usage:        1 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; Hardware stack levels required when called: 3
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_DVRT_Process
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096     046E                     _EUSART1_ErrorGet:	
  4097                           ;psect for function _EUSART1_ErrorGet
  4098                           
  4099     046E                     l1748:	
  4100                           ;incstack = 0
  4101                           ; Regs used in _EUSART1_ErrorGet: [wreg+fsr1l+fsr1h+status,2+status,0]
  4102                           
  4103                           
  4104                           ;mcc_generated_files/uart/src/eusart1.c: 284:     eusart1RxLastError.status = eusart1RxS
      +                          tatusBuffer[(eusart1RxTail) & ((32U) - 1U)].status;
  4105     046E  301F               	movlw	31
  4106     046F  0579               	andwf	_eusart1RxTail,w	;volatile
  4107     0470  00F2               	movwf	??_EUSART1_ErrorGet
  4108     0471  3572               	lslf	??_EUSART1_ErrorGet,w
  4109     0472  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
  4110     0473  0086               	movwf	6
  4111     0474  3001               	movlw	1	; select bank2/3
  4112     0475  0087               	movwf	7
  4113     0476  3F40               	moviw [0]fsr1
  4114     0477  0140               	movlb	0	; select bank0
  4115     0478  00C8               	movwf	_eusart1RxLastError	;volatile
  4116     0479  3F41               	moviw [1]fsr1
  4117     047A  00C9               	movwf	_eusart1RxLastError+1	;volatile
  4118     047B                     l498:
  4119     047B  0008               	return
  4120     047C                     __end_of_EUSART1_ErrorGet:
  4121                           
  4122                           	psect	text19
  4123     01A5                     __ptext19:	
  4124 ;; *************** function _DVRT_WritePacket *****************
  4125 ;; Defined at:
  4126 ;;		line 105 in file "mcc_generated_files/DVRT/src/DVRunTime.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  i               1    8[COMMON] unsigned char 
  4131 ;;  k               1    7[COMMON] unsigned char 
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4141 ;;      Params:         0       0       0       0       0       0       0       0
  4142 ;;      Locals:         2       0       0       0       0       0       0       0
  4143 ;;      Temps:          2       0       0       0       0       0       0       0
  4144 ;;      Totals:         4       0       0       0       0       0       0       0
  4145 ;;Total ram usage:        4 bytes
  4146 ;; Hardware stack levels used: 1
  4147 ;; Hardware stack levels required when called: 5
  4148 ;; This function calls:
  4149 ;;		_DVRT_UART_WriteByte
  4150 ;;		___bmul
  4151 ;; This function is called by:
  4152 ;;		_DVRT_Process
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156     01A5                     _DVRT_WritePacket:	
  4157                           ;psect for function _DVRT_WritePacket
  4158                           
  4159     01A5                     l2122:	
  4160                           ;incstack = 0
  4161                           ; Regs used in _DVRT_WritePacket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4162                           
  4163                           
  4164                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 106:  uint8_t i, k;;mcc_generated_files/DVRT/
      +                          src/DVRunTime.c: 107:  DVRT_UART_WriteByte(0x03);
  4165     01A5  3003               	movlw	3
  4166     01A6  3183  23A0  3181   	fcall	_DVRT_UART_WriteByte
  4167                           
  4168                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 108:  DVRT_UART_WriteByte(tickCounter++);
  4169     01A9  0140               	movlb	0	; select bank0
  4170     01AA  0861               	movf	_tickCounter,w	;volatile
  4171     01AB  3183  23A0  3181   	fcall	_DVRT_UART_WriteByte
  4172     01AE                     l2124:
  4173     01AE  3001               	movlw	1
  4174     01AF  0140               	movlb	0	; select bank0
  4175     01B0  07E1               	addwf	_tickCounter,f	;volatile
  4176     01B1                     l2126:
  4177                           
  4178                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 109:  if(DVflag.ping){
  4179     01B1  1D60               	btfss	_DVflag,2
  4180     01B2  29B4               	goto	u1161
  4181     01B3  29B5               	goto	u1160
  4182     01B4                     u1161:
  4183     01B4  29BE               	goto	l2130
  4184     01B5                     u1160:
  4185     01B5                     l2128:
  4186                           
  4187                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 110:   DVRT_UART_WriteByte((uint8_t)((uint16_
      +                          t)261));
  4188     01B5  3005               	movlw	5
  4189     01B6  3183  23A0  3181   	fcall	_DVRT_UART_WriteByte
  4190                           
  4191                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 111:   DVRT_UART_WriteByte((uint8_t)((uint16_
      +                          t)261>>8));
  4192     01B9  3001               	movlw	1
  4193     01BA  3183  23A0  3181   	fcall	_DVRT_UART_WriteByte
  4194                           
  4195                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 112:  }
  4196     01BD  29F1               	goto	l2148
  4197     01BE                     l2130:
  4198                           
  4199                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 114:   for (i = 0; i < 8; i++) {
  4200     01BE  01F8               	clrf	DVRT_WritePacket@i
  4201     01BF                     l2136:
  4202                           
  4203                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 115:    for (k = 0; k < DVPMT[i].size; k++) {
  4204     01BF  01F7               	clrf	DVRT_WritePacket@k
  4205     01C0  29DA               	goto	l2142
  4206     01C1                     l2138:
  4207                           
  4208                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 116:     DVRT_UART_WriteByte(*(DVPMT[i].addre
      +                          ss + k));
  4209     01C1  3003               	movlw	3
  4210     01C2  00F2               	movwf	___bmul@multiplicand
  4211     01C3  0878               	movf	DVRT_WritePacket@i,w
  4212     01C4  3184  2449  3181   	fcall	___bmul
  4213     01C7  3E21               	addlw	(low ((_DVPMT| 0+1)))& (0+255)
  4214     01C8  0086               	movwf	6
  4215     01C9  0187               	clrf	7
  4216     01CA  3F40               	moviw [0]fsr1
  4217     01CB  00F5               	movwf	??_DVRT_WritePacket
  4218     01CC  3F41               	moviw [1]fsr1
  4219     01CD  00F6               	movwf	??_DVRT_WritePacket+1
  4220     01CE  0877               	movf	DVRT_WritePacket@k,w
  4221     01CF  0775               	addwf	??_DVRT_WritePacket,w
  4222     01D0  0086               	movwf	6
  4223     01D1  3000               	movlw	0
  4224     01D2  3D76               	addwfc	??_DVRT_WritePacket+1,w
  4225     01D3  0087               	movwf	7
  4226     01D4  0801               	movf	1,w
  4227     01D5  3183  23A0  3181   	fcall	_DVRT_UART_WriteByte
  4228     01D8                     l2140:
  4229                           
  4230                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 117:    }
  4231     01D8  3001               	movlw	1
  4232     01D9  07F7               	addwf	DVRT_WritePacket@k,f
  4233     01DA                     l2142:
  4234     01DA  3003               	movlw	3
  4235     01DB  00F2               	movwf	___bmul@multiplicand
  4236     01DC  0878               	movf	DVRT_WritePacket@i,w
  4237     01DD  3184  2449  3181   	fcall	___bmul
  4238     01E0  3E20               	addlw	(low (_DVPMT| 0))& (0+255)
  4239     01E1  0086               	movwf	6
  4240     01E2  0187               	clrf	7
  4241     01E3  0801               	movf	1,w
  4242     01E4  0277               	subwf	DVRT_WritePacket@k,w
  4243     01E5  1C03               	skipc
  4244     01E6  29E8               	goto	u1171
  4245     01E7  29E9               	goto	u1170
  4246     01E8                     u1171:
  4247     01E8  29C1               	goto	l2138
  4248     01E9                     u1170:
  4249     01E9                     l2144:
  4250                           
  4251                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 118:   }
  4252     01E9  3001               	movlw	1
  4253     01EA  07F8               	addwf	DVRT_WritePacket@i,f
  4254     01EB                     l2146:
  4255     01EB  3008               	movlw	8
  4256     01EC  0278               	subwf	DVRT_WritePacket@i,w
  4257     01ED  1C03               	skipc
  4258     01EE  29F0               	goto	u1181
  4259     01EF  29F1               	goto	u1180
  4260     01F0                     u1181:
  4261     01F0  29BF               	goto	l2136
  4262     01F1                     u1180:
  4263     01F1                     l2148:
  4264                           
  4265                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 120:  DVRT_UART_WriteByte(0xFC);
  4266     01F1  30FC               	movlw	252
  4267     01F2  3183  23A0  3181   	fcall	_DVRT_UART_WriteByte
  4268     01F5                     l54:
  4269     01F5  0008               	return
  4270     01F6                     __end_of_DVRT_WritePacket:
  4271                           
  4272                           	psect	text20
  4273     03A0                     __ptext20:	
  4274 ;; *************** function _DVRT_UART_WriteByte *****************
  4275 ;; Defined at:
  4276 ;;		line 99 in file "mcc_generated_files/DVRT/src/DVRunTime.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  txData          1    wreg     unsigned char 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  txData          1    4[COMMON] unsigned char 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      void 
  4283 ;; Registers used:
  4284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4290 ;;      Params:         0       0       0       0       0       0       0       0
  4291 ;;      Locals:         1       0       0       0       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0       0       0       0
  4293 ;;      Totals:         1       0       0       0       0       0       0       0
  4294 ;;Total ram usage:        1 bytes
  4295 ;; Hardware stack levels used: 1
  4296 ;; Hardware stack levels required when called: 4
  4297 ;; This function calls:
  4298 ;;		_EUSART1_IsTxReady
  4299 ;;		_EUSART1_Write
  4300 ;; This function is called by:
  4301 ;;		_DVRT_WritePacket
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305     03A0                     _DVRT_UART_WriteByte:	
  4306                           ;psect for function _DVRT_UART_WriteByte
  4307                           
  4308                           
  4309                           ;incstack = 0
  4310                           ; Regs used in _DVRT_UART_WriteByte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4311                           ;DVRT_UART_WriteByte@txData stored from wreg
  4312     03A0  00F4               	movwf	DVRT_UART_WriteByte@txData
  4313     03A1                     l1654:
  4314     03A1                     l1656:	
  4315                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 100:  while(!UART->IsTxReady()){
  4316                           
  4317                           
  4318                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 100:  while(!UART->IsTxReady()){
  4319     03A1  3038               	movlw	low ((_UART1+10)| (0+32768))
  4320     03A2  0084               	movwf	4
  4321     03A3  3083               	movlw	high ((_UART1+10)| (0+32768))
  4322     03A4  0085               	movwf	5
  4323     03A5  3F01               	moviw [1]fsr0
  4324     03A6  008A               	movwf	10
  4325     03A7  3F00               	moviw [0]fsr0
  4326     03A8  000A               	callw
  4327     03A9  3183               	pagesel	$
  4328     03AA  3A00               	xorlw	0
  4329     03AB  1903               	skipnz
  4330     03AC  2BAE               	goto	u601
  4331     03AD  2BAF               	goto	u600
  4332     03AE                     u601:
  4333     03AE  2BA1               	goto	l1656
  4334     03AF                     u600:
  4335     03AF                     l1658:
  4336                           
  4337                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 102:  UART->Write(txData);
  4338     03AF  0874               	movf	DVRT_UART_WriteByte@txData,w
  4339     03B0  00F2               	movwf	EUSART1_Write@txData
  4340     03B1  3034               	movlw	low ((_UART1+6)| (0+32768))
  4341     03B2  0084               	movwf	4
  4342     03B3  3083               	movlw	high ((_UART1+6)| (0+32768))
  4343     03B4  0085               	movwf	5
  4344     03B5  3F01               	moviw [1]fsr0
  4345     03B6  008A               	movwf	10
  4346     03B7  3F00               	moviw [0]fsr0
  4347     03B8  000A               	callw
  4348     03B9  3183               	pagesel	$
  4349     03BA                     l44:
  4350     03BA  0008               	return
  4351     03BB                     __end_of_DVRT_UART_WriteByte:
  4352                           
  4353                           	psect	text21
  4354     035E                     __ptext21:	
  4355 ;; *************** function _EUSART1_Write *****************
  4356 ;; Defined at:
  4357 ;;		line 353 in file "mcc_generated_files/uart/src/eusart1.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  txData          1    2[COMMON] unsigned char 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  tempTxHead      1    3[COMMON] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4371 ;;      Params:         1       0       0       0       0       0       0       0
  4372 ;;      Locals:         1       0       0       0       0       0       0       0
  4373 ;;      Temps:          0       0       0       0       0       0       0       0
  4374 ;;      Totals:         2       0       0       0       0       0       0       0
  4375 ;;Total ram usage:        2 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; Hardware stack levels required when called: 3
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_DVRT_UART_WriteByte
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385     035E                     _EUSART1_Write:	
  4386                           ;psect for function _EUSART1_Write
  4387                           
  4388     035E                     l1638:	
  4389                           ;incstack = 0
  4390                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4391                           
  4392                           
  4393                           ;mcc_generated_files/uart/src/eusart1.c: 353: void EUSART1_Write(uint8_t txData);mcc_gen
      +                          erated_files/uart/src/eusart1.c: 354: {;mcc_generated_files/uart/src/eusart1.c: 355:    
      +                           uint8_t tempTxHead;;mcc_generated_files/uart/src/eusart1.c: 357:     if(0 == PIE1bits.T
      +                          X1IE)
  4394     035E  014E               	movlb	14	; select bank14
  4395     035F  1997               	btfsc	23,3	;volatile
  4396     0360  2B62               	goto	u581
  4397     0361  2B63               	goto	u580
  4398     0362                     u581:
  4399     0362  2B67               	goto	l1642
  4400     0363                     u580:
  4401     0363                     l1640:
  4402                           
  4403                           ;mcc_generated_files/uart/src/eusart1.c: 358:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 359:         TX1REG = txData;
  4404     0363  0872               	movf	EUSART1_Write@txData,w
  4405     0364  0142               	movlb	2	; select bank2
  4406     0365  009A               	movwf	26	;volatile
  4407                           
  4408                           ;mcc_generated_files/uart/src/eusart1.c: 360:     }
  4409     0366  2B7E               	goto	l516
  4410     0367                     l1642:
  4411     0367  0140               	movlb	0	; select bank0
  4412     0368  085C               	movf	_eusart1TxBufferRemaining,w	;volatile
  4413     0369  1903               	btfsc	3,2
  4414     036A  2B6C               	goto	u591
  4415     036B  2B6D               	goto	u590
  4416     036C                     u591:
  4417     036C  2B7E               	goto	l516
  4418     036D                     u590:
  4419     036D                     l1644:
  4420                           
  4421                           ;mcc_generated_files/uart/src/eusart1.c: 362:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 363:        eusart1TxBuffer[eusart1TxHead] = txData;
  4422     036D  085E               	movf	_eusart1TxHead,w
  4423     036E  3E38               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
  4424     036F  0086               	movwf	6
  4425     0370  0187               	clrf	7
  4426     0371  0872               	movf	EUSART1_Write@txData,w
  4427     0372  0081               	movwf	1
  4428     0373                     l1646:
  4429                           
  4430                           ;mcc_generated_files/uart/src/eusart1.c: 364:        tempTxHead = (eusart1TxHead + 1U) &
      +                           ((8U) - 1U);
  4431     0373  085E               	movf	_eusart1TxHead,w	;volatile
  4432     0374  3E01               	addlw	1
  4433     0375  3907               	andlw	7
  4434     0376  00F3               	movwf	EUSART1_Write@tempTxHead
  4435     0377                     l1648:
  4436                           
  4437                           ;mcc_generated_files/uart/src/eusart1.c: 366:        eusart1TxHead = tempTxHead;
  4438     0377  0873               	movf	EUSART1_Write@tempTxHead,w
  4439     0378  00DE               	movwf	_eusart1TxHead	;volatile
  4440     0379                     l1650:
  4441                           
  4442                           ;mcc_generated_files/uart/src/eusart1.c: 367:        PIE1bits.TX1IE = 0;
  4443     0379  014E               	movlb	14	; select bank14
  4444     037A  1197               	bcf	23,3	;volatile
  4445     037B                     l1652:
  4446                           
  4447                           ;mcc_generated_files/uart/src/eusart1.c: 368:        eusart1TxBufferRemaining--;
  4448     037B  3001               	movlw	1
  4449     037C  0140               	movlb	0	; select bank0
  4450     037D  02DC               	subwf	_eusart1TxBufferRemaining,f	;volatile
  4451     037E                     l516:	
  4452                           ;mcc_generated_files/uart/src/eusart1.c: 369:     }
  4453                           
  4454                           
  4455                           ;mcc_generated_files/uart/src/eusart1.c: 374:     PIE1bits.TX1IE = 1;
  4456     037E  014E               	movlb	14	; select bank14
  4457     037F  1597               	bsf	23,3	;volatile
  4458     0380                     l519:
  4459     0380  0008               	return
  4460     0381                     __end_of_EUSART1_Write:
  4461                           
  4462                           	psect	text22
  4463     04A8                     __ptext22:	
  4464 ;; *************** function _EUSART1_IsTxReady *****************
  4465 ;; Defined at:
  4466 ;;		line 272 in file "mcc_generated_files/uart/src/eusart1.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      _Bool 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4480 ;;      Params:         0       0       0       0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0
  4483 ;;      Totals:         0       0       0       0       0       0       0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 3
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_DVRT_UART_WriteByte
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494     04A8                     _EUSART1_IsTxReady:	
  4495                           ;psect for function _EUSART1_IsTxReady
  4496                           
  4497     04A8                     l1634:	
  4498                           ;incstack = 0
  4499                           ; Regs used in _EUSART1_IsTxReady: [wreg+status,2+status,0]
  4500                           
  4501                           
  4502                           ;mcc_generated_files/uart/src/eusart1.c: 274:     return (eusart1TxBufferRemaining ? 1 :
      +                           0);
  4503     04A8  0140               	movlb	0	; select bank0
  4504     04A9  085C               	movf	_eusart1TxBufferRemaining,w	;volatile
  4505     04AA  1D03               	btfss	3,2
  4506     04AB  2CAD               	goto	u561
  4507     04AC  2CAF               	goto	u560
  4508     04AD                     u561:
  4509     04AD  3001               	movlw	1
  4510     04AE  2CB0               	goto	u570
  4511     04AF                     u560:
  4512     04AF  3000               	movlw	0
  4513     04B0                     u570:
  4514     04B0                     l492:
  4515     04B0  0008               	return
  4516     04B1                     __end_of_EUSART1_IsTxReady:
  4517                           
  4518                           	psect	text23
  4519     0063                     __ptext23:	
  4520 ;; *************** function _DVRT_HandleCommand *****************
  4521 ;; Defined at:
  4522 ;;		line 180 in file "mcc_generated_files/DVRT/src/DVRunTime.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;		None
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  VARcount        1    8[COMMON] unsigned char 
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  1    wreg      void 
  4529 ;; Registers used:
  4530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4536 ;;      Params:         0       0       0       0       0       0       0       0
  4537 ;;      Locals:         1       0       0       0       0       0       0       0
  4538 ;;      Temps:          0       4       0       0       0       0       0       0
  4539 ;;      Totals:         1       4       0       0       0       0       0       0
  4540 ;;Total ram usage:        5 bytes
  4541 ;; Hardware stack levels used: 1
  4542 ;; Hardware stack levels required when called: 4
  4543 ;; This function calls:
  4544 ;;		___bmul
  4545 ;;		___wmul
  4546 ;; This function is called by:
  4547 ;;		_DVRT_Process
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551     0063                     _DVRT_HandleCommand:	
  4552                           ;psect for function _DVRT_HandleCommand
  4553                           
  4554     0063                     l2170:	
  4555                           ;incstack = 0
  4556                           ; Regs used in _DVRT_HandleCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4557                           
  4558                           
  4559                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 181:     uint8_t VARcount;;mcc_generated_file
      +                          s/DVRT/src/DVRunTime.c: 182:  if(rxBufPtr >= 3){
  4560     0063  3003               	movlw	3
  4561     0064  0140               	movlb	0	; select bank0
  4562     0065  0262               	subwf	_rxBufPtr,w	;volatile
  4563     0066  1C03               	skipc
  4564     0067  2869               	goto	u1201
  4565     0068  286A               	goto	u1200
  4566     0069                     u1201:
  4567     0069  292D               	goto	l2208
  4568     006A                     u1200:
  4569     006A                     l2172:
  4570                           
  4571                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 183:   if((DVRT_ReceivedCmd.DVCmdArray[0] == 
      +                          0x03) && (DVRT_ReceivedCmd.DVCmdArray[rxBufPtr-1] == 0xFC)){
  4572     006A  3003               	movlw	3
  4573     006B  0141               	movlb	1	; select bank1
  4574     006C  0640               	xorwf	_DVRT_ReceivedCmd^(0+128),w	;volatile
  4575     006D  1D03               	btfss	3,2
  4576     006E  2870               	goto	u1211
  4577     006F  2871               	goto	u1210
  4578     0070                     u1211:
  4579     0070  292D               	goto	l2208
  4580     0071                     u1210:
  4581     0071                     l2174:
  4582     0071  30BF               	movlw	low (_DVRT_ReceivedCmd+65535)
  4583     0072  0140               	movlb	0	; select bank0
  4584     0073  00E3               	movwf	??_DVRT_HandleCommand
  4585     0074  3000               	movlw	high (_DVRT_ReceivedCmd+65535)
  4586     0075  00E4               	movwf	??_DVRT_HandleCommand+1
  4587     0076  0862               	movf	_rxBufPtr,w	;volatile
  4588     0077  0763               	addwf	??_DVRT_HandleCommand,w
  4589     0078  0086               	movwf	6
  4590     0079  3000               	movlw	0
  4591     007A  3D64               	addwfc	??_DVRT_HandleCommand+1,w
  4592     007B  0087               	movwf	7
  4593     007C  30FC               	movlw	252
  4594     007D  0601               	xorwf	1,w
  4595     007E  1D03               	btfss	3,2
  4596     007F  2881               	goto	u1221
  4597     0080  2882               	goto	u1220
  4598     0081                     u1221:
  4599     0081  292D               	goto	l2208
  4600     0082                     u1220:
  4601     0082  2915               	goto	l2206
  4602     0083                     l2178:
  4603                           
  4604                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 186:     {;mcc_generated_files/DVRT/src/DVRun
      +                          Time.c: 187:      VARcount = 0;
  4605     0083  01F8               	clrf	DVRT_HandleCommand@VARcount
  4606                           
  4607                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 188:      while (VARcount < DVRT_ReceivedCmd.
      +                          stream.size) {
  4608     0084  28D2               	goto	l2184
  4609     0085                     l2180:
  4610                           
  4611                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 189:       DVPMT[VARcount].size = DVRT_Receiv
      +                          edCmd.stream.DVPMT[VARcount].size;
  4612     0085  3003               	movlw	3
  4613     0086  00F2               	movwf	___bmul@multiplicand
  4614     0087  0878               	movf	DVRT_HandleCommand@VARcount,w
  4615     0088  3184  2449  3180   	fcall	___bmul
  4616     008B  3E20               	addlw	(low (_DVPMT| 0))& (0+255)
  4617     008C  0086               	movwf	6
  4618     008D  0187               	clrf	7
  4619     008E  0878               	movf	DVRT_HandleCommand@VARcount,w
  4620     008F  0140               	movlb	0	; select bank0
  4621     0090  00E3               	movwf	??_DVRT_HandleCommand
  4622     0091  01E4               	clrf	??_DVRT_HandleCommand+1
  4623     0092  0863               	movf	??_DVRT_HandleCommand,w
  4624     0093  00F2               	movwf	___wmul@multiplier
  4625     0094  0864               	movf	??_DVRT_HandleCommand+1,w
  4626     0095  00F3               	movwf	___wmul@multiplier+1
  4627     0096  3003               	movlw	3
  4628     0097  00F4               	movwf	___wmul@multiplicand
  4629     0098  3000               	movlw	0
  4630     0099  00F5               	movwf	___wmul@multiplicand+1
  4631     009A  3183  2381  3180   	fcall	___wmul
  4632     009D  30C3               	movlw	low (_DVRT_ReceivedCmd+3)
  4633     009E  0140               	movlb	0	; select bank0
  4634     009F  00E5               	movwf	??_DVRT_HandleCommand+2
  4635     00A0  3000               	movlw	high (_DVRT_ReceivedCmd+3)
  4636     00A1  00E6               	movwf	??_DVRT_HandleCommand+3
  4637     00A2  0872               	movf	?___wmul,w
  4638     00A3  0765               	addwf	??_DVRT_HandleCommand+2,w
  4639     00A4  0084               	movwf	4
  4640     00A5  0873               	movf	?___wmul+1,w
  4641     00A6  3D66               	addwfc	??_DVRT_HandleCommand+3,w
  4642     00A7  0085               	movwf	5
  4643     00A8  0800               	movf	0,w
  4644     00A9  0081               	movwf	1
  4645                           
  4646                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 190:       DVPMT[VARcount].address = DVRT_Rec
      +                          eivedCmd.stream.DVPMT[VARcount].address;
  4647     00AA  0878               	movf	DVRT_HandleCommand@VARcount,w
  4648     00AB  00E3               	movwf	??_DVRT_HandleCommand
  4649     00AC  01E4               	clrf	??_DVRT_HandleCommand+1
  4650     00AD  0863               	movf	??_DVRT_HandleCommand,w
  4651     00AE  00F2               	movwf	___wmul@multiplier
  4652     00AF  0864               	movf	??_DVRT_HandleCommand+1,w
  4653     00B0  00F3               	movwf	___wmul@multiplier+1
  4654     00B1  3003               	movlw	3
  4655     00B2  00F4               	movwf	___wmul@multiplicand
  4656     00B3  3000               	movlw	0
  4657     00B4  00F5               	movwf	___wmul@multiplicand+1
  4658     00B5  3183  2381  3180   	fcall	___wmul
  4659     00B8  30C4               	movlw	low (_DVRT_ReceivedCmd+4)
  4660     00B9  0140               	movlb	0	; select bank0
  4661     00BA  00E5               	movwf	??_DVRT_HandleCommand+2
  4662     00BB  3000               	movlw	high (_DVRT_ReceivedCmd+4)
  4663     00BC  00E6               	movwf	??_DVRT_HandleCommand+3
  4664     00BD  0872               	movf	?___wmul,w
  4665     00BE  0765               	addwf	??_DVRT_HandleCommand+2,w
  4666     00BF  0086               	movwf	6
  4667     00C0  0873               	movf	?___wmul+1,w
  4668     00C1  3D66               	addwfc	??_DVRT_HandleCommand+3,w
  4669     00C2  0087               	movwf	7
  4670     00C3  3003               	movlw	3
  4671     00C4  00F2               	movwf	___bmul@multiplicand
  4672     00C5  0878               	movf	DVRT_HandleCommand@VARcount,w
  4673     00C6  3184  2449  3180   	fcall	___bmul
  4674     00C9  3E21               	addlw	(low ((_DVPMT| 0+1)))& (0+255)
  4675     00CA  0084               	movwf	4
  4676     00CB  0185               	clrf	5
  4677     00CC  3F40               	moviw [0]fsr1
  4678     00CD  3F80               	movwi [0]fsr0
  4679     00CE  3F41               	moviw [1]fsr1
  4680     00CF  3F81               	movwi [1]fsr0
  4681     00D0                     l2182:
  4682                           
  4683                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 191:       VARcount++;
  4684     00D0  3001               	movlw	1
  4685     00D1  07F8               	addwf	DVRT_HandleCommand@VARcount,f
  4686     00D2                     l2184:
  4687                           
  4688                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 188:      while (VARcount < DVRT_ReceivedCmd.
      +                          stream.size) {
  4689     00D2  0141               	movlb	1	; select bank1
  4690     00D3  0842               	movf	(_DVRT_ReceivedCmd^(0+128)+2),w	;volatile
  4691     00D4  0278               	subwf	DVRT_HandleCommand@VARcount,w
  4692     00D5  1C03               	skipc
  4693     00D6  28D8               	goto	u1231
  4694     00D7  28D9               	goto	u1230
  4695     00D8                     u1231:
  4696     00D8  2885               	goto	l2180
  4697     00D9                     u1230:
  4698     00D9  292D               	goto	l2208
  4699     00DA                     l2186:
  4700                           
  4701                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 196:     {;mcc_generated_files/DVRT/src/DVRun
      +                          Time.c: 197:      VARcount = 0;
  4702     00DA  01F8               	clrf	DVRT_HandleCommand@VARcount
  4703                           
  4704                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 198:      while (VARcount < DVRT_ReceivedCmd.
      +                          Var.variablePointerTableSize) {
  4705     00DB  28F1               	goto	l2192
  4706     00DC                     l2188:
  4707                           
  4708                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 199:       *(uint8_t *)(DVRT_ReceivedCmd.Var.
      +                          variableAddress + VARcount) = DVRT_ReceivedCmd.Var.variableValue[VARcount];
  4709     00DC  0878               	movf	DVRT_HandleCommand@VARcount,w
  4710     00DD  0743               	addwf	(_DVRT_ReceivedCmd^(0+128)+3),w	;volatile
  4711     00DE  0086               	movwf	6
  4712     00DF  3000               	movlw	0
  4713     00E0  3D44               	addwfc	((_DVRT_ReceivedCmd+1)^(0+128)+3),w	;volatile
  4714     00E1  0087               	movwf	7
  4715     00E2  30C5               	movlw	low (_DVRT_ReceivedCmd+5)
  4716     00E3  0140               	movlb	0	; select bank0
  4717     00E4  00E3               	movwf	??_DVRT_HandleCommand
  4718     00E5  3000               	movlw	high (_DVRT_ReceivedCmd+5)
  4719     00E6  00E4               	movwf	??_DVRT_HandleCommand+1
  4720     00E7  0878               	movf	DVRT_HandleCommand@VARcount,w
  4721     00E8  0763               	addwf	??_DVRT_HandleCommand,w
  4722     00E9  0084               	movwf	4
  4723     00EA  3000               	movlw	0
  4724     00EB  3D64               	addwfc	??_DVRT_HandleCommand+1,w
  4725     00EC  0085               	movwf	5
  4726     00ED  0800               	movf	0,w
  4727     00EE  0081               	movwf	1
  4728     00EF                     l2190:
  4729                           
  4730                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 200:       VARcount++;
  4731     00EF  3001               	movlw	1
  4732     00F0  07F8               	addwf	DVRT_HandleCommand@VARcount,f
  4733     00F1                     l2192:
  4734                           
  4735                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 198:      while (VARcount < DVRT_ReceivedCmd.
      +                          Var.variablePointerTableSize) {
  4736     00F1  0141               	movlb	1	; select bank1
  4737     00F2  0842               	movf	(_DVRT_ReceivedCmd^(0+128)+2),w	;volatile
  4738     00F3  0278               	subwf	DVRT_HandleCommand@VARcount,w
  4739     00F4  1C03               	skipc
  4740     00F5  28F7               	goto	u1241
  4741     00F6  28F8               	goto	u1240
  4742     00F7                     u1241:
  4743     00F7  28DC               	goto	l2188
  4744     00F8                     u1240:
  4745     00F8  292D               	goto	l2208
  4746     00F9                     l2194:
  4747                           
  4748                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 205:     {;mcc_generated_files/DVRT/src/DVRun
      +                          Time.c: 206:       DVStreamInterval = DVRT_ReceivedCmd.interval.period;
  4749     00F9  0843               	movf	((_DVRT_ReceivedCmd+1)^(0+128)+2),w	;volatile
  4750     00FA  0140               	movlb	0	; select bank0
  4751     00FB  00D7               	movwf	_DVStreamInterval+1
  4752     00FC  0141               	movlb	1	; select bank1
  4753     00FD  0842               	movf	(_DVRT_ReceivedCmd^(0+128)+2),w	;volatile
  4754     00FE  0140               	movlb	0	; select bank0
  4755     00FF  00D6               	movwf	_DVStreamInterval
  4756     0100                     l2196:
  4757                           
  4758                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 207:       DVStreamInterval_Counter = 0;
  4759     0100  01D4               	clrf	_DVStreamInterval_Counter
  4760     0101  01D5               	clrf	_DVStreamInterval_Counter+1
  4761                           
  4762                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 208:       break;
  4763     0102  292D               	goto	l2208
  4764     0103                     l92:	
  4765                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 209:     };mcc_generated_files/DVRT/src/DVRun
      +                          Time.c: 210:     case TURN_STREAMING_OFF:
  4766                           
  4767                           
  4768                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 211:     {;mcc_generated_files/DVRT/src/DVRun
      +                          Time.c: 212:       DVflag.streamOn = 0;
  4769     0103  0140               	movlb	0	; select bank0
  4770     0104  1060               	bcf	_DVflag,0
  4771                           
  4772                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 213:       break;
  4773     0105  292D               	goto	l2208
  4774     0106                     l93:	
  4775                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 214:     };mcc_generated_files/DVRT/src/DVRun
      +                          Time.c: 215:     case TURN_STREAMING_ON:
  4776                           
  4777                           
  4778                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 216:     {;mcc_generated_files/DVRT/src/DVRun
      +                          Time.c: 217:       DVflag.streamOn = 1;
  4779     0106  0140               	movlb	0	; select bank0
  4780     0107  1460               	bsf	_DVflag,0
  4781     0108                     l2198:
  4782                           
  4783                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 218:       DVStreamInterval_Counter = DVStrea
      +                          mInterval;
  4784     0108  0857               	movf	_DVStreamInterval+1,w
  4785     0109  00D5               	movwf	_DVStreamInterval_Counter+1
  4786     010A  0856               	movf	_DVStreamInterval,w
  4787     010B  00D4               	movwf	_DVStreamInterval_Counter
  4788                           
  4789                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 219:       break;
  4790     010C  292D               	goto	l2208
  4791     010D                     l94:	
  4792                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 220:     };mcc_generated_files/DVRT/src/DVRun
      +                          Time.c: 221:     case ONE_SHOT_READ:
  4793                           
  4794                           
  4795                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 222:     {;mcc_generated_files/DVRT/src/DVRun
      +                          Time.c: 223:       DVflag.osr = 1;
  4796     010D  0140               	movlb	0	; select bank0
  4797     010E  14E0               	bsf	_DVflag,1
  4798                           
  4799                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 224:       DVflag.streamOn = 1;
  4800     010F  1460               	bsf	_DVflag,0
  4801     0110  2908               	goto	l2198
  4802     0111                     l95:	
  4803                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 227:     };mcc_generated_files/DVRT/src/DVRun
      +                          Time.c: 228:     case PING:
  4804                           
  4805                           
  4806                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 229:     {;mcc_generated_files/DVRT/src/DVRun
      +                          Time.c: 230:       DVflag.ping = 1;
  4807     0111  0140               	movlb	0	; select bank0
  4808     0112  1560               	bsf	_DVflag,2
  4809                           
  4810                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 231:       DVflag.streamOn = 1;
  4811     0113  1460               	bsf	_DVflag,0
  4812     0114  2908               	goto	l2198
  4813     0115                     l2206:
  4814     0115  0141               	movlb	1	; select bank1
  4815     0116  0841               	movf	(_DVRT_ReceivedCmd^(0+128)+1),w	;volatile
  4816                           
  4817                           ; Switch size 1, requested type "simple"
  4818                           ; Number of cases is 7, Range of values is 0 to 6
  4819                           ; switch strategies available:
  4820                           ; Name         Instructions Cycles
  4821                           ; direct_byte           20     6 (fixed)
  4822                           ; simple_byte           22    12 (average)
  4823                           ; jumptable            260     6 (fixed)
  4824                           ;	Chosen strategy is simple_byte
  4825     0117  3A00               	xorlw	0	; case 0
  4826     0118  1903               	skipnz
  4827     0119  2883               	goto	l2178
  4828     011A  3A01               	xorlw	1	; case 1
  4829     011B  1903               	skipnz
  4830     011C  28DA               	goto	l2186
  4831     011D  3A03               	xorlw	3	; case 2
  4832     011E  1903               	skipnz
  4833     011F  28F9               	goto	l2194
  4834     0120  3A01               	xorlw	1	; case 3
  4835     0121  1903               	skipnz
  4836     0122  2903               	goto	l92
  4837     0123  3A07               	xorlw	7	; case 4
  4838     0124  1903               	skipnz
  4839     0125  2906               	goto	l93
  4840     0126  3A01               	xorlw	1	; case 5
  4841     0127  1903               	skipnz
  4842     0128  290D               	goto	l94
  4843     0129  3A03               	xorlw	3	; case 6
  4844     012A  1903               	skipnz
  4845     012B  2911               	goto	l95
  4846     012C  292D               	goto	l2208
  4847     012D                     l2208:
  4848                           
  4849                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 238:  rxBufPtr = 0;
  4850     012D  0140               	movlb	0	; select bank0
  4851     012E  01E2               	clrf	_rxBufPtr	;volatile
  4852     012F                     l96:
  4853     012F  0008               	return
  4854     0130                     __end_of_DVRT_HandleCommand:
  4855                           
  4856                           	psect	text24
  4857     0381                     __ptext24:	
  4858 ;; *************** function ___wmul *****************
  4859 ;; Defined at:
  4860 ;;		line 15 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul16.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  multiplier      2    2[COMMON] unsigned int 
  4863 ;;  multiplicand    2    4[COMMON] unsigned int 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  product         2    6[COMMON] unsigned int 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  2    2[COMMON] unsigned int 
  4868 ;; Registers used:
  4869 ;;		wreg, status,2, status,0
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4875 ;;      Params:         4       0       0       0       0       0       0       0
  4876 ;;      Locals:         2       0       0       0       0       0       0       0
  4877 ;;      Temps:          0       0       0       0       0       0       0       0
  4878 ;;      Totals:         6       0       0       0       0       0       0       0
  4879 ;;Total ram usage:        6 bytes
  4880 ;; Hardware stack levels used: 1
  4881 ;; Hardware stack levels required when called: 3
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_DVRT_HandleCommand
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889     0381                     ___wmul:	
  4890                           ;psect for function ___wmul
  4891                           
  4892     0381                     l2094:	
  4893                           ;incstack = 0
  4894                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4895                           
  4896     0381  01F6               	clrf	___wmul@product
  4897     0382  01F7               	clrf	___wmul@product+1
  4898     0383                     l2096:
  4899     0383  1C72               	btfss	___wmul@multiplier,0
  4900     0384  2B86               	goto	u1101
  4901     0385  2B87               	goto	u1100
  4902     0386                     u1101:
  4903     0386  2B8B               	goto	l664
  4904     0387                     u1100:
  4905     0387                     l2098:
  4906     0387  0874               	movf	___wmul@multiplicand,w
  4907     0388  07F6               	addwf	___wmul@product,f
  4908     0389  0875               	movf	___wmul@multiplicand+1,w
  4909     038A  3DF7               	addwfc	___wmul@product+1,f
  4910     038B                     l664:
  4911     038B  3001               	movlw	1
  4912     038C                     u1115:
  4913     038C  35F4               	lslf	___wmul@multiplicand,f
  4914     038D  0DF5               	rlf	___wmul@multiplicand+1,f
  4915     038E  0B89               	decfsz	9,f
  4916     038F  2B8C               	goto	u1115
  4917     0390                     l2100:
  4918     0390  3001               	movlw	1
  4919     0391                     u1125:
  4920     0391  36F3               	lsrf	___wmul@multiplier+1,f
  4921     0392  0CF2               	rrf	___wmul@multiplier,f
  4922     0393  0B89               	decfsz	9,f
  4923     0394  2B91               	goto	u1125
  4924     0395                     l2102:
  4925     0395  0872               	movf	___wmul@multiplier,w
  4926     0396  0473               	iorwf	___wmul@multiplier+1,w
  4927     0397  1D03               	btfss	3,2
  4928     0398  2B9A               	goto	u1131
  4929     0399  2B9B               	goto	u1130
  4930     039A                     u1131:
  4931     039A  2B83               	goto	l2096
  4932     039B                     u1130:
  4933     039B                     l2104:
  4934     039B  0877               	movf	___wmul@product+1,w
  4935     039C  00F3               	movwf	?___wmul+1
  4936     039D  0876               	movf	___wmul@product,w
  4937     039E  00F2               	movwf	?___wmul
  4938     039F                     l666:
  4939     039F  0008               	return
  4940     03A0                     __end_of___wmul:
  4941                           
  4942                           	psect	text25
  4943     0449                     __ptext25:	
  4944 ;; *************** function ___bmul *****************
  4945 ;; Defined at:
  4946 ;;		line 4 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul8.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  multiplier      1    wreg     unsigned char 
  4949 ;;  multiplicand    1    2[COMMON] unsigned char 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  multiplier      1    4[COMMON] unsigned char 
  4952 ;;  product         1    3[COMMON] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      unsigned char 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4962 ;;      Params:         1       0       0       0       0       0       0       0
  4963 ;;      Locals:         2       0       0       0       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0
  4965 ;;      Totals:         3       0       0       0       0       0       0       0
  4966 ;;Total ram usage:        3 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 3
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_DVRT_WritePacket
  4973 ;;		_DVRT_Initialize
  4974 ;;		_DVRT_HandleCommand
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978     0449                     ___bmul:	
  4979                           ;psect for function ___bmul
  4980                           
  4981                           
  4982                           ;incstack = 0
  4983                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4984                           ;___bmul@multiplier stored from wreg
  4985     0449  00F4               	movwf	___bmul@multiplier
  4986     044A                     l2108:
  4987     044A  01F3               	clrf	___bmul@product
  4988     044B                     l2110:
  4989     044B  1C74               	btfss	___bmul@multiplier,0
  4990     044C  2C4E               	goto	u1141
  4991     044D  2C4F               	goto	u1140
  4992     044E                     u1141:
  4993     044E  2C51               	goto	l2114
  4994     044F                     u1140:
  4995     044F                     l2112:
  4996     044F  0872               	movf	___bmul@multiplicand,w
  4997     0450  07F3               	addwf	___bmul@product,f
  4998     0451                     l2114:
  4999     0451  1003               	clrc
  5000     0452  0DF2               	rlf	___bmul@multiplicand,f
  5001     0453                     l2116:
  5002     0453  1003               	clrc
  5003     0454  0CF4               	rrf	___bmul@multiplier,f
  5004     0455  0874               	movf	___bmul@multiplier,w
  5005     0456  1D03               	btfss	3,2
  5006     0457  2C59               	goto	u1151
  5007     0458  2C5A               	goto	u1150
  5008     0459                     u1151:
  5009     0459  2C4B               	goto	l2110
  5010     045A                     u1150:
  5011     045A                     l2118:
  5012     045A  0873               	movf	___bmul@product,w
  5013     045B                     l690:
  5014     045B  0008               	return
  5015     045C                     __end_of___bmul:
  5016                           
  5017                           	psect	intentry
  5018     0004                     __pintentry:	
  5019 ;; *************** function _INTERRUPT_InterruptManager *****************
  5020 ;; Defined at:
  5021 ;;		line 59 in file "mcc_generated_files/system/src/interrupt.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;		None
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;		None
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      void 
  5028 ;; Registers used:
  5029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5035 ;;      Params:         0       0       0       0       0       0       0       0
  5036 ;;      Locals:         0       0       0       0       0       0       0       0
  5037 ;;      Temps:          0       0       0       0       0       0       0       0
  5038 ;;      Totals:         0       0       0       0       0       0       0       0
  5039 ;;Total ram usage:        0 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; Hardware stack levels required when called: 2
  5042 ;; This function calls:
  5043 ;;		NULL
  5044 ;;		_EUSART1_ReceiveISR
  5045 ;;		_EUSART1_TransmitISR
  5046 ;;		_TMR2_ISR
  5047 ;; This function is called by:
  5048 ;;		Interrupt level 1
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052     0004                     _INTERRUPT_InterruptManager:
  5053                           
  5054                           ;incstack = 0
  5055     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5056                           
  5057                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5058     0005  3180               	pagesel	$
  5059     0006                     i1l2032:
  5060                           
  5061                           ;mcc_generated_files/system/src/interrupt.c: 62:     if(INTCONbits.PEIE == 1)
  5062     0006  1F0B               	btfss	11,6	;volatile
  5063     0007  2809               	goto	u96_21
  5064     0008  280A               	goto	u96_20
  5065     0009                     u96_21:
  5066     0009  2835               	goto	i1l218
  5067     000A                     u96_20:
  5068     000A                     i1l2034:
  5069                           
  5070                           ;mcc_generated_files/system/src/interrupt.c: 63:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 64:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
  5071     000A  014E               	movlb	14	; select bank14
  5072     000B  1D97               	btfss	23,3	;volatile
  5073     000C  280E               	goto	u97_21
  5074     000D  280F               	goto	u97_20
  5075     000E                     u97_21:
  5076     000E  281A               	goto	i1l211
  5077     000F                     u97_20:
  5078     000F                     i1l2036:
  5079     000F  1D8D               	btfss	13,3	;volatile
  5080     0010  2812               	goto	u98_21
  5081     0011  2813               	goto	u98_20
  5082     0012                     u98_21:
  5083     0012  281A               	goto	i1l211
  5084     0013                     u98_20:
  5085     0013                     i1l2038:
  5086                           
  5087                           ;mcc_generated_files/system/src/interrupt.c: 65:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 66:             EUSART1_TxInterruptHandler();
  5088     0013  0140               	movlb	0	; select bank0
  5089     0014  084F               	movf	_EUSART1_TxInterruptHandler+1,w
  5090     0015  008A               	movwf	10
  5091     0016  084E               	movf	_EUSART1_TxInterruptHandler,w
  5092     0017  000A               	callw
  5093     0018  3180               	pagesel	$
  5094                           
  5095                           ;mcc_generated_files/system/src/interrupt.c: 67:         }
  5096     0019  2835               	goto	i1l218
  5097     001A                     i1l211:	
  5098                           ;mcc_generated_files/system/src/interrupt.c: 68:         else if(PIE1bits.RC1IE == 1 && 
      +                          PIR1bits.RC1IF == 1)
  5099                           
  5100     001A  1E17               	btfss	23,4	;volatile
  5101     001B  281D               	goto	u99_21
  5102     001C  281E               	goto	u99_20
  5103     001D                     u99_21:
  5104     001D  2829               	goto	i1l213
  5105     001E                     u99_20:
  5106     001E                     i1l2040:
  5107     001E  1E0D               	btfss	13,4	;volatile
  5108     001F  2821               	goto	u100_21
  5109     0020  2822               	goto	u100_20
  5110     0021                     u100_21:
  5111     0021  2829               	goto	i1l213
  5112     0022                     u100_20:
  5113     0022                     i1l2042:
  5114                           
  5115                           ;mcc_generated_files/system/src/interrupt.c: 69:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 70:             EUSART1_RxInterruptHandler();
  5116     0022  0140               	movlb	0	; select bank0
  5117     0023  084D               	movf	_EUSART1_RxInterruptHandler+1,w
  5118     0024  008A               	movwf	10
  5119     0025  084C               	movf	_EUSART1_RxInterruptHandler,w
  5120     0026  000A               	callw
  5121     0027  3180               	pagesel	$
  5122                           
  5123                           ;mcc_generated_files/system/src/interrupt.c: 71:         }
  5124     0028  2835               	goto	i1l218
  5125     0029                     i1l213:	
  5126                           ;mcc_generated_files/system/src/interrupt.c: 72:         else if(PIE1bits.TMR2IE == 1 &&
      +                           PIR1bits.TMR2IF == 1)
  5127                           
  5128     0029  1F17               	btfss	23,6	;volatile
  5129     002A  282C               	goto	u101_21
  5130     002B  282D               	goto	u101_20
  5131     002C                     u101_21:
  5132     002C  2835               	goto	i1l212
  5133     002D                     u101_20:
  5134     002D                     i1l2044:
  5135     002D  1F0D               	btfss	13,6	;volatile
  5136     002E  2830               	goto	u102_21
  5137     002F  2831               	goto	u102_20
  5138     0030                     u102_21:
  5139     0030  2835               	goto	i1l212
  5140     0031                     u102_20:
  5141     0031                     i1l2046:
  5142                           
  5143                           ;mcc_generated_files/system/src/interrupt.c: 73:         {;mcc_generated_files/system/sr
      +                          c/interrupt.c: 74:             TMR2_ISR();
  5144     0031  3184  245C  3180   	fcall	_TMR2_ISR
  5145                           
  5146                           ;mcc_generated_files/system/src/interrupt.c: 75:         }
  5147     0034  2835               	goto	i1l218
  5148     0035                     i1l212:
  5149     0035                     i1l218:	
  5150                           ;mcc_generated_files/system/src/interrupt.c: 80:     }
  5151                           
  5152     0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5153     0036  0009               	retfie
  5154     0037                     __end_of_INTERRUPT_InterruptManager:
  5155                           
  5156                           	psect	text27
  5157     045C                     __ptext27:	
  5158 ;; *************** function _TMR2_ISR *****************
  5159 ;; Defined at:
  5160 ;;		line 145 in file "mcc_generated_files/timer/src/tmr2.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      void 
  5167 ;; Registers used:
  5168 ;;		wreg, status,2, status,0, pclath, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5174 ;;      Params:         0       0       0       0       0       0       0       0
  5175 ;;      Locals:         0       0       0       0       0       0       0       0
  5176 ;;      Temps:          0       0       0       0       0       0       0       0
  5177 ;;      Totals:         0       0       0       0       0       0       0       0
  5178 ;;Total ram usage:        0 bytes
  5179 ;; Hardware stack levels used: 1
  5180 ;; Hardware stack levels required when called: 1
  5181 ;; This function calls:
  5182 ;;		NULL
  5183 ;;		_TMR2_DefaultPeriodMatchCallback
  5184 ;; This function is called by:
  5185 ;;		_INTERRUPT_InterruptManager
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189     045C                     _TMR2_ISR:	
  5190                           ;psect for function _TMR2_ISR
  5191                           
  5192     045C                     i1l1948:	
  5193                           ;incstack = 0
  5194                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  5195                           
  5196                           
  5197                           ;mcc_generated_files/timer/src/tmr2.c: 148:     if(((void*)0) != TMR2_PeriodMatchCallbac
      +                          k)
  5198     045C  0140               	movlb	0	; select bank0
  5199     045D  086D               	movf	_TMR2_PeriodMatchCallback,w
  5200     045E  046E               	iorwf	_TMR2_PeriodMatchCallback+1,w
  5201     045F  1903               	btfsc	3,2
  5202     0460  2C62               	goto	u89_21
  5203     0461  2C63               	goto	u89_20
  5204     0462                     u89_21:
  5205     0462  2C68               	goto	i1l1952
  5206     0463                     u89_20:
  5207     0463                     i1l1950:
  5208                           
  5209                           ;mcc_generated_files/timer/src/tmr2.c: 149:     {;mcc_generated_files/timer/src/tmr2.c: 
      +                          150:         TMR2_PeriodMatchCallback();
  5210     0463  086E               	movf	_TMR2_PeriodMatchCallback+1,w
  5211     0464  008A               	movwf	10
  5212     0465  086D               	movf	_TMR2_PeriodMatchCallback,w
  5213     0466  000A               	callw
  5214     0467  3184               	pagesel	$
  5215     0468                     i1l1952:
  5216                           
  5217                           ;mcc_generated_files/timer/src/tmr2.c: 154:     xwaitPeriod++;
  5218     0468  3001               	movlw	1
  5219     0469  0140               	movlb	0	; select bank0
  5220     046A  07DF               	addwf	_xwaitPeriod,f
  5221     046B                     i1l1954:
  5222                           
  5223                           ;mcc_generated_files/timer/src/tmr2.c: 155:    PIR1bits.TMR2IF = 0;
  5224     046B  014E               	movlb	14	; select bank14
  5225     046C  130D               	bcf	13,6	;volatile
  5226     046D                     i1l328:
  5227     046D  0008               	return
  5228     046E                     __end_of_TMR2_ISR:
  5229                           
  5230                           	psect	text28
  5231     04E1                     __ptext28:	
  5232 ;; *************** function _TMR2_DefaultPeriodMatchCallback *****************
  5233 ;; Defined at:
  5234 ;;		line 163 in file "mcc_generated_files/timer/src/tmr2.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;		None
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		None
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5248 ;;      Params:         0       0       0       0       0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0
  5251 ;;      Totals:         0       0       0       0       0       0       0       0
  5252 ;;Total ram usage:        0 bytes
  5253 ;; Hardware stack levels used: 1
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_TMR2_Initialize
  5258 ;;		_TMR2_ISR
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262     04E1                     _TMR2_DefaultPeriodMatchCallback:	
  5263                           ;psect for function _TMR2_DefaultPeriodMatchCallback
  5264                           
  5265     04E1                     i1l334:	
  5266                           ;incstack = 0
  5267                           ; Regs used in _TMR2_DefaultPeriodMatchCallback: []
  5268                           
  5269     04E1  0008               	return
  5270     04E2                     __end_of_TMR2_DefaultPeriodMatchCallback:
  5271                           
  5272                           	psect	text29
  5273     03BB                     __ptext29:	
  5274 ;; *************** function _EUSART1_TransmitISR *****************
  5275 ;; Defined at:
  5276 ;;		line 377 in file "mcc_generated_files/uart/src/eusart1.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  tempTxTail      1    0[COMMON] unsigned char 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      void 
  5283 ;; Registers used:
  5284 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5290 ;;      Params:         0       0       0       0       0       0       0       0
  5291 ;;      Locals:         1       0       0       0       0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0
  5293 ;;      Totals:         1       0       0       0       0       0       0       0
  5294 ;;Total ram usage:        1 bytes
  5295 ;; Hardware stack levels used: 1
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_EUSART1_Initialize
  5300 ;;		_INTERRUPT_InterruptManager
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304     03BB                     _EUSART1_TransmitISR:	
  5305                           ;psect for function _EUSART1_TransmitISR
  5306                           
  5307     03BB                     i1l2002:	
  5308                           ;incstack = 0
  5309                           ; Regs used in _EUSART1_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5310                           
  5311                           
  5312                           ;mcc_generated_files/uart/src/eusart1.c: 379:     uint8_t tempTxTail;;mcc_generated_file
      +                          s/uart/src/eusart1.c: 381:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  5313     03BB  3008               	movlw	8
  5314     03BC  0140               	movlb	0	; select bank0
  5315     03BD  025C               	subwf	_eusart1TxBufferRemaining,w	;volatile
  5316     03BE  1803               	skipnc
  5317     03BF  2BC1               	goto	u95_21
  5318     03C0  2BC2               	goto	u95_20
  5319     03C1                     u95_21:
  5320     03C1  2BD3               	goto	i1l522
  5321     03C2                     u95_20:
  5322     03C2                     i1l2004:
  5323                           
  5324                           ;mcc_generated_files/uart/src/eusart1.c: 382:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 383:        TX1REG = eusart1TxBuffer[eusart1TxTail];
  5325     03C2  085D               	movf	_eusart1TxTail,w
  5326     03C3  3E38               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
  5327     03C4  0086               	movwf	6
  5328     03C5  0187               	clrf	7
  5329     03C6  0801               	movf	1,w
  5330     03C7  0142               	movlb	2	; select bank2
  5331     03C8  009A               	movwf	26	;volatile
  5332     03C9                     i1l2006:
  5333                           
  5334                           ;mcc_generated_files/uart/src/eusart1.c: 384:        tempTxTail = (eusart1TxTail + 1U) &
      +                           ((8U) - 1U);
  5335     03C9  0140               	movlb	0	; select bank0
  5336     03CA  085D               	movf	_eusart1TxTail,w	;volatile
  5337     03CB  3E01               	addlw	1
  5338     03CC  3907               	andlw	7
  5339     03CD  00F0               	movwf	EUSART1_TransmitISR@tempTxTail
  5340     03CE                     i1l2008:
  5341                           
  5342                           ;mcc_generated_files/uart/src/eusart1.c: 386:        eusart1TxTail = tempTxTail;
  5343     03CE  0870               	movf	EUSART1_TransmitISR@tempTxTail,w
  5344     03CF  00DD               	movwf	_eusart1TxTail	;volatile
  5345     03D0                     i1l2010:
  5346                           
  5347                           ;mcc_generated_files/uart/src/eusart1.c: 387:        eusart1TxBufferRemaining++;
  5348     03D0  3001               	movlw	1
  5349     03D1  07DC               	addwf	_eusart1TxBufferRemaining,f	;volatile
  5350                           
  5351                           ;mcc_generated_files/uart/src/eusart1.c: 388:     }
  5352     03D2  2BD5               	goto	i1l525
  5353     03D3                     i1l522:	
  5354                           ;mcc_generated_files/uart/src/eusart1.c: 389:     else
  5355                           
  5356                           
  5357                           ;mcc_generated_files/uart/src/eusart1.c: 390:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 391:         PIE1bits.TX1IE = 0;
  5358     03D3  014E               	movlb	14	; select bank14
  5359     03D4  1197               	bcf	23,3	;volatile
  5360     03D5                     i1l525:
  5361     03D5  0008               	return
  5362     03D6                     __end_of_EUSART1_TransmitISR:
  5363                           
  5364                           	psect	text30
  5365     01F6                     __ptext30:	
  5366 ;; *************** function _EUSART1_ReceiveISR *****************
  5367 ;; Defined at:
  5368 ;;		line 308 in file "mcc_generated_files/uart/src/eusart1.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  tempRxHead      1    1[COMMON] unsigned char 
  5373 ;;  regValue        1    0[COMMON] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5383 ;;      Params:         0       0       0       0       0       0       0       0
  5384 ;;      Locals:         2       0       0       0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0
  5386 ;;      Totals:         2       0       0       0       0       0       0       0
  5387 ;;Total ram usage:        2 bytes
  5388 ;; Hardware stack levels used: 1
  5389 ;; Hardware stack levels required when called: 1
  5390 ;; This function calls:
  5391 ;;		NULL
  5392 ;;		_DVRT_Error_Callback
  5393 ;;		_EUSART1_DefaultFramingErrorCallback
  5394 ;;		_EUSART1_DefaultOverrunErrorCallback
  5395 ;; This function is called by:
  5396 ;;		_EUSART1_Initialize
  5397 ;;		_INTERRUPT_InterruptManager
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401     01F6                     _EUSART1_ReceiveISR:	
  5402                           ;psect for function _EUSART1_ReceiveISR
  5403                           
  5404     01F6                     i1l1968:	
  5405                           ;incstack = 0
  5406                           ; Regs used in _EUSART1_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5407                           
  5408                           
  5409                           ;mcc_generated_files/uart/src/eusart1.c: 310:     uint8_t regValue;;mcc_generated_files/
      +                          uart/src/eusart1.c: 311:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart1.c: 31
      +                          4:     eusart1RxStatusBuffer[eusart1RxHead].status = 0;
  5410     01F6  357A               	lslf	_eusart1RxHead,w	;volatile
  5411     01F7  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
  5412     01F8  0086               	movwf	6
  5413     01F9  3001               	movlw	1	; select bank2/3
  5414     01FA  0087               	movwf	7
  5415     01FB  3000               	movlw	0
  5416     01FC  3FC0               	movwi [0]fsr1
  5417     01FD  3FC1               	movwi [1]fsr1
  5418     01FE                     i1l1970:
  5419                           
  5420                           ;mcc_generated_files/uart/src/eusart1.c: 316:     if(1 == RC1STAbits.OERR)
  5421     01FE  0142               	movlb	2	; select bank2
  5422     01FF  1C9D               	btfss	29,1	;volatile
  5423     0200  2A02               	goto	u90_21
  5424     0201  2A03               	goto	u90_20
  5425     0202                     u90_21:
  5426     0202  2A15               	goto	i1l1978
  5427     0203                     u90_20:
  5428     0203                     i1l1972:
  5429                           
  5430                           ;mcc_generated_files/uart/src/eusart1.c: 317:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 318:         eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
  5431     0203  357A               	lslf	_eusart1RxHead,w	;volatile
  5432     0204  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
  5433     0205  0086               	movwf	6
  5434     0206  3001               	movlw	1	; select bank2/3
  5435     0207  0087               	movwf	7
  5436     0208  1501               	bsf	1,2
  5437     0209                     i1l1974:
  5438                           
  5439                           ;mcc_generated_files/uart/src/eusart1.c: 319:         if(((void*)0) != EUSART1_OverrunEr
      +                          rorHandler)
  5440     0209  0140               	movlb	0	; select bank0
  5441     020A  0840               	movf	_EUSART1_OverrunErrorHandler,w
  5442     020B  0441               	iorwf	_EUSART1_OverrunErrorHandler+1,w
  5443     020C  1903               	btfsc	3,2
  5444     020D  2A0F               	goto	u91_21
  5445     020E  2A10               	goto	u91_20
  5446     020F                     u91_21:
  5447     020F  2A15               	goto	i1l1978
  5448     0210                     u91_20:
  5449     0210                     i1l1976:
  5450                           
  5451                           ;mcc_generated_files/uart/src/eusart1.c: 320:         {;mcc_generated_files/uart/src/eus
      +                          art1.c: 321:             EUSART1_OverrunErrorHandler();
  5452     0210  0841               	movf	_EUSART1_OverrunErrorHandler+1,w
  5453     0211  008A               	movwf	10
  5454     0212  0840               	movf	_EUSART1_OverrunErrorHandler,w
  5455     0213  000A               	callw
  5456     0214  3181               	pagesel	$
  5457     0215                     i1l1978:
  5458                           
  5459                           ;mcc_generated_files/uart/src/eusart1.c: 324:     if(1 == RC1STAbits.FERR)
  5460     0215  0142               	movlb	2	; select bank2
  5461     0216  1D1D               	btfss	29,2	;volatile
  5462     0217  2A19               	goto	u92_21
  5463     0218  2A1A               	goto	u92_20
  5464     0219                     u92_21:
  5465     0219  2A2C               	goto	i1l1986
  5466     021A                     u92_20:
  5467     021A                     i1l1980:
  5468                           
  5469                           ;mcc_generated_files/uart/src/eusart1.c: 325:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 326:         eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
  5470     021A  357A               	lslf	_eusart1RxHead,w	;volatile
  5471     021B  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
  5472     021C  0086               	movwf	6
  5473     021D  3001               	movlw	1	; select bank2/3
  5474     021E  0087               	movwf	7
  5475     021F  1481               	bsf	1,1
  5476     0220                     i1l1982:
  5477                           
  5478                           ;mcc_generated_files/uart/src/eusart1.c: 327:         if(((void*)0) != EUSART1_FramingEr
      +                          rorHandler)
  5479     0220  0140               	movlb	0	; select bank0
  5480     0221  0842               	movf	_EUSART1_FramingErrorHandler,w
  5481     0222  0443               	iorwf	_EUSART1_FramingErrorHandler+1,w
  5482     0223  1903               	btfsc	3,2
  5483     0224  2A26               	goto	u93_21
  5484     0225  2A27               	goto	u93_20
  5485     0226                     u93_21:
  5486     0226  2A2C               	goto	i1l1986
  5487     0227                     u93_20:
  5488     0227                     i1l1984:
  5489                           
  5490                           ;mcc_generated_files/uart/src/eusart1.c: 328:         {;mcc_generated_files/uart/src/eus
      +                          art1.c: 329:             EUSART1_FramingErrorHandler();
  5491     0227  0843               	movf	_EUSART1_FramingErrorHandler+1,w
  5492     0228  008A               	movwf	10
  5493     0229  0842               	movf	_EUSART1_FramingErrorHandler,w
  5494     022A  000A               	callw
  5495     022B  3181               	pagesel	$
  5496     022C                     i1l1986:
  5497                           
  5498                           ;mcc_generated_files/uart/src/eusart1.c: 333:     regValue = RC1REG;
  5499     022C  0142               	movlb	2	; select bank2
  5500     022D  0819               	movf	25,w	;volatile
  5501     022E  00F0               	movwf	EUSART1_ReceiveISR@regValue
  5502     022F                     i1l1988:
  5503                           
  5504                           ;mcc_generated_files/uart/src/eusart1.c: 335:     tempRxHead = (eusart1RxHead + 1U) & ((
      +                          32U) - 1U);
  5505     022F  087A               	movf	_eusart1RxHead,w	;volatile
  5506     0230  3E01               	addlw	1
  5507     0231  391F               	andlw	31
  5508     0232  00F1               	movwf	EUSART1_ReceiveISR@tempRxHead
  5509     0233                     i1l1990:
  5510                           
  5511                           ;mcc_generated_files/uart/src/eusart1.c: 336:     if (tempRxHead == eusart1RxTail)
  5512     0233  0871               	movf	EUSART1_ReceiveISR@tempRxHead,w
  5513     0234  0679               	xorwf	_eusart1RxTail,w	;volatile
  5514     0235  1D03               	skipz
  5515     0236  2A38               	goto	u94_21
  5516     0237  2A39               	goto	u94_20
  5517     0238                     u94_21:
  5518     0238  2A3A               	goto	i1l1994
  5519     0239                     u94_20:
  5520     0239  2A45               	goto	i1l512
  5521     023A                     i1l1994:
  5522                           
  5523                           ;mcc_generated_files/uart/src/eusart1.c: 341:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 342:         eusart1RxBuffer[eusart1RxHead] = regValue;
  5524     023A  087A               	movf	_eusart1RxHead,w
  5525     023B  3EA0               	addlw	(low (_eusart1RxBuffer| 0))& (0+255)
  5526     023C  0086               	movwf	6
  5527     023D  0187               	clrf	7
  5528     023E  0870               	movf	EUSART1_ReceiveISR@regValue,w
  5529     023F  0081               	movwf	1
  5530     0240                     i1l1996:
  5531                           
  5532                           ;mcc_generated_files/uart/src/eusart1.c: 343:   eusart1RxHead = tempRxHead;
  5533     0240  0871               	movf	EUSART1_ReceiveISR@tempRxHead,w
  5534     0241  00FA               	movwf	_eusart1RxHead	;volatile
  5535     0242                     i1l1998:
  5536                           
  5537                           ;mcc_generated_files/uart/src/eusart1.c: 344:   eusart1RxCount++;
  5538     0242  3001               	movlw	1
  5539     0243  0140               	movlb	0	; select bank0
  5540     0244  07DB               	addwf	_eusart1RxCount,f	;volatile
  5541     0245                     i1l512:
  5542     0245  0008               	return
  5543     0246                     __end_of_EUSART1_ReceiveISR:
  5544                           
  5545                           	psect	text31
  5546     04E2                     __ptext31:	
  5547 ;; *************** function _EUSART1_DefaultFramingErrorCallback *****************
  5548 ;; Defined at:
  5549 ;;		line 400 in file "mcc_generated_files/uart/src/eusart1.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;		None
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		None
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5563 ;;      Params:         0       0       0       0       0       0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0
  5566 ;;      Totals:         0       0       0       0       0       0       0       0
  5567 ;;Total ram usage:        0 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		_EUSART1_Initialize
  5573 ;;		_EUSART1_ReceiveISR
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577     04E2                     _EUSART1_DefaultFramingErrorCallback:	
  5578                           ;psect for function _EUSART1_DefaultFramingErrorCallback
  5579                           
  5580     04E2                     i1l528:	
  5581                           ;incstack = 0
  5582                           ; Regs used in _EUSART1_DefaultFramingErrorCallback: []
  5583                           
  5584     04E2  0008               	return
  5585     04E3                     __end_of_EUSART1_DefaultFramingErrorCallback:
  5586                           
  5587                           	psect	text32
  5588     04C4                     __ptext32:	
  5589 ;; *************** function _DVRT_Error_Callback *****************
  5590 ;; Defined at:
  5591 ;;		line 141 in file "mcc_generated_files/DVRT/src/DVRunTime.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		wreg
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5605 ;;      Params:         0       0       0       0       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0
  5608 ;;      Totals:         0       0       0       0       0       0       0       0
  5609 ;;Total ram usage:        0 bytes
  5610 ;; Hardware stack levels used: 1
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_DVRT_Initialize
  5615 ;;		_EUSART1_ReceiveISR
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619     04C4                     _DVRT_Error_Callback:	
  5620                           ;psect for function _DVRT_Error_Callback
  5621                           
  5622     04C4                     i1l1746:	
  5623                           ;incstack = 0
  5624                           ; Regs used in _DVRT_Error_Callback: [wreg]
  5625                           
  5626                           
  5627                           ;mcc_generated_files/DVRT/src/DVRunTime.c: 143:  error = 1;
  5628     04C4  3001               	movlw	1
  5629     04C5  0140               	movlb	0	; select bank0
  5630     04C6  00D8               	movwf	_error
  5631     04C7  3000               	movlw	0
  5632     04C8  00D9               	movwf	_error+1
  5633     04C9                     i1l62:
  5634     04C9  0008               	return
  5635     04CA                     __end_of_DVRT_Error_Callback:
  5636                           
  5637                           	psect	text33
  5638     04D8                     __ptext33:	
  5639 ;; *************** function _EUSART1_DefaultOverrunErrorCallback *****************
  5640 ;; Defined at:
  5641 ;;		line 405 in file "mcc_generated_files/uart/src/eusart1.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;		None
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;		None
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		None
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5655 ;;      Params:         0       0       0       0       0       0       0       0
  5656 ;;      Locals:         0       0       0       0       0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0
  5658 ;;      Totals:         0       0       0       0       0       0       0       0
  5659 ;;Total ram usage:        0 bytes
  5660 ;; Hardware stack levels used: 1
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_EUSART1_Initialize
  5665 ;;		_EUSART1_ReceiveISR
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669     04D8                     _EUSART1_DefaultOverrunErrorCallback:	
  5670                           ;psect for function _EUSART1_DefaultOverrunErrorCallback
  5671                           
  5672     04D8                     i1l1912:	
  5673                           ;incstack = 0
  5674                           ; Regs used in _EUSART1_DefaultOverrunErrorCallback: []
  5675                           
  5676                           
  5677                           ;mcc_generated_files/uart/src/eusart1.c: 408:     RC1STAbits.CREN = 0;
  5678     04D8  0142               	movlb	2	; select bank2
  5679     04D9  121D               	bcf	29,4	;volatile
  5680                           
  5681                           ;mcc_generated_files/uart/src/eusart1.c: 409:     RC1STAbits.CREN = 1;
  5682     04DA  161D               	bsf	29,4	;volatile
  5683     04DB                     i1l531:
  5684     04DB  0008               	return
  5685     04DC                     __end_of_EUSART1_DefaultOverrunErrorCallback:
  5686     0001                     ___latbits      equ	1
  5687     007E                     btemp           set	126	;btemp
  5688     007E                     int$flags       set	126
  5689     007E                     wtemp0          set	126
  5690                           
  5691                           	psect	config
  5692                           
  5693                           ;Config register CONFIG1 @ 0x8007
  5694                           ;	External Oscillator Mode Selection bits
  5695                           ;	FEXTOSC = ECH, EC (external clock) 16 MHz and above
  5696                           ;	Power-up Default Value for COSC bits
  5697                           ;	RSTOSC = HFINTOSC_32MHZ, HFINTOSC (32 MHz)
  5698                           ;	Clock Out Enable bit
  5699                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  5700                           ;	VDD Range Analog Calibration Selection bit
  5701                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  5702     8007                     	org	32775
  5703     8007  3FCF               	dw	16335
  5704                           
  5705                           ;Config register CONFIG2 @ 0x8008
  5706                           ;	Master Clear Enable bit
  5707                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  5708                           ;	Power-up Timer Selection bits
  5709                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  5710                           ;	WDT Operating Mode bits
  5711                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  5712                           ;	Brown-out Reset Enable bits
  5713                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5714                           ;	Brown-out Reset Voltage Selection bit
  5715                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  5716                           ;	PPSLOCKED One-Way Set Enable bit
  5717                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  5718                           ;	Stack Overflow/Underflow Reset Enable bit
  5719                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5720     8008                     	org	32776
  5721     8008  3FE7               	dw	16359
  5722                           
  5723                           ;Config register CONFIG4 @ 0x800A
  5724                           ;	Boot Block Size Selection bits
  5725                           ;	BBSIZE = BB512, 512 words boot block size
  5726                           ;	Boot Block Enable bit
  5727                           ;	BBEN = OFF, Boot Block is disabled
  5728                           ;	SAF Enable bit
  5729                           ;	SAFEN = OFF, SAF is disabled
  5730                           ;	Application Block Write Protection bit
  5731                           ;	WRTAPP = OFF, Application Block is not write-protected
  5732                           ;	Boot Block Write Protection bit
  5733                           ;	WRTB = OFF, Boot Block is not write-protected
  5734                           ;	Configuration Registers Write Protection bit
  5735                           ;	WRTC = OFF, Configuration Registers are not write-protected
  5736                           ;	Storage Area Flash (SAF) Write Protection bit
  5737                           ;	WRTSAF = OFF, SAF is not write-protected
  5738                           ;	Low Voltage Programming Enable bit
  5739                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  5740     800A                     	org	32778
  5741     800A  3FFF               	dw	16383
  5742                           
  5743                           ;Config register CONFIG5 @ 0x800B
  5744                           ;	User Program Flash Memory Code Protection bit
  5745                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  5746     800B                     	org	32779
  5747     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    54
    Data        3
    BSS         193
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      7      79
    BANK1            80      2      62
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    DVPMT$address	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    DVRT$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> DVRT_Initialize(), 

    DVRT$Process	PTR FTN()void  size(2) Largest target is 1
		 -> DVRT_Process(), 

    DVRT_ReceivedCmd$DVPMT$address	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    DVRT_ReceivedCmd$Var$variableAddress	PTR unsigned char  size(2) Largest target is 0

    DVRT_ReceivedCmd$variableAddress	PTR unsigned char  size(2) Largest target is 0

    EUSART1_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DVRT_Error_Callback(), EUSART1_DefaultFramingErrorCallback(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DVRT_Error_Callback(), EUSART1_DefaultFramingErrorCallback(), NULL(), 

    EUSART1_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DVRT_Error_Callback(), EUSART1_DefaultOverrunErrorCallback(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DVRT_Error_Callback(), EUSART1_DefaultOverrunErrorCallback(), NULL(), 

    EUSART1_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_ReceiveISR(), NULL(), 

    EUSART1_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitISR(), NULL(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    S149$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> DVRT_Initialize(), 

    S149$Process	PTR FTN()void  size(2) Largest target is 1
		 -> DVRT_Process(), 

    S160DVRT_VariablePointerTableEntry$address	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S169DVRT_VariableUpdate$variableAddress	PTR unsigned char  size(2) Largest target is 0

    S53$17$0	PTR FTN()void  size(2) Largest target is 0

    S53$18$0	PTR FTN()void  size(2) Largest target is 0

    S53$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> DVRT_Error_Callback(), EUSART1_DefaultFramingErrorCallback(), 

    S53$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> DVRT_Error_Callback(), EUSART1_DefaultOverrunErrorCallback(), 

    S53$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S53$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    S53$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    S53$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S53$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S53$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S53$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S53$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    S53$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    S53$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S53$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    S53$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    S53$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    S53$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    S53$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    S53$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    S53$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S53$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    S53$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_RxCompleteCallbackRegister(), 

    S53$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    S53$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    S53$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S53$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_TxCompleteCallbackRegister(), 

    S53$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    TMR2_PeriodMatchCallback	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultPeriodMatchCallback(), NULL(), 

    UART	PTR const struct . size(2) Largest target is 48
		 -> UART1(CODE[48]), 

    UART$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    UART$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    UART$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    UART$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    UART$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    UART$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    UART$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    UART$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    UART$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    UART$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    UART$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    UART$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_RxCompleteCallbackRegister(), 

    UART$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    UART$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    UART$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_TxCompleteCallbackRegister(), 

    UART$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_DVRT_Initialize
    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_FramingErrorCallbackRegister
    _EUSART1_Initialize->_EUSART1_OverrunErrorCallbackRegister
    _DVRT_Initialize->___bmul
    _PWM3_Initialize2->_TMR2_PeriodSet
    _DVRT_Process->_DVRT_HandleCommand
    _DVRT_Process->_DVRT_WritePacket
    _DVRT_WritePacket->_DVRT_UART_WriteByte
    _DVRT_WritePacket->___bmul
    _DVRT_UART_WriteByte->_EUSART1_Write
    _DVRT_HandleCommand->___wmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_ReceiveISR

Critical Paths under _main in BANK0

    _main->_DVRT_Process
    _DVRT_Process->_DVRT_HandleCommand

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1728
                                              0 BANK1      2     2      0
                       _DVRT_Process
                   _PWM3_Initialize2
                 _PWM3_LoadDutyValue
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     526
                   _CLOCK_Initialize
                    _DVRT_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0      92
_EUSART1_FramingErrorCallbackRegiste
_EUSART1_OverrunErrorCallbackRegiste
 ---------------------------------------------------------------------------------
 (2) _DVRT_Initialize                                      1     1      0     411
                                              5 COMMON     1     1      0
_EUSART1_FramingErrorCallbackRegiste *
_EUSART1_OverrunErrorCallbackRegiste *
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _EUSART1_OverrunErrorCallbackRegister                 2     0      2      46
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_FramingErrorCallbackRegister                 2     0      2      46
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2      45
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM3_Initialize2                                     0     0      0      29
                     _TMR2_PeriodSet
 ---------------------------------------------------------------------------------
 (2) _TMR2_PeriodSet                                       1     1      0      29
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DVRT_Process                                         3     3      0    1128
                                              4 BANK0      3     3      0
                 _DVRT_HandleCommand
                   _DVRT_WritePacket
                   _EUSART1_ErrorGet
                  _EUSART1_IsRxReady *
                       _EUSART1_Read *
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         2     2      0      47
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_IsRxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_ErrorGet                                     1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DVRT_WritePacket                                     4     4      0     484
                                              5 COMMON     4     4      0
                _DVRT_UART_WriteByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _DVRT_UART_WriteByte                                  1     1      0      97
                                              4 COMMON     1     1      0
                  _EUSART1_IsTxReady *
                      _EUSART1_Write *
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        2     1      1      68
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (4) _EUSART1_IsTxReady                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DVRT_HandleCommand                                   5     5      0     597
                                              8 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     148
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     189
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0      91
                                NULL *
                 _EUSART1_ReceiveISR *
                _EUSART1_TransmitISR *
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                                NULL *
    _TMR2_DefaultPeriodMatchCallback *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultPeriodMatchCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
                _DVRT_Error_Callback *
_EUSART1_DefaultFramingErrorCallback *
_EUSART1_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART1_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _DVRT_Error_Callback                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DVRT_Process
     _DVRT_HandleCommand
       ___bmul
       ___wmul
     _DVRT_WritePacket
       _DVRT_UART_WriteByte
         _EUSART1_IsTxReady *
         _EUSART1_Write *
       ___bmul
     _EUSART1_ErrorGet
     _EUSART1_IsRxReady *
     _EUSART1_Read *
   _PWM3_Initialize2
     _TMR2_PeriodSet
   _PWM3_LoadDutyValue
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _DVRT_Initialize
       _EUSART1_FramingErrorCallbackRegister *
       _EUSART1_OverrunErrorCallbackRegister *
       ___bmul *
     _EUSART1_Initialize
       _EUSART1_FramingErrorCallbackRegister
       _EUSART1_OverrunErrorCallbackRegister
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _TMR2_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART1_ReceiveISR *
     NULL(Fake) *
     _DVRT_Error_Callback *
     _EUSART1_DefaultFramingErrorCallback *
     _EUSART1_DefaultOverrunErrorCallback *
   _EUSART1_TransmitISR *
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultPeriodMatchCallback *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14      9      11     78.6%
BANK0               80      7      79     98.8%
BANK1               80      2      62     77.5%
BANK2               80      0      64     80.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     216      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr  2 15:32:29 2025

                           _eusart1TxBufferRemaining 005C                                       ___bmul@product 0073  
                                                 l44 03BA                                                   l54 01F5  
                                                 l58 0265                                                   l75 01A1  
                                                 l59 028B                                                   l92 0103  
                                                 l76 01A4                                                   l93 0106  
                                                 l94 010D                                                   l95 0111  
                                                 l96 012F                                  ___wmul@multiplicand 0074  
                                                l105 04B7                                                  l108 0434  
                                                l205 049E                                                  l312 04D3  
                                                l228 04C3                                                  l502 0409  
                                                l248 041F                                                  l257 04CE  
                                                l433 032D                                                  l177 02FA  
                                                l516 037E                                                  l519 0380  
                                                l535 0493                                                  l288 0448  
                                                l539 0487                                                  l492 04B0  
                                                l664 038B                                                  l576 03EF  
                                                l489 04A7                                                  l690 045B  
                                                l666 039F                                                  l498 047B  
                                                u600 03AF                                                  u601 03AE  
                                                u610 048E                                                  u611 048D  
                                                u620 0482                                                  u621 0481  
                                                u560 04AF                                                  u800 0404  
                                                u561 04AD                                                  u801 0403  
                                                u570 04B0                                                  u580 0363  
                                                u581 0362                                                  u590 036D  
                                                u591 036C                                                  u780 04A6  
                                                u781 04A4                                                  u790 04A7  
                                                u885 042F                                      _TMR2_Initialize 0435  
                                                wreg 0009                                         _BAUD1CONbits 011F  
                                               l2100 0390                                                 l2020 03E0  
                                               l2110 044B                                                 l2102 0395  
                                               l2030 03EC                                                 l2022 03E2  
                                               l2014 03D6                                                 l2112 044F  
                                               l2104 039B                                                 l2024 03E5  
                                               l2016 03DA                                                 l2114 0451  
                                               l2130 01BE                                                 l2122 01A5  
                                               l2210 0130                                                 l2026 03E7  
                                               l2018 03DC                                                 l2116 0453  
                                               l2108 044A                                                 l2140 01D8  
                                               l2124 01AE                                                 l2220 0156  
                                               l2212 0137                                                 l2028 03EA  
                                               l2118 045A                                                 l2206 0115  
                                               l2142 01DA                                                 l2126 01B1  
                                               l2230 017D                                                 l2214 013A  
                                               l2222 0158                                                 l2150 0246  
                                               l2208 012D                                                 l2144 01E9  
                                               l2136 01BF                                                 l2128 01B5  
                                               l2240 019D                                                 l2232 018F  
                                               l2224 0166                                                 l2216 013C  
                                               l2160 025F                                                 l2170 0063  
                                               l2146 01EB                                                 l2138 01C1  
                                               l2234 0191                                                 l2226 0178  
                                               l2218 013F                                                 l2162 0267  
                                               l2250 0419                                                 l2242 040A  
                                               l2180 0085                                                 l2172 006A  
                                               l2148 01F1                                                 l2236 0195  
                                               l2228 017A                                                 l2164 026F  
                                               l2156 0247                                                 l2252 041C  
                                               l2244 0410                                                 l2260 0293  
                                               l2094 0381                                                 l2190 00EF  
                                               l2182 00D0                                                 l2174 0071  
                                               l2238 0198                                                 l2166 0271  
                                               l2158 025D                                                 l2246 0413  
                                               l2270 02B0                                                 l2262 0294  
                                               l2254 028C                                                 l2096 0383  
                                               l2192 00F1                                                 l2184 00D2  
                                               l1640 0363                                                 l2168 027E  
                                               l1800 02CA                                                 l2248 0416  
                                               l2280 02C1                                                 l2272 02B2  
                                               l2264 029B                                                 l2256 028F  
                                               l2098 0387                                                 l2194 00F9  
                                               l2186 00DA                                                 l2178 0083  
                                               l1634 04A8                                                 l1650 0379  
                                               l1642 0367                                                 l1810 02D5  
                                               l1802 02CC                                                 l2274 02B7  
                                               l2266 02A6                                                 l2258 0292  
                                               l2196 0100                                                 l2188 00DC  
                                               l1652 037B                                                 l1644 036D  
                                               l1900 03FC                                                 l1660 04BE  
                                               l1820 02E5                                                 l1812 02DD  
                                               l1804 02CE                                                 l2276 02B9  
                                               l2268 02A9                                                 l2198 0108  
                                               l1646 0373                                                 l1638 035E  
                                               l1654 03A1                                                 l1902 03FE  
                                               l1662 0488                                                 l1830 0494  
                                               l1822 02E7                                                 l1814 02DF  
                                               l1806 02D0                                                 l2278 02BE  
                                               l1648 0377                                                 l1656 03A1  
                                               l1904 0404                                                 l1664 048E  
                                               l1832 0497                                                 l1824 02E9  
                                               l1816 02E1                                                 l1808 02D3  
                                               l1840 043A                                                 l1658 03AF  
                                               l1906 0406                                                 l1834 04CA  
                                               l1666 047C                                                 l1850 02FB  
                                               l1826 02EC                                                 l1818 02E3  
                                               l1842 043D                                                 l1748 046E  
                                               l1908 0408                                                 l1668 0482  
                                               l1860 030E                                                 l1852 02FD  
                                               l1828 02EF                                                 l1844 0442  
                                               l1836 0435                                                 l1870 0321  
                                               l1862 0310                                                 l1854 0302  
                                               l1846 0444                                                 l1838 0438  
                                               l1880 0329                                                 l1872 0324  
                                               l1864 0312                                                 l1856 0309  
                                               l1792 04B1                                                 l1848 0445  
                                               l1946 0420                                                 l1882 032A  
                                               l1874 0325                                                 l1866 0313  
                                               l1858 030C                                                 l1794 04B4  
                                               l1892 03F0                                                 l1884 032B  
                                               l1876 0326                                                 l1868 031A  
                                               l1796 04B5                                                 l1894 03F0  
                                               l1886 04D0                                                 l1878 0328  
                                               l1798 02C6                                                 l1888 049F  
                                               l1896 03F6                                                 l1898 03FA  
                                               u1100 0387                                                 u1101 0386  
                                               u1200 006A                                                 u1201 0069  
                                               u1130 039B                                                 u1210 0071  
                                               u1131 039A                                                 u1115 038C  
                                               u1211 0070                                                 u1140 044F  
                                               u1220 0082                                                 u1300 019D  
                                               u1141 044E                                                 u1125 0391  
                                               u1221 0081                                                 u1301 019C  
                                               u1150 045A                                                 u1230 00D9  
                                               u1310 01A1                                                 u1151 0459  
                                               u1231 00D8                                                 u1311 01A0  
                                               u1240 00F8                                                 u1160 01B5  
                                               u1320 029B                                                 u1241 00F7  
                                               u1161 01B4                                                 u1321 029A  
                                               u1170 01E9                                                 u1250 0137  
                                               u1330 02B0                                                 u1171 01E8  
                                               u1251 0136                                                 u1331 02AF  
                                               u1180 01F1                                                 u1260 0166  
                                               u1340 02B7                                                 u1181 01F0  
                                               u1261 0165                                                 u1341 02B6  
                                               _LATA 0018                                                 u1270 0178  
                                               u1190 0265                                                 u1350 02BE  
                                               _LATB 0019                                                 u1271 0177  
                                               u1191 0264                                                 u1351 02BD  
                                               _LATC 001A                                                 u1280 018F  
                                               u1281 018E                                                 u1290 0195  
                                               u1291 0194                                                 u1275 0174  
                                               u1285 018B                                                 _T2PR 028D  
                                               _DVRT 04D4                                                 i1l62 04C9  
                                               _UART 006A                                                 _WPUA 1F39  
                                               _WPUB 1F44                                                 _WPUC 1F4F  
                                _EUSART1_TransmitISR 03BB                                        _EUSART1_Write 035E  
                                               _main 028C                                        ?_EUSART1_Read 0070  
                                               fsr0h 0005                                                 fsr1h 0007  
                                               indf0 0000                                                 fsr0l 0004  
                                               indf1 0001                                                 fsr1l 0006  
                                               btemp 007E                          _INT_DefaultInterruptHandler 0000  
                              ??_DVRT_Error_Callback 0070                                                 start 0037  
                    __end_of_INT_SetInterruptHandler 04C4                                      _DVRT_Initialize 0246  
                                  ___bmul@multiplier 0074                                 ?_EUSART1_TransmitISR 0070  
                              _eusart1RxStatusBuffer 0120                                                ?_main 0070  
                 _EUSART1_TxCompleteCallbackRegister 0000                                                _T2CON 028E  
                      EUSART1_TransmitISR@tempTxTail 0070                                                _IOCAF 1F3F  
                                              _T2HLT 028F                                                _IOCBF 1F4A  
                                              _IOCCF 1F55                                                _IOCAN 1F3E  
                                              _IOCAP 1F3D                                                _IOCBN 1F49  
                                              _IOCBP 1F48                                                _IOCCN 1F54  
                                              _IOCCP 1F53                                                i1l211 001A  
                                              i1l212 0035                                                _T2TMR 028C  
                                              i1l213 0029                                                i1l218 0035  
                                              _T2RST 0291                                                i1l334 04E1  
                                              i1l512 0245                                                i1l328 046D  
                                              i1l522 03D3                                                i1l531 04DB  
                                              i1l525 03D5                                                _DVPMT 0020  
                                              i1l528 04E2                                                _OSCEN 0891  
                                              _UART1 032E                                                _TRISA 0012  
                                              _TRISB 0013                                                _TRISC 0014  
                                              u90_20 0203                                                u90_21 0202  
                                              u91_20 0210                                                u91_21 020F  
                                              u92_20 021A                                                u92_21 0219  
                                              u93_20 0227                                                u93_21 0226  
                                              u94_20 0239                                                u94_21 0238  
                                              u95_20 03C2                                                u95_21 03C1  
                                              u96_20 000A                                                u96_21 0009  
                                              u89_20 0463                                                u97_20 000F  
                                              u89_21 0462                                                u97_21 000E  
                                              u98_20 0013                                                u98_21 0012  
                                              u99_20 001E                                                u99_21 001D  
       __end_of_EUSART1_FramingErrorCallbackRegister 0494               ??_EUSART1_FramingErrorCallbackRegister 0074  
              ?_EUSART1_FramingErrorCallbackRegister 0072                 _EUSART1_FramingErrorCallbackRegister 0488  
                                   __end_of_TMR2_ISR 046E                                                _error 0058  
                                        _xwaitPeriod 005F                                       ?_EUSART1_Write 0072  
                            __end_of_PWM3_Initialize 04B8                                                pclath 000A  
                                     ??_EUSART1_Read 0072                                _EUSART1_AutoBaudQuery 0000  
                                              status 0003                                                wtemp0 007E  
                            EUSART1_Write@tempTxHead 0073                                         __end_of_DVRT 04D8  
                                    __initialization 0039                           __end_of_EUSART1_Initialize 032E  
                                       __end_of_main 02C6                   _EUSART1_RxCompleteInterruptHandler 0044  
                              ??_EUSART1_TransmitISR 0070                              __end_of_TMR2_Initialize 0449  
                        ?_INTERRUPT_InterruptManager 0070                           __end_of_EUSART1_ReceiveISR 0246  
                                             ??_main 00DC                                     _DVRT_ReceivedCmd 00C0  
EUSART1_OverrunErrorCallbackRegister@callbackHandler 0072  EUSART1_FramingErrorCallbackRegister@callbackHandler 0072  
                                      ?_DVRT_Process 0070                                               _ANSELA 1F38  
                                             _ANSELB 1F43                                               _ANSELC 1F4E  
                                             _RC1REG 0119                                               _RA2PPS 1F12  
                                             _RC0PPS 1F20                                               _RC1STA 011D  
                                             u100_20 0022                                               u100_21 0021  
                                             u101_20 002D                                               u101_21 002C  
                                             u102_20 0031                                               u102_21 0030  
                                             i1l2010 03D0                                               i1l2002 03BB  
                                             i1l2004 03C2                                               i1l2006 03C9  
                                             i1l2008 03CE                                               i1l2040 001E  
                                             i1l2032 0006                                               i1l2042 0022  
                                             i1l2034 000A                                               i1l2044 002D  
                                             i1l2036 000F                                               i1l2046 0031  
                                             i1l2038 0013                                               _ODCONA 1F3A  
                                             _ODCONB 1F45                                               _ODCONC 1F50  
                                             i1l1912 04D8                                               i1l1746 04C4  
                                             i1l1950 0463                                               i1l1952 0468  
                                             i1l1970 01FE                                               i1l1954 046B  
                                             i1l1980 021A                                               i1l1972 0203  
                                             i1l1948 045C                                               i1l1990 0233  
                                             i1l1982 0220                                               i1l1974 0209  
                                             i1l1984 0227                                               i1l1976 0210  
                                             i1l1968 01F6                                               i1l1994 023A  
                                             i1l1986 022C                                               i1l1978 0215  
                                             i1l1996 0240                                               i1l1988 022F  
                                             i1l1998 0242                                               _INLVLA 1F3C  
                                             _INLVLB 1F47                                               _INLVLC 1F52  
                            __end_of_DVRT_Initialize 028C                                               _OSCFRQ 0893  
                                      main@increment 006C                                               _RX1PPS 1ECB  
                                _DVRT_UART_WriteByte 03A0                                               _TX1REG 011A  
                                             _TX1STA 011E                                               _DVflag 0060  
                                             ___bmul 0449                                               ___wmul 0381  
                                             _dvIdFw 04DF                                 ?_DVRT_UART_WriteByte 0070  
                                  ?_CLOCK_Initialize 0070                             __end_of_PWM3_Initialize2 03F0  
                                 ??_CLOCK_Initialize 0072                         EUSART1_ReceiveISR@tempRxHead 0071  
       __end_of_EUSART1_OverrunErrorCallbackRegister 0488               ??_EUSART1_OverrunErrorCallbackRegister 0074  
              ?_EUSART1_OverrunErrorCallbackRegister 0072                 _EUSART1_OverrunErrorCallbackRegister 047C  
                                     ??_DVRT_Process 0067                                      ??_EUSART1_Write 0073  
            INT_SetInterruptHandler@InterruptHandler 0072                                      _eusart1RxBuffer 00A0  
                                    _eusart1TxBuffer 0038                                     ?_PWM3_Initialize 0070  
                                  _SYSTEM_Initialize 040A                                        _DVCmdInterval 0052  
                            __end_of__initialization 005F                                   ?_SYSTEM_Initialize 0070  
                                      __end_of_UART1 035E                                  ___bmul@multiplicand 0072  
                         _EUSART1_TxInterruptHandler 004E                                       __pcstackCOMMON 0070  
                                       __pidataBANK0 04DC                                  ??_SYSTEM_Initialize 0076  
                                          ?_TMR2_ISR 0070                                ??_DVRT_UART_WriteByte 0074  
                                   ?_TMR2_Initialize 0070                                 __end_of_EUSART1_Read 040A  
                          __end_of_SYSTEM_Initialize 0420                                        _eusart1RxHead 007A  
                                      _eusart1TxHead 005E                                        _eusart1RxTail 0079  
                                         __pbssBANK0 0020                                           __pbssBANK1 00A0  
                                         __pbssBANK2 0120                                        _eusart1TxTail 005D  
                                   ?_DVRT_Initialize 0070                                           __pmaintext 028C  
                                            ?___bmul 0072                                              ?___wmul 0072  
                                         ??_TMR2_ISR 0070                                           __pintentry 0004  
                                   _EUSART1_IsTxDone 0000                                     _EUSART1_ErrorGet 046E  
                                            _SP1BRGH 011C                                              _SP1BRGL 011B  
                                            _OSCTUNE 0892                                              _PWM3DCH 0315  
                                            _PWM3DCL 0314                                              _PWM3CON 0316  
                                            _SLRCONA 1F3B                                              _SLRCONB 1F46  
                                            _SLRCONC 1F51                          __end_of_DVRT_Error_Callback 04CA  
                                   _DVStreamInterval 0056                                     _DVRT_WritePacket 01A5  
                               _EUSART1_Deinitialize 0000                               _EUSART1_TransmitEnable 0000  
                         EUSART1_ReceiveISR@regValue 0070                             _DVStreamInterval_Counter 0054  
                               __end_of_DVRT_Process 01A5                                              __ptext1 040A  
                                            __ptext2 0435                                              __ptext3 04B1  
                                            __ptext4 02C6                                              __ptext5 0494  
                                            __ptext6 04BE                                              __ptext7 02FB  
                                            __ptext8 0246                                              __ptext9 047C  
                                   DVRT_Initialize@i 0075                                            _T2CONbits 028E  
                                 _EUSART1_Initialize 02FB                             ??_PIN_MANAGER_Initialize 0072  
                                          _T2HLTbits 028F                              _INT_SetInterruptHandler 04BE  
                                            clrloop0 04B9                                   _EUSART1_ReceiveISR 01F6  
                               end_of_initialization 005F                                            _T2RSTbits 0291  
                                ?_EUSART1_Initialize 0070                          _EUSART1_OverrunErrorHandler 0040  
                                ?_EUSART1_ReceiveISR 0070                          __end_of_EUSART1_TransmitISR 03D6  
                               ??_EUSART1_Initialize 0074                                 ??_EUSART1_ReceiveISR 0070  
                                  ?_PWM3_Initialize2 0070                                            _TRISAbits 0012  
                                 ??_PWM3_Initialize2 0073                                  EUSART1_Write@txData 0072  
                 _EUSART1_TxCompleteInterruptHandler 0046                            DVRT_UART_WriteByte@txData 0074  
                                       _EUSART1_Read 03F0                           __end_of_PWM3_LoadDutyValue 0435  
                                     _TMR2_PeriodSet 04CF              __end_of_TMR2_DefaultPeriodMatchCallback 04E2  
                  ??_TMR2_DefaultPeriodMatchCallback 0070                     ?_TMR2_DefaultPeriodMatchCallback 0070  
                    _TMR2_DefaultPeriodMatchCallback 04E1                         __end_of_INTERRUPT_Initialize 049F  
                                     __end_of___bmul 045C                                       __end_of___wmul 03A0  
                                     __end_of_dvIdFw 04E1                            ??_INT_SetInterruptHandler 0074  
                                start_initialization 0039                                __end_of_EUSART1_Write 0381  
                             __end_of_TMR2_PeriodSet 04D4                             __end_of_EUSART1_ErrorGet 047C  
                        __end_of_DVRT_UART_WriteByte 03BB                                             ??___bmul 0073  
                                           ??___wmul 0076                                          __pdataBANK0 006A  
                           __end_of_DVRT_WritePacket 01F6                                       _eusart1RxCount 005B  
                             EUSART1_Read@tempRxTail 0072                                          __pbssCOMMON 0079  
                                          ___latbits 0001                                        __pcstackBANK0 0063  
                                      __pcstackBANK1 00DC                                         _DVRT_Process 0130  
                         __end_of_DVRT_HandleCommand 0130                                      ?_TMR2_PeriodSet 0070  
                                          __pnvBANK0 006D                               _PIN_MANAGER_Initialize 02C6  
                         DVRT_HandleCommand@VARcount 0078                         ??_INTERRUPT_InterruptManager 0072  
                                           _BAUD1CON 011F                                    _EUSART1_IsRxReady 049F  
                                  _EUSART1_IsTxReady 04A8                                   ?_EUSART1_IsRxReady 0070  
                                 ?_EUSART1_IsTxReady 0070                                             _T2CLKCON 0290  
                                          _dutyValue 005A                                 _INTERRUPT_Initialize 0494  
                                   _CLOCK_Initialize 04CA                                       ___wmul@product 0076  
                                ??_EUSART1_IsRxReady 0072                   _EUSART1_RxCompleteCallbackRegister 0000  
                                ??_EUSART1_IsTxReady 0072                                            clear_ram0 04B8  
                                           _PIE1bits 0717                                             _PIR0bits 070C  
                                           _PIR1bits 070D                                             _TMR2_ISR 045C  
                              _DVCmdInterval_Counter 0050                                    ??_PWM3_Initialize 0072  
                                  ___wmul@multiplier 0072                            __end_of_EUSART1_IsRxReady 04A8  
                          __end_of_EUSART1_IsTxReady 04B1                                ?_INTERRUPT_Initialize 0070  
                                _EUSART1_AutoBaudSet 0000                                    ??_TMR2_Initialize 0072  
                              EUSART1_Read@readValue 0073                              _EUSART1_TransmitDisable 0000  
                                  ??_DVRT_Initialize 0075                                   _PWM3_LoadDutyValue 0420  
                                         _ANSELAbits 1F38          __end_of_EUSART1_DefaultFramingErrorCallback 04E3  
              ??_EUSART1_DefaultFramingErrorCallback 0070                 ?_EUSART1_DefaultFramingErrorCallback 0070  
                _EUSART1_DefaultFramingErrorCallback 04E2                                             __ptext10 0488  
                                           __ptext11 04CA                                             __ptext20 03A0  
                                           __ptext12 0420                                             __ptext21 035E  
                                           __ptext13 03D6                                             __ptext30 01F6  
                                           __ptext22 04A8                                             __ptext14 04CF  
                                           __ptext31 04E2                                             __ptext23 0063  
                                           __ptext15 0130                                             __ptext32 04C4  
                                           __ptext24 0381                                             __ptext16 03F0  
                                           __ptext33 04D8                                             __ptext25 0449  
                                           __ptext17 049F                                             __ptext18 046E  
                                           __ptext27 045C                                             __ptext19 01A5  
                                           __ptext28 04E1                                             __ptext29 03BB  
                                ?_PWM3_LoadDutyValue 0072                                    DVRT_WritePacket@i 0078  
                                  DVRT_WritePacket@k 0077                                    ?_EUSART1_ErrorGet 0070  
                                           _rxBufPtr 0062                                           _RC1STAbits 011D  
                                 ??_EUSART1_ErrorGet 0072                                 ??_PWM3_LoadDutyValue 0074  
                                           int$flags 007E                   __end_of_INTERRUPT_InterruptManager 0037  
                         _INTERRUPT_InterruptManager 0004                          _EUSART1_FramingErrorHandler 0042  
                                  ?_DVRT_WritePacket 0070                                           _INTCONbits 000B  
                                 ??_DVRT_WritePacket 0075                                 _INT_InterruptHandler 004A  
                             ??_INTERRUPT_Initialize 0074                                          _tickCounter 0061  
                                   ??_TMR2_PeriodSet 0072                                             intlevel1 0000  
                            ?_PIN_MANAGER_Initialize 0070                              TMR2_PeriodSet@periodVal 0072  
                         _EUSART1_RxInterruptHandler 004C                             ?_INT_SetInterruptHandler 0072  
                                 _DVRT_HandleCommand 0063                          PWM3_LoadDutyValue@dutyValue 0072  
                                 _eusart1RxLastError 0048                             __end_of_CLOCK_Initialize 04CF  
                                      __pstringtext1 04D4                                        __pstringtext2 04DF  
                                      __pstringtext3 032E                                  ?_DVRT_HandleCommand 0070  
                                _DVRT_Error_Callback 04C4          __end_of_EUSART1_DefaultOverrunErrorCallback 04DC  
              ??_EUSART1_DefaultOverrunErrorCallback 0070                 ?_EUSART1_DefaultOverrunErrorCallback 0070  
                _EUSART1_DefaultOverrunErrorCallback 04D8                                           _TX1STAbits 011E  
                     __end_of_PIN_MANAGER_Initialize 02FB                                     _PWM3_Initialize2 03D6  
                               ??_DVRT_HandleCommand 0063                                 ?_DVRT_Error_Callback 0070  
                                    _PWM3_Initialize 04B1                             _TMR2_PeriodMatchCallback 006D  
